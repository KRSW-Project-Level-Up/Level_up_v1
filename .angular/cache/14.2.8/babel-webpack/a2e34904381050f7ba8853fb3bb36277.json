{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* eslint-disable @typescript-eslint/promise-function-async */\n\nvar server_address_1 = require(\"../server-address\");\n\nfunction resolveToSelf(address) {\n  return Promise.resolve([address]);\n}\n\nvar ConfiguredCustomResolver =\n/** @class */\nfunction () {\n  function ConfiguredCustomResolver(resolverFunction) {\n    this._resolverFunction = resolverFunction !== null && resolverFunction !== void 0 ? resolverFunction : resolveToSelf;\n  }\n\n  ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n    }).then(function (resolved) {\n      if (!Array.isArray(resolved)) {\n        throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' + // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n        \"Each address is '<host>:<port>'. Got: \".concat(resolved));\n      }\n\n      return resolved.map(function (r) {\n        return server_address_1.ServerAddress.fromUrl(r);\n      });\n    });\n  };\n\n  return ConfiguredCustomResolver;\n}();\n\nexports.default = ConfiguredCustomResolver;","map":{"version":3,"names":["Object","defineProperty","exports","value","server_address_1","require","resolveToSelf","address","Promise","resolve","ConfiguredCustomResolver","resolverFunction","_resolverFunction","prototype","seedRouter","_this","asHostPort","then","resolved","Array","isArray","TypeError","concat","map","r","ServerAddress","fromUrl","default"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-core/lib/internal/resolver/configured-custom-resolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/promise-function-async */\nvar server_address_1 = require(\"../server-address\");\nfunction resolveToSelf(address) {\n    return Promise.resolve([address]);\n}\nvar ConfiguredCustomResolver = /** @class */ (function () {\n    function ConfiguredCustomResolver(resolverFunction) {\n        this._resolverFunction = resolverFunction !== null && resolverFunction !== void 0 ? resolverFunction : resolveToSelf;\n    }\n    ConfiguredCustomResolver.prototype.resolve = function (seedRouter) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            return resolve(_this._resolverFunction(seedRouter.asHostPort()));\n        }).then(function (resolved) {\n            if (!Array.isArray(resolved)) {\n                throw new TypeError('Configured resolver function should either return an array of addresses or a Promise resolved with an array of addresses.' +\n                    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n                    \"Each address is '<host>:<port>'. Got: \".concat(resolved));\n            }\n            return resolved.map(function (r) { return server_address_1.ServerAddress.fromUrl(r); });\n        });\n    };\n    return ConfiguredCustomResolver;\n}());\nexports.default = ConfiguredCustomResolver;\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,IAAIC,gBAAgB,GAAGC,OAAO,CAAC,mBAAD,CAA9B;;AACA,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;EAC5B,OAAOC,OAAO,CAACC,OAAR,CAAgB,CAACF,OAAD,CAAhB,CAAP;AACH;;AACD,IAAIG,wBAAwB;AAAG;AAAe,YAAY;EACtD,SAASA,wBAAT,CAAkCC,gBAAlC,EAAoD;IAChD,KAAKC,iBAAL,GAAyBD,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2DA,gBAA3D,GAA8EL,aAAvG;EACH;;EACDI,wBAAwB,CAACG,SAAzB,CAAmCJ,OAAnC,GAA6C,UAAUK,UAAV,EAAsB;IAC/D,IAAIC,KAAK,GAAG,IAAZ;;IACA,OAAO,IAAIP,OAAJ,CAAY,UAAUC,OAAV,EAAmB;MAClC,OAAOA,OAAO,CAACM,KAAK,CAACH,iBAAN,CAAwBE,UAAU,CAACE,UAAX,EAAxB,CAAD,CAAd;IACH,CAFM,EAEJC,IAFI,CAEC,UAAUC,QAAV,EAAoB;MACxB,IAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,QAAd,CAAL,EAA8B;QAC1B,MAAM,IAAIG,SAAJ,CAAc,8HAChB;QACA,yCAAyCC,MAAzC,CAAgDJ,QAAhD,CAFE,CAAN;MAGH;;MACD,OAAOA,QAAQ,CAACK,GAAT,CAAa,UAAUC,CAAV,EAAa;QAAE,OAAOpB,gBAAgB,CAACqB,aAAjB,CAA+BC,OAA/B,CAAuCF,CAAvC,CAAP;MAAmD,CAA/E,CAAP;IACH,CATM,CAAP;EAUH,CAZD;;EAaA,OAAOd,wBAAP;AACH,CAlB6C,EAA9C;;AAmBAR,OAAO,CAACyB,OAAR,GAAkBjB,wBAAlB"},"metadata":{},"sourceType":"script"}