{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPoint = exports.Point = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar util_1 = require(\"./internal/util\");\n\nvar POINT_IDENTIFIER_PROPERTY = '__isPoint__';\n/**\n * Represents a single two or three-dimensional point in a particular coordinate reference system.\n * Created `Point` objects are frozen with `Object.freeze()` in constructor and thus immutable.\n */\n\nvar Point =\n/** @class */\nfunction () {\n  /**\n   * @constructor\n   * @param {T} srid - The coordinate reference system identifier.\n   * @param {number} x - The `x` coordinate of the point.\n   * @param {number} y - The `y` coordinate of the point.\n   * @param {number} [z=undefined] - The `z` coordinate of the point or `undefined` if point has 2 dimensions.\n   */\n  function Point(srid, x, y, z) {\n    /**\n     * The coordinate reference system identifier.\n     * @type {T}\n     */\n    this.srid = (0, util_1.assertNumberOrInteger)(srid, 'SRID');\n    /**\n     * The `x` coordinate of the point.\n     * @type {number}\n     */\n\n    this.x = (0, util_1.assertNumber)(x, 'X coordinate');\n    /**\n     * The `y` coordinate of the point.\n     * @type {number}\n     */\n\n    this.y = (0, util_1.assertNumber)(y, 'Y coordinate');\n    /**\n     * The `z` coordinate of the point or `undefined` if point is 2-dimensional.\n     * @type {number}\n     */\n\n    this.z = z === null || z === undefined ? z : (0, util_1.assertNumber)(z, 'Z coordinate');\n    Object.freeze(this);\n  }\n  /**\n   * @ignore\n   */\n\n\n  Point.prototype.toString = function () {\n    return this.z != null && !isNaN(this.z) ? \"Point{srid=\".concat(formatAsFloat(this.srid), \", x=\").concat(formatAsFloat(this.x), \", y=\").concat(formatAsFloat(this.y), \", z=\").concat(formatAsFloat(this.z), \"}\") : \"Point{srid=\".concat(formatAsFloat(this.srid), \", x=\").concat(formatAsFloat(this.x), \", y=\").concat(formatAsFloat(this.y), \"}\");\n  };\n\n  return Point;\n}();\n\nexports.Point = Point;\n\nfunction formatAsFloat(number) {\n  return Number.isInteger(number) ? number.toString() + '.0' : number.toString();\n}\n\nObject.defineProperty(Point.prototype, POINT_IDENTIFIER_PROPERTY, {\n  value: true,\n  enumerable: false,\n  configurable: false,\n  writable: false\n});\n/**\n * Test if given object is an instance of {@link Point} class.\n * @param {Object} obj the object to test.\n * @return {boolean} `true` if given object is a {@link Point}, `false` otherwise.\n */\n\nfunction isPoint(obj) {\n  var anyObj = obj;\n  return obj != null && anyObj[POINT_IDENTIFIER_PROPERTY] === true;\n}\n\nexports.isPoint = isPoint;","map":{"version":3,"names":["Object","defineProperty","exports","value","isPoint","Point","util_1","require","POINT_IDENTIFIER_PROPERTY","srid","x","y","z","assertNumberOrInteger","assertNumber","undefined","freeze","prototype","toString","isNaN","concat","formatAsFloat","number","Number","isInteger","enumerable","configurable","writable","obj","anyObj"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-core/lib/spatial-types.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isPoint = exports.Point = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar util_1 = require(\"./internal/util\");\nvar POINT_IDENTIFIER_PROPERTY = '__isPoint__';\n/**\n * Represents a single two or three-dimensional point in a particular coordinate reference system.\n * Created `Point` objects are frozen with `Object.freeze()` in constructor and thus immutable.\n */\nvar Point = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param {T} srid - The coordinate reference system identifier.\n     * @param {number} x - The `x` coordinate of the point.\n     * @param {number} y - The `y` coordinate of the point.\n     * @param {number} [z=undefined] - The `z` coordinate of the point or `undefined` if point has 2 dimensions.\n     */\n    function Point(srid, x, y, z) {\n        /**\n         * The coordinate reference system identifier.\n         * @type {T}\n         */\n        this.srid = (0, util_1.assertNumberOrInteger)(srid, 'SRID');\n        /**\n         * The `x` coordinate of the point.\n         * @type {number}\n         */\n        this.x = (0, util_1.assertNumber)(x, 'X coordinate');\n        /**\n         * The `y` coordinate of the point.\n         * @type {number}\n         */\n        this.y = (0, util_1.assertNumber)(y, 'Y coordinate');\n        /**\n         * The `z` coordinate of the point or `undefined` if point is 2-dimensional.\n         * @type {number}\n         */\n        this.z = z === null || z === undefined ? z : (0, util_1.assertNumber)(z, 'Z coordinate');\n        Object.freeze(this);\n    }\n    /**\n     * @ignore\n     */\n    Point.prototype.toString = function () {\n        return this.z != null && !isNaN(this.z)\n            ? \"Point{srid=\".concat(formatAsFloat(this.srid), \", x=\").concat(formatAsFloat(this.x), \", y=\").concat(formatAsFloat(this.y), \", z=\").concat(formatAsFloat(this.z), \"}\")\n            : \"Point{srid=\".concat(formatAsFloat(this.srid), \", x=\").concat(formatAsFloat(this.x), \", y=\").concat(formatAsFloat(this.y), \"}\");\n    };\n    return Point;\n}());\nexports.Point = Point;\nfunction formatAsFloat(number) {\n    return Number.isInteger(number) ? number.toString() + '.0' : number.toString();\n}\nObject.defineProperty(Point.prototype, POINT_IDENTIFIER_PROPERTY, {\n    value: true,\n    enumerable: false,\n    configurable: false,\n    writable: false\n});\n/**\n * Test if given object is an instance of {@link Point} class.\n * @param {Object} obj the object to test.\n * @return {boolean} `true` if given object is a {@link Point}, `false` otherwise.\n */\nfunction isPoint(obj) {\n    var anyObj = obj;\n    return obj != null && anyObj[POINT_IDENTIFIER_PROPERTY] === true;\n}\nexports.isPoint = isPoint;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}