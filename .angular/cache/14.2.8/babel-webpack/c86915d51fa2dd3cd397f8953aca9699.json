{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WRITE = exports.READ = exports.Driver = void 0;\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar session_rx_1 = __importDefault(require(\"./session-rx\"));\n\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar READ = neo4j_driver_core_1.driver.READ,\n    WRITE = neo4j_driver_core_1.driver.WRITE;\nexports.READ = READ;\nexports.WRITE = WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\n\nvar Driver =\n/** @class */\nfunction (_super) {\n  __extends(Driver, _super);\n\n  function Driver() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Acquire a reactive session to communicate with the database. The session will\n   * borrow connections from the underlying connection pool as required and\n   * should be considered lightweight and disposable.\n   *\n   * This comes with some responsibility - make sure you always call\n   * {@link close} when you are done using a session, and likewise,\n   * make sure you don't close your session before you are done using it. Once\n   * it is closed, the underlying connection will be released to the connection\n   * pool and made available for others to use.\n   *\n   * @public\n   * @param {SessionConfig} config\n   * @returns {RxSession} new reactive session.\n   */\n\n\n  Driver.prototype.rxSession = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.defaultAccessMode,\n        defaultAccessMode = _c === void 0 ? WRITE : _c,\n        bookmarks = _b.bookmarks,\n        _d = _b.database,\n        database = _d === void 0 ? '' : _d,\n        fetchSize = _b.fetchSize,\n        impersonatedUser = _b.impersonatedUser,\n        bookmarkManager = _b.bookmarkManager,\n        notificationFilter = _b.notificationFilter,\n        auth = _b.auth;\n\n    return new session_rx_1.default({\n      session: this._newSession({\n        defaultAccessMode: defaultAccessMode,\n        bookmarkOrBookmarks: bookmarks,\n        database: database,\n        impersonatedUser: impersonatedUser,\n        auth: auth,\n        reactive: false,\n        fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\n        bookmarkManager: bookmarkManager,\n        notificationFilter: notificationFilter,\n        log: this._log\n      }),\n      config: this._config,\n      log: this._log\n    });\n  };\n\n  return Driver;\n}(neo4j_driver_core_1.Driver);\n\nexports.Driver = Driver;\n/**\n * @private\n */\n\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n  var fetchSize = parseInt(rawValue, 10);\n\n  if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n    return fetchSize;\n  } else if (fetchSize === 0 || fetchSize < 0) {\n    throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n  } else {\n    return defaultWhenAbsent;\n  }\n}\n\nexports.default = Driver;","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","WRITE","READ","Driver","neo4j_driver_core_1","require","session_rx_1","FETCH_ALL","internal","constants","driver","_super","apply","arguments","rxSession","_a","_b","_c","defaultAccessMode","bookmarks","_d","database","fetchSize","impersonatedUser","bookmarkManager","notificationFilter","auth","default","session","_newSession","bookmarkOrBookmarks","reactive","validateFetchSizeValue","_config","log","_log","config","rawValue","defaultWhenAbsent","parseInt","Error","concat"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver/lib/driver.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WRITE = exports.READ = exports.Driver = void 0;\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar session_rx_1 = __importDefault(require(\"./session-rx\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar READ = neo4j_driver_core_1.driver.READ, WRITE = neo4j_driver_core_1.driver.WRITE;\nexports.READ = READ;\nexports.WRITE = WRITE;\n/**\n * A driver maintains one or more {@link Session}s with a remote\n * Neo4j instance. Through the {@link Session}s you can send queries\n * and retrieve results from the database.\n *\n * Drivers are reasonably expensive to create - you should strive to keep one\n * driver instance around per Neo4j Instance you connect to.\n *\n * @access public\n */\nvar Driver = /** @class */ (function (_super) {\n    __extends(Driver, _super);\n    function Driver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Acquire a reactive session to communicate with the database. The session will\n     * borrow connections from the underlying connection pool as required and\n     * should be considered lightweight and disposable.\n     *\n     * This comes with some responsibility - make sure you always call\n     * {@link close} when you are done using a session, and likewise,\n     * make sure you don't close your session before you are done using it. Once\n     * it is closed, the underlying connection will be released to the connection\n     * pool and made available for others to use.\n     *\n     * @public\n     * @param {SessionConfig} config\n     * @returns {RxSession} new reactive session.\n     */\n    Driver.prototype.rxSession = function (_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultAccessMode, defaultAccessMode = _c === void 0 ? WRITE : _c, bookmarks = _b.bookmarks, _d = _b.database, database = _d === void 0 ? '' : _d, fetchSize = _b.fetchSize, impersonatedUser = _b.impersonatedUser, bookmarkManager = _b.bookmarkManager, notificationFilter = _b.notificationFilter, auth = _b.auth;\n        return new session_rx_1.default({\n            session: this._newSession({\n                defaultAccessMode: defaultAccessMode,\n                bookmarkOrBookmarks: bookmarks,\n                database: database,\n                impersonatedUser: impersonatedUser,\n                auth: auth,\n                reactive: false,\n                fetchSize: validateFetchSizeValue(fetchSize, this._config.fetchSize),\n                bookmarkManager: bookmarkManager,\n                notificationFilter: notificationFilter,\n                log: this._log\n            }),\n            config: this._config,\n            log: this._log\n        });\n    };\n    return Driver;\n}(neo4j_driver_core_1.Driver));\nexports.Driver = Driver;\n/**\n * @private\n */\nfunction validateFetchSizeValue(rawValue, defaultWhenAbsent) {\n    var fetchSize = parseInt(rawValue, 10);\n    if (fetchSize > 0 || fetchSize === FETCH_ALL) {\n        return fetchSize;\n    }\n    else if (fetchSize === 0 || fetchSize < 0) {\n        throw new Error(\"The fetch size can only be a positive value or \".concat(FETCH_ALL, \" for ALL. However fetchSize = \").concat(fetchSize));\n    }\n    else {\n        return defaultWhenAbsent;\n    }\n}\nexports.default = Driver;"],"mappings":"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"},"metadata":{},"sourceType":"script"}