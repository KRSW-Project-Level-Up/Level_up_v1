{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createChannelConnection = void 0;\n\nvar channel_1 = require(\"../channel\");\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar connection_1 = __importDefault(require(\"./connection\"));\n\nvar bolt_1 = __importDefault(require(\"../bolt\"));\n\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @return {Connection} - new connection.\n */\n\nfunction createChannelConnection(address, config, errorHandler, log, serversideRouting, createChannel) {\n  if (serversideRouting === void 0) {\n    serversideRouting = null;\n  }\n\n  if (createChannel === void 0) {\n    createChannel = function (channelConfig) {\n      return new channel_1.Channel(channelConfig);\n    };\n  }\n\n  var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode());\n  var channel = createChannel(channelConfig);\n  return bolt_1.default.handshake(channel, log).then(function (_a) {\n    var version = _a.protocolVersion,\n        consumeRemainingBuffer = _a.consumeRemainingBuffer;\n    var chunker = new channel_1.Chunker(channel);\n    var dechunker = new channel_1.Dechunker();\n\n    var createProtocol = function (conn) {\n      return bolt_1.default.create({\n        version: version,\n        channel: channel,\n        chunker: chunker,\n        dechunker: dechunker,\n        disableLosslessIntegers: config.disableLosslessIntegers,\n        useBigInt: config.useBigInt,\n        serversideRouting: serversideRouting,\n        server: conn.server,\n        log: conn.logger,\n        observer: {\n          onObserversCountChange: conn._handleOngoingRequestsNumberChange.bind(conn),\n          onError: conn._handleFatalError.bind(conn),\n          onFailure: conn._resetOnFailure.bind(conn),\n          onProtocolError: conn._handleProtocolError.bind(conn),\n          onErrorApplyTransformation: function (error) {\n            return conn.handleAndTransformError(error, conn._address);\n          }\n        }\n      });\n    };\n\n    var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, config.notificationFilter, createProtocol, config.telemetryDisabled); // forward all pending bytes to the dechunker\n\n    consumeRemainingBuffer(function (buffer) {\n      return dechunker.write(buffer);\n    });\n    return connection;\n  }).catch(function (reason) {\n    return channel.close().then(function () {\n      throw reason;\n    });\n  });\n}\n\nexports.createChannelConnection = createChannelConnection;\n\nvar ChannelConnection =\n/** @class */\nfunction (_super) {\n  __extends(ChannelConnection, _super);\n  /**\n   * @constructor\n   * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n   * @param {ConnectionErrorHandler} errorHandler the error handler.\n   * @param {ServerAddress} address - the server address to connect to.\n   * @param {Logger} log - the configured logger.\n   * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n   * @param {Chunker} chunker the chunker\n   * @param protocolSupplier Bolt protocol supplier\n   */\n\n\n  function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n  notificationFilter, protocolSupplier, telemetryDisabled) {\n    if (disableLosslessIntegers === void 0) {\n      disableLosslessIntegers = false;\n    }\n\n    if (serversideRouting === void 0) {\n      serversideRouting = null;\n    }\n\n    var _this = _super.call(this, errorHandler) || this;\n\n    _this._authToken = null;\n    _this._idle = false;\n    _this._reseting = false;\n    _this._resetObservers = [];\n    _this._id = idGenerator++;\n    _this._address = address;\n    _this._server = {\n      address: address.asHostPort()\n    };\n    _this._creationTimestamp = Date.now();\n    _this._disableLosslessIntegers = disableLosslessIntegers;\n    _this._ch = channel;\n    _this._chunker = chunker;\n    _this._log = createConnectionLogger(_this, log);\n    _this._serversideRouting = serversideRouting;\n    _this._notificationFilter = notificationFilter;\n    _this._telemetryDisabledDriverConfig = telemetryDisabled === true;\n    _this._telemetryDisabledConnection = true; // connection from the database, returned in response for HELLO message and might not be available\n\n    _this._dbConnectionId = null; // bolt protocol is initially not initialized\n\n    /**\n     * @private\n     * @type {BoltProtocol}\n     */\n\n    _this._protocol = protocolSupplier(_this); // Set to true on fatal errors, to get this out of connection pool.\n\n    _this._isBroken = false;\n\n    if (_this._log.isDebugEnabled()) {\n      _this._log.debug(\"created towards \".concat(address));\n    }\n\n    return _this;\n  }\n\n  ChannelConnection.prototype.beginTransaction = function (config) {\n    this._sendTelemetryIfEnabled(config);\n\n    return this._protocol.beginTransaction(config);\n  };\n\n  ChannelConnection.prototype.run = function (query, parameters, config) {\n    this._sendTelemetryIfEnabled(config);\n\n    return this._protocol.run(query, parameters, config);\n  };\n\n  ChannelConnection.prototype._sendTelemetryIfEnabled = function (config) {\n    if (this._telemetryDisabledConnection || this._telemetryDisabledDriverConfig || config == null || config.apiTelemetryConfig == null) {\n      return;\n    }\n\n    this._protocol.telemetry({\n      api: config.apiTelemetryConfig.api\n    }, {\n      onCompleted: config.apiTelemetryConfig.onTelemetrySuccess,\n      onError: config.beforeError\n    });\n  };\n\n  ChannelConnection.prototype.commitTransaction = function (config) {\n    return this._protocol.commitTransaction(config);\n  };\n\n  ChannelConnection.prototype.rollbackTransaction = function (config) {\n    return this._protocol.rollbackTransaction(config);\n  };\n\n  ChannelConnection.prototype.getProtocolVersion = function () {\n    return this._protocol.version;\n  };\n\n  Object.defineProperty(ChannelConnection.prototype, \"authToken\", {\n    get: function () {\n      return this._authToken;\n    },\n    set: function (value) {\n      this._authToken = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"supportsReAuth\", {\n    get: function () {\n      return this._protocol.supportsReAuth;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"id\", {\n    get: function () {\n      return this._id;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n    get: function () {\n      return this._dbConnectionId;\n    },\n    set: function (value) {\n      this._dbConnectionId = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"idleTimestamp\", {\n    get: function () {\n      return this._idleTimestamp;\n    },\n    set: function (value) {\n      this._idleTimestamp = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"creationTimestamp\", {\n    get: function () {\n      return this._creationTimestamp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Send initialization message.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {Object} boltAgent the bolt agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @param {boolean} waitReAuth whether ot not the connection will wait for re-authentication to happen\n   * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n   */\n\n  ChannelConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._protocol.initialized && !this._protocol.supportsReAuth) {\n              throw (0, neo4j_driver_core_1.newError)('Connection does not support re-auth');\n            }\n\n            this._authToken = authToken;\n            if (!!this._protocol.initialized) return [3\n            /*break*/\n            , 2];\n            return [4\n            /*yield*/\n            , this._initialize(userAgent, boltAgent, authToken)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 2:\n            if (!waitReAuth) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , new Promise(function (resolve, reject) {\n              _this._protocol.logoff({\n                onError: reject\n              });\n\n              _this._protocol.logon({\n                authToken: authToken,\n                onError: reject,\n                onComplete: function () {\n                  return resolve(_this);\n                },\n                flush: true\n              });\n            })];\n\n          case 3:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 4:\n            this._protocol.logoff();\n\n            this._protocol.logon({\n              authToken: authToken,\n              flush: true\n            });\n\n            return [2\n            /*return*/\n            , this];\n        }\n      });\n    });\n  };\n  /**\n   * Perform protocol-specific initialization which includes authentication.\n   * @param {string} userAgent the user agent for this driver.\n   * @param {string} boltAgent the bolt agent for this driver.\n   * @param {Object} authToken the object containing auth information.\n   * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n   */\n\n\n  ChannelConnection.prototype._initialize = function (userAgent, boltAgent, authToken) {\n    var _this = this;\n\n    var self = this;\n    return new Promise(function (resolve, reject) {\n      _this._protocol.initialize({\n        userAgent: userAgent,\n        boltAgent: boltAgent,\n        authToken: authToken,\n        notificationFilter: _this._notificationFilter,\n        onError: function (err) {\n          return reject(err);\n        },\n        onComplete: function (metadata) {\n          if (metadata) {\n            // read server version from the response metadata, if it is available\n            var serverVersion = metadata.server;\n\n            if (!_this.version || serverVersion) {\n              _this.version = serverVersion;\n            } // read database connection id from the response metadata, if it is available\n\n\n            var dbConnectionId = metadata.connection_id;\n\n            if (!_this.databaseId) {\n              _this.databaseId = dbConnectionId;\n            }\n\n            if (metadata.hints) {\n              var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n\n              if (receiveTimeoutRaw !== null && receiveTimeoutRaw !== undefined) {\n                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n\n                if (Number.isInteger(receiveTimeoutInSeconds) && receiveTimeoutInSeconds > 0) {\n                  _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                } else {\n                  _this._log.info(\"Server located at \".concat(_this._address, \" supplied an invalid connection receive timeout value (\").concat(receiveTimeoutInSeconds, \"). \") + 'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                }\n              }\n\n              var telemetryEnabledHint = metadata.hints['telemetry.enabled'];\n\n              if (telemetryEnabledHint === true) {\n                _this._telemetryDisabledConnection = false;\n              }\n            }\n          }\n\n          resolve(self);\n        }\n      });\n    });\n  };\n  /**\n   * Get the Bolt protocol for the connection.\n   * @return {BoltProtocol} the protocol.\n   */\n\n\n  ChannelConnection.prototype.protocol = function () {\n    return this._protocol;\n  };\n\n  Object.defineProperty(ChannelConnection.prototype, \"address\", {\n    get: function () {\n      return this._address;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"version\", {\n    /**\n     * Get the version of the connected server.\n     * Available only after initialization\n     *\n     * @returns {ServerVersion} version\n     */\n    get: function () {\n      return this._server.version;\n    },\n    set: function (value) {\n      this._server.version = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"server\", {\n    get: function () {\n      return this._server;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n    get: function () {\n      return this._log;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * \"Fatal\" means the connection is dead. Only call this if something\n   * happens that cannot be recovered from. This will lead to all subscribers\n   * failing, and the connection getting ejected from the session pool.\n   *\n   * @param error an error object, forwarded to all current and future subscribers\n   */\n\n  ChannelConnection.prototype._handleFatalError = function (error) {\n    this._isBroken = true;\n    this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n\n    if (this._log.isErrorEnabled()) {\n      this._log.error(\"experienced a fatal error caused by \".concat(this._error, \" (\").concat(neo4j_driver_core_1.json.stringify(this._error), \")\"));\n    }\n\n    this._protocol.notifyFatalError(this._error);\n  };\n  /**\n   * This method is used by the {@link PooledConnectionProvider}\n   *\n   * @param {any} observer\n   */\n\n\n  ChannelConnection.prototype._setIdle = function (observer) {\n    this._idle = true;\n\n    this._ch.stopReceiveTimeout();\n\n    this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n  };\n  /**\n   * This method is used by the {@link PooledConnectionProvider}\n   */\n\n\n  ChannelConnection.prototype._unsetIdle = function () {\n    this._idle = false;\n\n    this._updateCurrentObserver();\n  };\n  /**\n   * This method still here because of the connection-channel.tests.js\n   *\n   * @param {any} observer\n   */\n\n\n  ChannelConnection.prototype._queueObserver = function (observer) {\n    return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n  };\n\n  ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n    return !this._idle && this._protocol.hasOngoingObservableRequests();\n  };\n  /**\n   * Send a RESET-message to the database. Message is immediately flushed to the network.\n   * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n   */\n\n\n  ChannelConnection.prototype.resetAndFlush = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this._reset({\n        onError: function (error) {\n          if (_this._isBroken) {\n            // handling a fatal error, no need to raise a protocol violation\n            reject(error);\n          } else {\n            var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n\n            reject(neo4jError);\n          }\n        },\n        onComplete: function () {\n          resolve();\n        }\n      });\n    });\n  };\n\n  ChannelConnection.prototype._resetOnFailure = function () {\n    var _this = this;\n\n    if (!this.isOpen()) {\n      return;\n    }\n\n    this._reset({\n      onError: function () {\n        _this._protocol.resetFailure();\n      },\n      onComplete: function () {\n        _this._protocol.resetFailure();\n      }\n    });\n  };\n\n  ChannelConnection.prototype._reset = function (observer) {\n    var _this = this;\n\n    if (this._reseting) {\n      if (!this._protocol.isLastMessageReset()) {\n        this._protocol.reset({\n          onError: function (error) {\n            observer.onError(error);\n          },\n          onComplete: function () {\n            observer.onComplete();\n          }\n        });\n      } else {\n        this._resetObservers.push(observer);\n      }\n\n      return;\n    }\n\n    this._resetObservers.push(observer);\n\n    this._reseting = true;\n\n    var notifyFinish = function (notify) {\n      _this._reseting = false;\n      var observers = _this._resetObservers;\n      _this._resetObservers = [];\n      observers.forEach(notify);\n    };\n\n    this._protocol.reset({\n      onError: function (error) {\n        notifyFinish(function (obs) {\n          return obs.onError(error);\n        });\n      },\n      onComplete: function () {\n        notifyFinish(function (obs) {\n          return obs.onComplete();\n        });\n      }\n    });\n  };\n  /*\n   * Pop next pending observer form the list of observers and make it current observer.\n   * @protected\n   */\n\n\n  ChannelConnection.prototype._updateCurrentObserver = function () {\n    this._protocol.updateCurrentObserver();\n  };\n  /** Check if this connection is in working condition */\n\n\n  ChannelConnection.prototype.isOpen = function () {\n    return !this._isBroken && this._ch._open;\n  };\n  /**\n   * Starts and stops the receive timeout timer.\n   * @param {number} requestsNumber Ongoing requests number\n   */\n\n\n  ChannelConnection.prototype._handleOngoingRequestsNumberChange = function (requestsNumber) {\n    if (this._idle) {\n      return;\n    }\n\n    if (requestsNumber === 0) {\n      this._ch.stopReceiveTimeout();\n    } else {\n      this._ch.startReceiveTimeout();\n    }\n  };\n  /**\n   * Call close on the channel.\n   * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n   */\n\n\n  ChannelConnection.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._log.isDebugEnabled()) {\n              this._log.debug('closing');\n            }\n\n            if (this._protocol && this.isOpen()) {\n              // protocol has been initialized and this connection is healthy\n              // notify the database about the upcoming close of the connection\n              this._protocol.prepareToClose();\n            }\n\n            return [4\n            /*yield*/\n            , this._ch.close()];\n\n          case 1:\n            _a.sent();\n\n            if (this._log.isDebugEnabled()) {\n              this._log.debug('closed');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  ChannelConnection.prototype.toString = function () {\n    return \"Connection [\".concat(this.id, \"][\").concat(this.databaseId || '', \"]\");\n  };\n\n  ChannelConnection.prototype._handleProtocolError = function (message) {\n    this._protocol.resetFailure();\n\n    this._updateCurrentObserver();\n\n    var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n\n    this._handleFatalError(error);\n\n    return error;\n  };\n\n  return ChannelConnection;\n}(connection_1.default);\n\nexports.default = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\n\nfunction createConnectionLogger(connection, logger) {\n  return new Logger(logger._level, function (level, message) {\n    return logger._loggerFunction(level, \"\".concat(connection, \" \").concat(message));\n  });\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","pop","length","push","__importDefault","mod","__esModule","defineProperty","exports","createChannelConnection","channel_1","require","neo4j_driver_core_1","connection_1","bolt_1","PROTOCOL_ERROR","error","Logger","internal","logger","idGenerator","address","config","errorHandler","log","serversideRouting","createChannel","channelConfig","Channel","ChannelConfig","errorCode","channel","default","handshake","_a","version","protocolVersion","consumeRemainingBuffer","chunker","Chunker","dechunker","Dechunker","createProtocol","conn","disableLosslessIntegers","useBigInt","server","observer","onObserversCountChange","_handleOngoingRequestsNumberChange","bind","onError","_handleFatalError","onFailure","_resetOnFailure","onProtocolError","_handleProtocolError","onErrorApplyTransformation","handleAndTransformError","_address","connection","ChannelConnection","notificationFilter","telemetryDisabled","buffer","write","catch","reason","close","_super","protocolSupplier","_this","_authToken","_idle","_reseting","_resetObservers","_id","_server","asHostPort","_creationTimestamp","Date","now","_disableLosslessIntegers","_ch","_chunker","_log","createConnectionLogger","_serversideRouting","_notificationFilter","_telemetryDisabledDriverConfig","_telemetryDisabledConnection","_dbConnectionId","_protocol","_isBroken","isDebugEnabled","debug","concat","beginTransaction","_sendTelemetryIfEnabled","run","query","parameters","apiTelemetryConfig","telemetry","api","onCompleted","onTelemetrySuccess","beforeError","commitTransaction","rollbackTransaction","getProtocolVersion","get","set","enumerable","configurable","supportsReAuth","_idleTimestamp","connect","userAgent","boltAgent","authToken","waitReAuth","initialized","newError","_initialize","logoff","logon","onComplete","flush","self","initialize","err","metadata","serverVersion","dbConnectionId","connection_id","databaseId","hints","receiveTimeoutRaw","undefined","receiveTimeoutInSeconds","toNumber","Number","isInteger","setupReceiveTimeout","info","telemetryEnabledHint","protocol","_error","currentFailure","isErrorEnabled","json","stringify","notifyFatalError","_setIdle","stopReceiveTimeout","queueObserverIfProtocolIsNotBroken","_unsetIdle","_updateCurrentObserver","_queueObserver","hasOngoingObservableRequests","resetAndFlush","_reset","neo4jError","isOpen","resetFailure","isLastMessageReset","reset","notifyFinish","notify","observers","forEach","obs","updateCurrentObserver","_open","requestsNumber","startReceiveTimeout","prepareToClose","toString","id","message","_level","level","_loggerFunction"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-bolt-connection/lib/connection/connection-channel.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createChannelConnection = void 0;\nvar channel_1 = require(\"../channel\");\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar connection_1 = __importDefault(require(\"./connection\"));\nvar bolt_1 = __importDefault(require(\"../bolt\"));\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar idGenerator = 0;\n/**\n * Crete new connection to the provided address. Returned connection is not connected.\n * @param {ServerAddress} address - the Bolt endpoint to connect to.\n * @param {Object} config - the driver configuration.\n * @param {ConnectionErrorHandler} errorHandler - the error handler for connection errors.\n * @param {Logger} log - configured logger.\n * @return {Connection} - new connection.\n */\nfunction createChannelConnection(address, config, errorHandler, log, serversideRouting, createChannel) {\n    if (serversideRouting === void 0) { serversideRouting = null; }\n    if (createChannel === void 0) { createChannel = function (channelConfig) { return new channel_1.Channel(channelConfig); }; }\n    var channelConfig = new channel_1.ChannelConfig(address, config, errorHandler.errorCode());\n    var channel = createChannel(channelConfig);\n    return bolt_1.default.handshake(channel, log)\n        .then(function (_a) {\n        var version = _a.protocolVersion, consumeRemainingBuffer = _a.consumeRemainingBuffer;\n        var chunker = new channel_1.Chunker(channel);\n        var dechunker = new channel_1.Dechunker();\n        var createProtocol = function (conn) {\n            return bolt_1.default.create({\n                version: version,\n                channel: channel,\n                chunker: chunker,\n                dechunker: dechunker,\n                disableLosslessIntegers: config.disableLosslessIntegers,\n                useBigInt: config.useBigInt,\n                serversideRouting: serversideRouting,\n                server: conn.server,\n                log: conn.logger,\n                observer: {\n                    onObserversCountChange: conn._handleOngoingRequestsNumberChange.bind(conn),\n                    onError: conn._handleFatalError.bind(conn),\n                    onFailure: conn._resetOnFailure.bind(conn),\n                    onProtocolError: conn._handleProtocolError.bind(conn),\n                    onErrorApplyTransformation: function (error) {\n                        return conn.handleAndTransformError(error, conn._address);\n                    }\n                }\n            });\n        };\n        var connection = new ChannelConnection(channel, errorHandler, address, log, config.disableLosslessIntegers, serversideRouting, chunker, config.notificationFilter, createProtocol, config.telemetryDisabled);\n        // forward all pending bytes to the dechunker\n        consumeRemainingBuffer(function (buffer) { return dechunker.write(buffer); });\n        return connection;\n    })\n        .catch(function (reason) {\n        return channel.close().then(function () {\n            throw reason;\n        });\n    });\n}\nexports.createChannelConnection = createChannelConnection;\nvar ChannelConnection = /** @class */ (function (_super) {\n    __extends(ChannelConnection, _super);\n    /**\n     * @constructor\n     * @param {Channel} channel - channel with a 'write' function and a 'onmessage' callback property.\n     * @param {ConnectionErrorHandler} errorHandler the error handler.\n     * @param {ServerAddress} address - the server address to connect to.\n     * @param {Logger} log - the configured logger.\n     * @param {boolean} disableLosslessIntegers if this connection should convert all received integers to native JS numbers.\n     * @param {Chunker} chunker the chunker\n     * @param protocolSupplier Bolt protocol supplier\n     */\n    function ChannelConnection(channel, errorHandler, address, log, disableLosslessIntegers, serversideRouting, chunker, // to be removed,\n    notificationFilter, protocolSupplier, telemetryDisabled) {\n        if (disableLosslessIntegers === void 0) { disableLosslessIntegers = false; }\n        if (serversideRouting === void 0) { serversideRouting = null; }\n        var _this = _super.call(this, errorHandler) || this;\n        _this._authToken = null;\n        _this._idle = false;\n        _this._reseting = false;\n        _this._resetObservers = [];\n        _this._id = idGenerator++;\n        _this._address = address;\n        _this._server = { address: address.asHostPort() };\n        _this._creationTimestamp = Date.now();\n        _this._disableLosslessIntegers = disableLosslessIntegers;\n        _this._ch = channel;\n        _this._chunker = chunker;\n        _this._log = createConnectionLogger(_this, log);\n        _this._serversideRouting = serversideRouting;\n        _this._notificationFilter = notificationFilter;\n        _this._telemetryDisabledDriverConfig = telemetryDisabled === true;\n        _this._telemetryDisabledConnection = true;\n        // connection from the database, returned in response for HELLO message and might not be available\n        _this._dbConnectionId = null;\n        // bolt protocol is initially not initialized\n        /**\n         * @private\n         * @type {BoltProtocol}\n         */\n        _this._protocol = protocolSupplier(_this);\n        // Set to true on fatal errors, to get this out of connection pool.\n        _this._isBroken = false;\n        if (_this._log.isDebugEnabled()) {\n            _this._log.debug(\"created towards \".concat(address));\n        }\n        return _this;\n    }\n    ChannelConnection.prototype.beginTransaction = function (config) {\n        this._sendTelemetryIfEnabled(config);\n        return this._protocol.beginTransaction(config);\n    };\n    ChannelConnection.prototype.run = function (query, parameters, config) {\n        this._sendTelemetryIfEnabled(config);\n        return this._protocol.run(query, parameters, config);\n    };\n    ChannelConnection.prototype._sendTelemetryIfEnabled = function (config) {\n        if (this._telemetryDisabledConnection ||\n            this._telemetryDisabledDriverConfig ||\n            config == null ||\n            config.apiTelemetryConfig == null) {\n            return;\n        }\n        this._protocol.telemetry({\n            api: config.apiTelemetryConfig.api\n        }, {\n            onCompleted: config.apiTelemetryConfig.onTelemetrySuccess,\n            onError: config.beforeError\n        });\n    };\n    ChannelConnection.prototype.commitTransaction = function (config) {\n        return this._protocol.commitTransaction(config);\n    };\n    ChannelConnection.prototype.rollbackTransaction = function (config) {\n        return this._protocol.rollbackTransaction(config);\n    };\n    ChannelConnection.prototype.getProtocolVersion = function () {\n        return this._protocol.version;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"authToken\", {\n        get: function () {\n            return this._authToken;\n        },\n        set: function (value) {\n            this._authToken = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"supportsReAuth\", {\n        get: function () {\n            return this._protocol.supportsReAuth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"databaseId\", {\n        get: function () {\n            return this._dbConnectionId;\n        },\n        set: function (value) {\n            this._dbConnectionId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"idleTimestamp\", {\n        get: function () {\n            return this._idleTimestamp;\n        },\n        set: function (value) {\n            this._idleTimestamp = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"creationTimestamp\", {\n        get: function () {\n            return this._creationTimestamp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Send initialization message.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {Object} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @param {boolean} waitReAuth whether ot not the connection will wait for re-authentication to happen\n     * @return {Promise<Connection>} promise resolved with the current connection if connection is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype.connect = function (userAgent, boltAgent, authToken, waitReAuth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._protocol.initialized && !this._protocol.supportsReAuth) {\n                            throw (0, neo4j_driver_core_1.newError)('Connection does not support re-auth');\n                        }\n                        this._authToken = authToken;\n                        if (!!this._protocol.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._initialize(userAgent, boltAgent, authToken)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        if (!waitReAuth) return [3 /*break*/, 4];\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                _this._protocol.logoff({\n                                    onError: reject\n                                });\n                                _this._protocol.logon({\n                                    authToken: authToken,\n                                    onError: reject,\n                                    onComplete: function () { return resolve(_this); },\n                                    flush: true\n                                });\n                            })];\n                    case 3: return [2 /*return*/, _a.sent()];\n                    case 4:\n                        this._protocol.logoff();\n                        this._protocol.logon({ authToken: authToken, flush: true });\n                        return [2 /*return*/, this];\n                }\n            });\n        });\n    };\n    /**\n     * Perform protocol-specific initialization which includes authentication.\n     * @param {string} userAgent the user agent for this driver.\n     * @param {string} boltAgent the bolt agent for this driver.\n     * @param {Object} authToken the object containing auth information.\n     * @return {Promise<Connection>} promise resolved with the current connection if initialization is successful. Rejected promise otherwise.\n     */\n    ChannelConnection.prototype._initialize = function (userAgent, boltAgent, authToken) {\n        var _this = this;\n        var self = this;\n        return new Promise(function (resolve, reject) {\n            _this._protocol.initialize({\n                userAgent: userAgent,\n                boltAgent: boltAgent,\n                authToken: authToken,\n                notificationFilter: _this._notificationFilter,\n                onError: function (err) { return reject(err); },\n                onComplete: function (metadata) {\n                    if (metadata) {\n                        // read server version from the response metadata, if it is available\n                        var serverVersion = metadata.server;\n                        if (!_this.version || serverVersion) {\n                            _this.version = serverVersion;\n                        }\n                        // read database connection id from the response metadata, if it is available\n                        var dbConnectionId = metadata.connection_id;\n                        if (!_this.databaseId) {\n                            _this.databaseId = dbConnectionId;\n                        }\n                        if (metadata.hints) {\n                            var receiveTimeoutRaw = metadata.hints['connection.recv_timeout_seconds'];\n                            if (receiveTimeoutRaw !== null &&\n                                receiveTimeoutRaw !== undefined) {\n                                var receiveTimeoutInSeconds = (0, neo4j_driver_core_1.toNumber)(receiveTimeoutRaw);\n                                if (Number.isInteger(receiveTimeoutInSeconds) &&\n                                    receiveTimeoutInSeconds > 0) {\n                                    _this._ch.setupReceiveTimeout(receiveTimeoutInSeconds * 1000);\n                                }\n                                else {\n                                    _this._log.info(\"Server located at \".concat(_this._address, \" supplied an invalid connection receive timeout value (\").concat(receiveTimeoutInSeconds, \"). \") +\n                                        'Please, verify the server configuration and status because this can be the symptom of a bigger issue.');\n                                }\n                            }\n                            var telemetryEnabledHint = metadata.hints['telemetry.enabled'];\n                            if (telemetryEnabledHint === true) {\n                                _this._telemetryDisabledConnection = false;\n                            }\n                        }\n                    }\n                    resolve(self);\n                }\n            });\n        });\n    };\n    /**\n     * Get the Bolt protocol for the connection.\n     * @return {BoltProtocol} the protocol.\n     */\n    ChannelConnection.prototype.protocol = function () {\n        return this._protocol;\n    };\n    Object.defineProperty(ChannelConnection.prototype, \"address\", {\n        get: function () {\n            return this._address;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"version\", {\n        /**\n         * Get the version of the connected server.\n         * Available only after initialization\n         *\n         * @returns {ServerVersion} version\n         */\n        get: function () {\n            return this._server.version;\n        },\n        set: function (value) {\n            this._server.version = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"server\", {\n        get: function () {\n            return this._server;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ChannelConnection.prototype, \"logger\", {\n        get: function () {\n            return this._log;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * \"Fatal\" means the connection is dead. Only call this if something\n     * happens that cannot be recovered from. This will lead to all subscribers\n     * failing, and the connection getting ejected from the session pool.\n     *\n     * @param error an error object, forwarded to all current and future subscribers\n     */\n    ChannelConnection.prototype._handleFatalError = function (error) {\n        this._isBroken = true;\n        this._error = this.handleAndTransformError(this._protocol.currentFailure || error, this._address);\n        if (this._log.isErrorEnabled()) {\n            this._log.error(\"experienced a fatal error caused by \".concat(this._error, \" (\").concat(neo4j_driver_core_1.json.stringify(this._error), \")\"));\n        }\n        this._protocol.notifyFatalError(this._error);\n    };\n    /**\n     * This method is used by the {@link PooledConnectionProvider}\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._setIdle = function (observer) {\n        this._idle = true;\n        this._ch.stopReceiveTimeout();\n        this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    /**\n     * This method is used by the {@link PooledConnectionProvider}\n     */\n    ChannelConnection.prototype._unsetIdle = function () {\n        this._idle = false;\n        this._updateCurrentObserver();\n    };\n    /**\n     * This method still here because of the connection-channel.tests.js\n     *\n     * @param {any} observer\n     */\n    ChannelConnection.prototype._queueObserver = function (observer) {\n        return this._protocol.queueObserverIfProtocolIsNotBroken(observer);\n    };\n    ChannelConnection.prototype.hasOngoingObservableRequests = function () {\n        return !this._idle && this._protocol.hasOngoingObservableRequests();\n    };\n    /**\n     * Send a RESET-message to the database. Message is immediately flushed to the network.\n     * @return {Promise<void>} promise resolved when SUCCESS-message response arrives, or failed when other response messages arrives.\n     */\n    ChannelConnection.prototype.resetAndFlush = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._reset({\n                onError: function (error) {\n                    if (_this._isBroken) {\n                        // handling a fatal error, no need to raise a protocol violation\n                        reject(error);\n                    }\n                    else {\n                        var neo4jError = _this._handleProtocolError('Received FAILURE as a response for RESET: ' + error);\n                        reject(neo4jError);\n                    }\n                },\n                onComplete: function () {\n                    resolve();\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype._resetOnFailure = function () {\n        var _this = this;\n        if (!this.isOpen()) {\n            return;\n        }\n        this._reset({\n            onError: function () {\n                _this._protocol.resetFailure();\n            },\n            onComplete: function () {\n                _this._protocol.resetFailure();\n            }\n        });\n    };\n    ChannelConnection.prototype._reset = function (observer) {\n        var _this = this;\n        if (this._reseting) {\n            if (!this._protocol.isLastMessageReset()) {\n                this._protocol.reset({\n                    onError: function (error) {\n                        observer.onError(error);\n                    },\n                    onComplete: function () {\n                        observer.onComplete();\n                    }\n                });\n            }\n            else {\n                this._resetObservers.push(observer);\n            }\n            return;\n        }\n        this._resetObservers.push(observer);\n        this._reseting = true;\n        var notifyFinish = function (notify) {\n            _this._reseting = false;\n            var observers = _this._resetObservers;\n            _this._resetObservers = [];\n            observers.forEach(notify);\n        };\n        this._protocol.reset({\n            onError: function (error) {\n                notifyFinish(function (obs) { return obs.onError(error); });\n            },\n            onComplete: function () {\n                notifyFinish(function (obs) { return obs.onComplete(); });\n            }\n        });\n    };\n    /*\n     * Pop next pending observer form the list of observers and make it current observer.\n     * @protected\n     */\n    ChannelConnection.prototype._updateCurrentObserver = function () {\n        this._protocol.updateCurrentObserver();\n    };\n    /** Check if this connection is in working condition */\n    ChannelConnection.prototype.isOpen = function () {\n        return !this._isBroken && this._ch._open;\n    };\n    /**\n     * Starts and stops the receive timeout timer.\n     * @param {number} requestsNumber Ongoing requests number\n     */\n    ChannelConnection.prototype._handleOngoingRequestsNumberChange = function (requestsNumber) {\n        if (this._idle) {\n            return;\n        }\n        if (requestsNumber === 0) {\n            this._ch.stopReceiveTimeout();\n        }\n        else {\n            this._ch.startReceiveTimeout();\n        }\n    };\n    /**\n     * Call close on the channel.\n     * @returns {Promise<void>} - A promise that will be resolved when the underlying channel is closed.\n     */\n    ChannelConnection.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closing');\n                        }\n                        if (this._protocol && this.isOpen()) {\n                            // protocol has been initialized and this connection is healthy\n                            // notify the database about the upcoming close of the connection\n                            this._protocol.prepareToClose();\n                        }\n                        return [4 /*yield*/, this._ch.close()];\n                    case 1:\n                        _a.sent();\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug('closed');\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ChannelConnection.prototype.toString = function () {\n        return \"Connection [\".concat(this.id, \"][\").concat(this.databaseId || '', \"]\");\n    };\n    ChannelConnection.prototype._handleProtocolError = function (message) {\n        this._protocol.resetFailure();\n        this._updateCurrentObserver();\n        var error = (0, neo4j_driver_core_1.newError)(message, PROTOCOL_ERROR);\n        this._handleFatalError(error);\n        return error;\n    };\n    return ChannelConnection;\n}(connection_1.default));\nexports.default = ChannelConnection;\n/**\n * Creates a log with the connection info as prefix\n * @param {Connection} connection The connection\n * @param {Logger} logger The logger\n * @returns {Logger} The new logger with enriched messages\n */\nfunction createConnectionLogger(connection, logger) {\n    return new Logger(logger._level, function (level, message) {\n        return logger._loggerFunction(level, \"\".concat(connection, \" \").concat(message));\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}