{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar packstream_1 = require(\"../packstream\");\n\nvar transformer_1 = require(\"./transformer\");\n\nvar temporal_factory_1 = require(\"./temporal-factory\");\n\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\n\nvar _a = neo4j_driver_core_1.internal.temporalUtil,\n    dateToEpochDay = _a.dateToEpochDay,\n    localDateTimeToEpochSecond = _a.localDateTimeToEpochSecond,\n    localTimeToNanoOfDay = _a.localTimeToNanoOfDay;\nvar POINT_2D = 0x58;\nvar POINT_2D_STRUCT_SIZE = 3;\nvar POINT_3D = 0x59;\nvar POINT_3D_STRUCT_SIZE = 4;\nvar DURATION = 0x45;\nvar DURATION_STRUCT_SIZE = 4;\nvar LOCAL_TIME = 0x74;\nvar LOCAL_TIME_STRUCT_SIZE = 1;\nvar TIME = 0x54;\nvar TIME_STRUCT_SIZE = 2;\nvar DATE = 0x44;\nvar DATE_STRUCT_SIZE = 1;\nvar LOCAL_DATE_TIME = 0x64;\nvar LOCAL_DATE_TIME_STRUCT_SIZE = 2;\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x46;\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\nvar DATE_TIME_WITH_ZONE_ID = 0x66;\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\n/**\n * Creates the Point2D Transformer\n * @returns {TypeTransformer}\n */\n\nfunction createPoint2DTransformer() {\n  return new transformer_1.TypeTransformer({\n    signature: POINT_2D,\n    isTypeInstance: function (point) {\n      return (0, neo4j_driver_core_1.isPoint)(point) && (point.z === null || point.z === undefined);\n    },\n    toStructure: function (point) {\n      return new packstream_1.structure.Structure(POINT_2D, [(0, neo4j_driver_core_1.int)(point.srid), point.x, point.y]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Point2D', POINT_2D_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 3),\n          srid = _a[0],\n          x = _a[1],\n          y = _a[2];\n\n      return new neo4j_driver_core_1.Point(srid, x, y, undefined // z\n      );\n    }\n  });\n}\n/**\n * Creates the Point3D Transformer\n * @returns {TypeTransformer}\n */\n\n\nfunction createPoint3DTransformer() {\n  return new transformer_1.TypeTransformer({\n    signature: POINT_3D,\n    isTypeInstance: function (point) {\n      return (0, neo4j_driver_core_1.isPoint)(point) && point.z !== null && point.z !== undefined;\n    },\n    toStructure: function (point) {\n      return new packstream_1.structure.Structure(POINT_3D, [(0, neo4j_driver_core_1.int)(point.srid), point.x, point.y, point.z]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Point3D', POINT_3D_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 4),\n          srid = _a[0],\n          x = _a[1],\n          y = _a[2],\n          z = _a[3];\n\n      return new neo4j_driver_core_1.Point(srid, x, y, z);\n    }\n  });\n}\n/**\n * Creates the Duration Transformer\n * @returns {TypeTransformer}\n */\n\n\nfunction createDurationTransformer() {\n  return new transformer_1.TypeTransformer({\n    signature: DURATION,\n    isTypeInstance: neo4j_driver_core_1.isDuration,\n    toStructure: function (value) {\n      var months = (0, neo4j_driver_core_1.int)(value.months);\n      var days = (0, neo4j_driver_core_1.int)(value.days);\n      var seconds = (0, neo4j_driver_core_1.int)(value.seconds);\n      var nanoseconds = (0, neo4j_driver_core_1.int)(value.nanoseconds);\n      return new packstream_1.structure.Structure(DURATION, [months, days, seconds, nanoseconds]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Duration', DURATION_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 4),\n          months = _a[0],\n          days = _a[1],\n          seconds = _a[2],\n          nanoseconds = _a[3];\n\n      return new neo4j_driver_core_1.Duration(months, days, seconds, nanoseconds);\n    }\n  });\n}\n/**\n * Creates the LocalTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\n\n\nfunction createLocalTimeTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n      useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: LOCAL_TIME,\n    isTypeInstance: neo4j_driver_core_1.isLocalTime,\n    toStructure: function (value) {\n      var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n      return new packstream_1.structure.Structure(LOCAL_TIME, [nanoOfDay]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('LocalTime', LOCAL_TIME_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 1),\n          nanoOfDay = _a[0];\n\n      var result = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the Time Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\n\n\nfunction createTimeTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n      useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: TIME,\n    isTypeInstance: neo4j_driver_core_1.isTime,\n    toStructure: function (value) {\n      var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n      var offsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n      return new packstream_1.structure.Structure(TIME, [nanoOfDay, offsetSeconds]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Time', TIME_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 2),\n          nanoOfDay = _a[0],\n          offsetSeconds = _a[1];\n\n      var localTime = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n      var result = new neo4j_driver_core_1.Time(localTime.hour, localTime.minute, localTime.second, localTime.nanosecond, offsetSeconds);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the Date Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\n\n\nfunction createDateTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n      useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: DATE,\n    isTypeInstance: neo4j_driver_core_1.isDate,\n    toStructure: function (value) {\n      var epochDay = dateToEpochDay(value.year, value.month, value.day);\n      return new packstream_1.structure.Structure(DATE, [epochDay]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('Date', DATE_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 1),\n          epochDay = _a[0];\n\n      var result = (0, temporal_factory_1.epochDayToDate)(epochDay);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the LocalDateTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\n\n\nfunction createLocalDateTimeTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n      useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: LOCAL_DATE_TIME,\n    isTypeInstance: neo4j_driver_core_1.isLocalDateTime,\n    toStructure: function (value) {\n      var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n      var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n      return new packstream_1.structure.Structure(LOCAL_DATE_TIME, [epochSecond, nano]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('LocalDateTime', LOCAL_DATE_TIME_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 2),\n          epochSecond = _a[0],\n          nano = _a[1];\n\n      var result = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the DateTime with ZoneId Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\n\n\nfunction createDateTimeWithZoneIdTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n      useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: DATE_TIME_WITH_ZONE_ID,\n    isTypeInstance: function (object) {\n      return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId != null;\n    },\n    toStructure: function (value) {\n      var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n      var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n      var timeZoneId = value.timeZoneId;\n      return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [epochSecond, nano, timeZoneId]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 3),\n          epochSecond = _a[0],\n          nano = _a[1],\n          timeZoneId = _a[2];\n\n      var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n      var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, null, timeZoneId);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n/**\n * Creates the DateTime with Offset Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\n\n\nfunction createDateTimeWithOffsetTransformer(_a) {\n  var disableLosslessIntegers = _a.disableLosslessIntegers,\n      useBigInt = _a.useBigInt;\n  return new transformer_1.TypeTransformer({\n    signature: DATE_TIME_WITH_ZONE_OFFSET,\n    isTypeInstance: function (object) {\n      return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId == null;\n    },\n    toStructure: function (value) {\n      var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n      var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n      var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n      return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [epochSecond, nano, timeZoneOffsetSeconds]);\n    },\n    fromStructure: function (struct) {\n      packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\n\n      var _a = __read(struct.fields, 3),\n          epochSecond = _a[0],\n          nano = _a[1],\n          timeZoneOffsetSeconds = _a[2];\n\n      var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n      var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\n      return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n    }\n  });\n}\n\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\n  if (!disableLosslessIntegers && !useBigInt) {\n    return obj;\n  }\n\n  var convert = function (value) {\n    return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\n  };\n\n  var clone = Object.create(Object.getPrototypeOf(obj));\n\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\n      var value = obj[prop];\n      clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\n    }\n  }\n\n  Object.freeze(clone);\n  return clone;\n}\n\nexports.default = __assign(__assign({}, bolt_protocol_v1_transformer_1.default), {\n  createPoint2DTransformer: createPoint2DTransformer,\n  createPoint3DTransformer: createPoint3DTransformer,\n  createDurationTransformer: createDurationTransformer,\n  createLocalTimeTransformer: createLocalTimeTransformer,\n  createTimeTransformer: createTimeTransformer,\n  createDateTransformer: createDateTransformer,\n  createLocalDateTimeTransformer: createLocalDateTimeTransformer,\n  createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer,\n  createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer\n});","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__importDefault","mod","__esModule","defineProperty","exports","neo4j_driver_core_1","require","packstream_1","transformer_1","temporal_factory_1","bolt_protocol_v1_transformer_1","_a","internal","temporalUtil","dateToEpochDay","localDateTimeToEpochSecond","localTimeToNanoOfDay","POINT_2D","POINT_2D_STRUCT_SIZE","POINT_3D","POINT_3D_STRUCT_SIZE","DURATION","DURATION_STRUCT_SIZE","LOCAL_TIME","LOCAL_TIME_STRUCT_SIZE","TIME","TIME_STRUCT_SIZE","DATE","DATE_STRUCT_SIZE","LOCAL_DATE_TIME","LOCAL_DATE_TIME_STRUCT_SIZE","DATE_TIME_WITH_ZONE_OFFSET","DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE","DATE_TIME_WITH_ZONE_ID","DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE","createPoint2DTransformer","TypeTransformer","signature","isTypeInstance","point","isPoint","z","undefined","toStructure","structure","Structure","int","srid","x","y","fromStructure","struct","verifyStructSize","size","fields","Point","createPoint3DTransformer","createDurationTransformer","isDuration","months","days","seconds","nanoseconds","Duration","createLocalTimeTransformer","disableLosslessIntegers","useBigInt","isLocalTime","nanoOfDay","hour","minute","second","nanosecond","result","nanoOfDayToLocalTime","convertIntegerPropsIfNeeded","createTimeTransformer","isTime","offsetSeconds","timeZoneOffsetSeconds","localTime","Time","createDateTransformer","isDate","epochDay","year","month","day","epochDayToDate","createLocalDateTimeTransformer","isLocalDateTime","epochSecond","nano","epochSecondAndNanoToLocalDateTime","createDateTimeWithZoneIdTransformer","object","isDateTime","timeZoneId","localDateTime","DateTime","createDateTimeWithOffsetTransformer","obj","convert","toBigInt","toNumberOrInfinity","clone","create","getPrototypeOf","prop","isInt","freeze","default"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-bolt-connection/lib/bolt/bolt-protocol-v2.transformer.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar packstream_1 = require(\"../packstream\");\nvar transformer_1 = require(\"./transformer\");\nvar temporal_factory_1 = require(\"./temporal-factory\");\nvar bolt_protocol_v1_transformer_1 = __importDefault(require(\"./bolt-protocol-v1.transformer\"));\nvar _a = neo4j_driver_core_1.internal.temporalUtil, dateToEpochDay = _a.dateToEpochDay, localDateTimeToEpochSecond = _a.localDateTimeToEpochSecond, localTimeToNanoOfDay = _a.localTimeToNanoOfDay;\nvar POINT_2D = 0x58;\nvar POINT_2D_STRUCT_SIZE = 3;\nvar POINT_3D = 0x59;\nvar POINT_3D_STRUCT_SIZE = 4;\nvar DURATION = 0x45;\nvar DURATION_STRUCT_SIZE = 4;\nvar LOCAL_TIME = 0x74;\nvar LOCAL_TIME_STRUCT_SIZE = 1;\nvar TIME = 0x54;\nvar TIME_STRUCT_SIZE = 2;\nvar DATE = 0x44;\nvar DATE_STRUCT_SIZE = 1;\nvar LOCAL_DATE_TIME = 0x64;\nvar LOCAL_DATE_TIME_STRUCT_SIZE = 2;\nvar DATE_TIME_WITH_ZONE_OFFSET = 0x46;\nvar DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE = 3;\nvar DATE_TIME_WITH_ZONE_ID = 0x66;\nvar DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE = 3;\n/**\n * Creates the Point2D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint2DTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: POINT_2D,\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && (point.z === null || point.z === undefined); },\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_2D, [\n            (0, neo4j_driver_core_1.int)(point.srid),\n            point.x,\n            point.y\n        ]); },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Point2D', POINT_2D_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), srid = _a[0], x = _a[1], y = _a[2];\n            return new neo4j_driver_core_1.Point(srid, x, y, undefined // z\n            );\n        }\n    });\n}\n/**\n * Creates the Point3D Transformer\n * @returns {TypeTransformer}\n */\nfunction createPoint3DTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: POINT_3D,\n        isTypeInstance: function (point) { return (0, neo4j_driver_core_1.isPoint)(point) && point.z !== null && point.z !== undefined; },\n        toStructure: function (point) { return new packstream_1.structure.Structure(POINT_3D, [\n            (0, neo4j_driver_core_1.int)(point.srid),\n            point.x,\n            point.y,\n            point.z\n        ]); },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Point3D', POINT_3D_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), srid = _a[0], x = _a[1], y = _a[2], z = _a[3];\n            return new neo4j_driver_core_1.Point(srid, x, y, z);\n        }\n    });\n}\n/**\n * Creates the Duration Transformer\n * @returns {TypeTransformer}\n */\nfunction createDurationTransformer() {\n    return new transformer_1.TypeTransformer({\n        signature: DURATION,\n        isTypeInstance: neo4j_driver_core_1.isDuration,\n        toStructure: function (value) {\n            var months = (0, neo4j_driver_core_1.int)(value.months);\n            var days = (0, neo4j_driver_core_1.int)(value.days);\n            var seconds = (0, neo4j_driver_core_1.int)(value.seconds);\n            var nanoseconds = (0, neo4j_driver_core_1.int)(value.nanoseconds);\n            return new packstream_1.structure.Structure(DURATION, [months, days, seconds, nanoseconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Duration', DURATION_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 4), months = _a[0], days = _a[1], seconds = _a[2], nanoseconds = _a[3];\n            return new neo4j_driver_core_1.Duration(months, days, seconds, nanoseconds);\n        }\n    });\n}\n/**\n * Creates the LocalTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: LOCAL_TIME,\n        isTypeInstance: neo4j_driver_core_1.isLocalTime,\n        toStructure: function (value) {\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n            return new packstream_1.structure.Structure(LOCAL_TIME, [nanoOfDay]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('LocalTime', LOCAL_TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 1), nanoOfDay = _a[0];\n            var result = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the Time Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: TIME,\n        isTypeInstance: neo4j_driver_core_1.isTime,\n        toStructure: function (value) {\n            var nanoOfDay = localTimeToNanoOfDay(value.hour, value.minute, value.second, value.nanosecond);\n            var offsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(TIME, [nanoOfDay, offsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Time', TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 2), nanoOfDay = _a[0], offsetSeconds = _a[1];\n            var localTime = (0, temporal_factory_1.nanoOfDayToLocalTime)(nanoOfDay);\n            var result = new neo4j_driver_core_1.Time(localTime.hour, localTime.minute, localTime.second, localTime.nanosecond, offsetSeconds);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the Date Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE,\n        isTypeInstance: neo4j_driver_core_1.isDate,\n        toStructure: function (value) {\n            var epochDay = dateToEpochDay(value.year, value.month, value.day);\n            return new packstream_1.structure.Structure(DATE, [epochDay]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('Date', DATE_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 1), epochDay = _a[0];\n            var result = (0, temporal_factory_1.epochDayToDate)(epochDay);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the LocalDateTime Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createLocalDateTimeTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: LOCAL_DATE_TIME,\n        isTypeInstance: neo4j_driver_core_1.isLocalDateTime,\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            return new packstream_1.structure.Structure(LOCAL_DATE_TIME, [epochSecond, nano]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('LocalDateTime', LOCAL_DATE_TIME_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 2), epochSecond = _a[0], nano = _a[1];\n            var result = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the DateTime with ZoneId Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithZoneIdTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE_TIME_WITH_ZONE_ID,\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId != null; },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneId = value.timeZoneId;\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_ID, [epochSecond, nano, timeZoneId]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneId', DATE_TIME_WITH_ZONE_ID_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneId = _a[2];\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, null, timeZoneId);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\n/**\n * Creates the DateTime with Offset Transformer\n * @param {Object} param\n * @param {boolean} param.disableLosslessIntegers Disables lossless integers\n * @param {boolean} param.useBigInt Uses BigInt instead of number or Integer\n * @returns {TypeTransformer}\n */\nfunction createDateTimeWithOffsetTransformer(_a) {\n    var disableLosslessIntegers = _a.disableLosslessIntegers, useBigInt = _a.useBigInt;\n    return new transformer_1.TypeTransformer({\n        signature: DATE_TIME_WITH_ZONE_OFFSET,\n        isTypeInstance: function (object) { return (0, neo4j_driver_core_1.isDateTime)(object) && object.timeZoneId == null; },\n        toStructure: function (value) {\n            var epochSecond = localDateTimeToEpochSecond(value.year, value.month, value.day, value.hour, value.minute, value.second, value.nanosecond);\n            var nano = (0, neo4j_driver_core_1.int)(value.nanosecond);\n            var timeZoneOffsetSeconds = (0, neo4j_driver_core_1.int)(value.timeZoneOffsetSeconds);\n            return new packstream_1.structure.Structure(DATE_TIME_WITH_ZONE_OFFSET, [epochSecond, nano, timeZoneOffsetSeconds]);\n        },\n        fromStructure: function (struct) {\n            packstream_1.structure.verifyStructSize('DateTimeWithZoneOffset', DATE_TIME_WITH_ZONE_OFFSET_STRUCT_SIZE, struct.size);\n            var _a = __read(struct.fields, 3), epochSecond = _a[0], nano = _a[1], timeZoneOffsetSeconds = _a[2];\n            var localDateTime = (0, temporal_factory_1.epochSecondAndNanoToLocalDateTime)(epochSecond, nano);\n            var result = new neo4j_driver_core_1.DateTime(localDateTime.year, localDateTime.month, localDateTime.day, localDateTime.hour, localDateTime.minute, localDateTime.second, localDateTime.nanosecond, timeZoneOffsetSeconds, null);\n            return convertIntegerPropsIfNeeded(result, disableLosslessIntegers, useBigInt);\n        }\n    });\n}\nfunction convertIntegerPropsIfNeeded(obj, disableLosslessIntegers, useBigInt) {\n    if (!disableLosslessIntegers && !useBigInt) {\n        return obj;\n    }\n    var convert = function (value) {\n        return useBigInt ? value.toBigInt() : value.toNumberOrInfinity();\n    };\n    var clone = Object.create(Object.getPrototypeOf(obj));\n    for (var prop in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, prop) === true) {\n            var value = obj[prop];\n            clone[prop] = (0, neo4j_driver_core_1.isInt)(value) ? convert(value) : value;\n        }\n    }\n    Object.freeze(clone);\n    return clone;\n}\nexports.default = __assign(__assign({}, bolt_protocol_v1_transformer_1.default), { createPoint2DTransformer: createPoint2DTransformer, createPoint3DTransformer: createPoint3DTransformer, createDurationTransformer: createDurationTransformer, createLocalTimeTransformer: createLocalTimeTransformer, createTimeTransformer: createTimeTransformer, createDateTransformer: createDateTransformer, createLocalDateTimeTransformer: createLocalDateTimeTransformer, createDateTimeWithZoneIdTransformer: createDateTimeWithZoneIdTransformer, createDateTimeWithOffsetTransformer: createDateTimeWithOffsetTransformer });\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}