{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TelemetryObserver = exports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LogoffObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\n\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\n\nvar StreamObserver =\n/** @class */\nfunction () {\n  function StreamObserver() {}\n\n  StreamObserver.prototype.onNext = function (rawRecord) {};\n\n  StreamObserver.prototype.onError = function (_error) {};\n\n  StreamObserver.prototype.onCompleted = function (meta) {};\n\n  return StreamObserver;\n}();\n\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\n\nvar ResultStreamObserver =\n/** @class */\nfunction (_super) {\n  __extends(ResultStreamObserver, _super);\n  /**\n   *\n   * @param {Object} param\n   * @param {Object} param.server\n   * @param {boolean} param.reactive\n   * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n   * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n   * @param {number|Integer} param.fetchSize -\n   * @param {function(err: Error): Promise|void} param.beforeError -\n   * @param {function(err: Error): Promise|void} param.afterError -\n   * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n   * @param {function(keys: string[]): Promise|void} param.afterKeys -\n   * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n   * @param {function(metadata: Object): Promise|void} param.afterComplete -\n   */\n\n\n  function ResultStreamObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.reactive,\n        reactive = _c === void 0 ? false : _c,\n        moreFunction = _b.moreFunction,\n        discardFunction = _b.discardFunction,\n        _d = _b.fetchSize,\n        fetchSize = _d === void 0 ? FETCH_ALL : _d,\n        beforeError = _b.beforeError,\n        afterError = _b.afterError,\n        beforeKeys = _b.beforeKeys,\n        afterKeys = _b.afterKeys,\n        beforeComplete = _b.beforeComplete,\n        afterComplete = _b.afterComplete,\n        server = _b.server,\n        _e = _b.highRecordWatermark,\n        highRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e,\n        _f = _b.lowRecordWatermark,\n        lowRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f;\n\n    var _this = _super.call(this) || this;\n\n    _this._fieldKeys = null;\n    _this._fieldLookup = null;\n    _this._head = null;\n    _this._queuedRecords = [];\n    _this._tail = null;\n    _this._error = null;\n    _this._observers = [];\n    _this._meta = {};\n    _this._server = server;\n    _this._beforeError = beforeError;\n    _this._afterError = afterError;\n    _this._beforeKeys = beforeKeys;\n    _this._afterKeys = afterKeys;\n    _this._beforeComplete = beforeComplete;\n    _this._afterComplete = afterComplete;\n    _this._queryId = null;\n    _this._moreFunction = moreFunction;\n    _this._discardFunction = discardFunction;\n    _this._discard = false;\n    _this._fetchSize = fetchSize;\n    _this._lowRecordWatermark = lowRecordWatermark;\n    _this._highRecordWatermark = highRecordWatermark;\n\n    _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n\n    _this._setupAutoPull();\n\n    _this._paused = false;\n    return _this;\n  }\n  /**\n   * Pause the record consuming\n   *\n   * This function will supend the record consuming. It will not cancel the stream and the already\n   * requested records will be sent to the subscriber.\n   */\n\n\n  ResultStreamObserver.prototype.pause = function () {\n    this._paused = true;\n  };\n  /**\n   * Resume the record consuming\n   *\n   * This function will resume the record consuming fetching more records from the server.\n   */\n\n\n  ResultStreamObserver.prototype.resume = function () {\n    this._paused = false;\n\n    this._setupAutoPull(true);\n\n    this._state.pull(this);\n  };\n  /**\n   * Will be called on every record that comes in and transform a raw record\n   * to a Object. If user-provided observer is present, pass transformed record\n   * to it's onNext method, otherwise, push to record que.\n   * @param {Array} rawRecord - An array with the raw record\n   */\n\n\n  ResultStreamObserver.prototype.onNext = function (rawRecord) {\n    var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n\n    if (this._observers.some(function (o) {\n      return o.onNext;\n    })) {\n      this._observers.forEach(function (o) {\n        if (o.onNext) {\n          o.onNext(record);\n        }\n      });\n    } else {\n      this._queuedRecords.push(record);\n\n      if (this._queuedRecords.length > this._highRecordWatermark) {\n        this._autoPull = false;\n      }\n    }\n  };\n\n  ResultStreamObserver.prototype.onCompleted = function (meta) {\n    this._state.onSuccess(this, meta);\n  };\n  /**\n   * Will be called on errors.\n   * If user-provided observer is present, pass the error\n   * to it's onError method, otherwise set instance variable _error.\n   * @param {Object} error - An error object\n   */\n\n\n  ResultStreamObserver.prototype.onError = function (error) {\n    this._state.onError(this, error);\n  };\n  /**\n   * Cancel pending record stream\n   */\n\n\n  ResultStreamObserver.prototype.cancel = function () {\n    this._discard = true;\n  };\n  /**\n   * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n   * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n   *\n   * However, some operations can be represented as a single message which receives full metadata in a single response.\n   * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n   * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n   *\n   * This function prepares the observer to only handle a single response message.\n   */\n\n\n  ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n    this._head = [];\n    this._fieldKeys = [];\n\n    this._setState(_states.STREAMING);\n  };\n  /**\n   * Mark this observer as if it has completed with no metadata.\n   */\n\n\n  ResultStreamObserver.prototype.markCompleted = function () {\n    this._head = [];\n    this._fieldKeys = [];\n    this._tail = {};\n\n    this._setState(_states.SUCCEEDED);\n  };\n  /**\n   * Subscribe to events with provided observer.\n   * @param {Object} observer - Observer object\n   * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n   * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n   * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n   * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n   */\n\n\n  ResultStreamObserver.prototype.subscribe = function (observer) {\n    if (this._head && observer.onKeys) {\n      observer.onKeys(this._head);\n    }\n\n    if (this._queuedRecords.length > 0 && observer.onNext) {\n      for (var i = 0; i < this._queuedRecords.length; i++) {\n        observer.onNext(this._queuedRecords[i]);\n\n        if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n          this._autoPull = true;\n\n          if (this._state === _states.READY) {\n            this._handleStreaming();\n          }\n        }\n      }\n    }\n\n    if (this._tail && observer.onCompleted) {\n      observer.onCompleted(this._tail);\n    }\n\n    if (this._error) {\n      observer.onError(this._error);\n    }\n\n    this._observers.push(observer);\n\n    if (this._state === _states.READY) {\n      this._handleStreaming();\n    }\n  };\n\n  ResultStreamObserver.prototype._handleHasMore = function (meta) {\n    // We've consumed current batch and server notified us that there're more\n    // records to stream. Let's invoke more or discard function based on whether\n    // the user wants to discard streaming or not\n    this._setState(_states.READY); // we've done streaming\n\n\n    this._handleStreaming();\n\n    delete meta.has_more;\n  };\n\n  ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n    var _this = this;\n\n    var completionMetadata = Object.assign(this._server ? {\n      server: this._server\n    } : {}, this._meta, meta);\n\n    if (![undefined, null, 'r', 'w', 'rw', 's'].includes(completionMetadata.type)) {\n      this.onError((0, neo4j_driver_core_1.newError)(\"Server returned invalid query type. Expected one of [undefined, null, \\\"r\\\", \\\"w\\\", \\\"rw\\\", \\\"s\\\"] but got '\".concat(completionMetadata.type, \"'\"), PROTOCOL_ERROR));\n      return;\n    }\n\n    this._setState(_states.SUCCEEDED);\n\n    var beforeHandlerResult = null;\n\n    if (this._beforeComplete) {\n      beforeHandlerResult = this._beforeComplete(completionMetadata);\n    }\n\n    var continuation = function () {\n      // End of stream\n      _this._tail = completionMetadata;\n\n      if (_this._observers.some(function (o) {\n        return o.onCompleted;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onCompleted) {\n            o.onCompleted(completionMetadata);\n          }\n        });\n      }\n\n      if (_this._afterComplete) {\n        _this._afterComplete(completionMetadata);\n      }\n    };\n\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n\n  ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n    var _this = this;\n\n    if (this._fieldKeys === null) {\n      // Stream header, build a name->index field lookup table\n      // to be used by records. This is an optimization to make it\n      // faster to look up fields in a record by name, rather than by index.\n      // Since the records we get back via Bolt are just arrays of values.\n      this._fieldKeys = [];\n      this._fieldLookup = {};\n\n      if (meta.fields && meta.fields.length > 0) {\n        this._fieldKeys = meta.fields;\n\n        for (var i = 0; i < meta.fields.length; i++) {\n          this._fieldLookup[meta.fields[i]] = i;\n        } // remove fields key from metadata object\n\n\n        delete meta.fields;\n      } // Extract server generated query id for use in requestMore and discard\n      // functions\n\n\n      if (meta.qid !== null && meta.qid !== undefined) {\n        this._queryId = meta.qid; // remove qid from metadata object\n\n        delete meta.qid;\n      }\n\n      this._storeMetadataForCompletion(meta);\n\n      var beforeHandlerResult = null;\n\n      if (this._beforeKeys) {\n        beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n      }\n\n      var continuation_1 = function () {\n        _this._head = _this._fieldKeys;\n\n        if (_this._observers.some(function (o) {\n          return o.onKeys;\n        })) {\n          _this._observers.forEach(function (o) {\n            if (o.onKeys) {\n              o.onKeys(_this._fieldKeys);\n            }\n          });\n        }\n\n        if (_this._afterKeys) {\n          _this._afterKeys(_this._fieldKeys);\n        }\n\n        afterSuccess();\n      };\n\n      if (beforeHandlerResult) {\n        Promise.resolve(beforeHandlerResult).then(function () {\n          return continuation_1();\n        });\n      } else {\n        continuation_1();\n      }\n    }\n  };\n\n  ResultStreamObserver.prototype._handleError = function (error) {\n    var _this = this;\n\n    this._setState(_states.FAILED);\n\n    this._error = error;\n    var beforeHandlerResult = null;\n\n    if (this._beforeError) {\n      beforeHandlerResult = this._beforeError(error);\n    }\n\n    var continuation = function () {\n      if (_this._observers.some(function (o) {\n        return o.onError;\n      })) {\n        _this._observers.forEach(function (o) {\n          if (o.onError) {\n            o.onError(error);\n          }\n        });\n      }\n\n      if (_this._afterError) {\n        _this._afterError(error);\n      }\n    };\n\n    if (beforeHandlerResult) {\n      Promise.resolve(beforeHandlerResult).then(function () {\n        return continuation();\n      });\n    } else {\n      continuation();\n    }\n  };\n\n  ResultStreamObserver.prototype._handleStreaming = function () {\n    if (this._head && this._observers.some(function (o) {\n      return o.onNext || o.onCompleted;\n    })) {\n      if (!this._paused && (this._discard || this._autoPull)) {\n        this._more();\n      }\n    }\n  };\n\n  ResultStreamObserver.prototype._more = function () {\n    if (this._discard) {\n      this._discardFunction(this._queryId, this);\n    } else {\n      this._moreFunction(this._queryId, this._fetchSize, this);\n    }\n\n    this._setState(_states.STREAMING);\n  };\n\n  ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n    var keys = Object.keys(meta);\n    var index = keys.length;\n    var key = '';\n\n    while (index--) {\n      key = keys[index];\n      this._meta[key] = meta[key];\n    }\n  };\n\n  ResultStreamObserver.prototype._setState = function (state) {\n    this._state = state;\n  };\n\n  ResultStreamObserver.prototype._setupAutoPull = function () {\n    this._autoPull = true;\n  };\n\n  return ResultStreamObserver;\n}(StreamObserver);\n\nexports.ResultStreamObserver = ResultStreamObserver;\n\nvar LoginObserver =\n/** @class */\nfunction (_super) {\n  __extends(LoginObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n\n\n  function LoginObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onError = _b.onError,\n        onCompleted = _b.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n\n  LoginObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n  };\n\n  LoginObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  LoginObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n\n  return LoginObserver;\n}(StreamObserver);\n\nexports.LoginObserver = LoginObserver;\n\nvar LogoffObserver =\n/** @class */\nfunction (_super) {\n  __extends(LogoffObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n\n\n  function LogoffObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onError = _b.onError,\n        onCompleted = _b.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n\n  LogoffObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when logging off ' + neo4j_driver_core_1.json.stringify(record)));\n  };\n\n  LogoffObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  LogoffObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n\n  return LogoffObserver;\n}(StreamObserver);\n\nexports.LogoffObserver = LogoffObserver;\n\nvar ResetObserver =\n/** @class */\nfunction (_super) {\n  __extends(ResetObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onComplete\n   */\n\n\n  function ResetObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onProtocolError = _b.onProtocolError,\n        onError = _b.onError,\n        onComplete = _b.onComplete;\n\n    var _this = _super.call(this) || this;\n\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onComplete = onComplete;\n    return _this;\n  }\n\n  ResetObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n\n  ResetObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  ResetObserver.prototype.onCompleted = function (metadata) {\n    if (this._onComplete) {\n      this._onComplete(metadata);\n    }\n  };\n\n  return ResetObserver;\n}(StreamObserver);\n\nexports.ResetObserver = ResetObserver;\n\nvar TelemetryObserver =\n/** @class */\nfunction (_super) {\n  __extends(TelemetryObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: Error)} param.onError\n   * @param {function(metadata)} param.onCompleted\n   */\n\n\n  function TelemetryObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onError = _b.onError,\n        onCompleted = _b.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n\n  TelemetryObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when sending telemetry ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n\n  TelemetryObserver.prototype.onError = function (error) {\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  TelemetryObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(metadata);\n    }\n  };\n\n  return TelemetryObserver;\n}(ResultStreamObserver);\n\nexports.TelemetryObserver = TelemetryObserver;\n\nvar FailedObserver =\n/** @class */\nfunction (_super) {\n  __extends(FailedObserver, _super);\n\n  function FailedObserver(_a) {\n    var error = _a.error,\n        onError = _a.onError;\n\n    var _this = _super.call(this, {\n      beforeError: onError\n    }) || this;\n\n    _this.onError(error);\n\n    return _this;\n  }\n\n  return FailedObserver;\n}(ResultStreamObserver);\n\nexports.FailedObserver = FailedObserver;\n\nvar CompletedObserver =\n/** @class */\nfunction (_super) {\n  __extends(CompletedObserver, _super);\n\n  function CompletedObserver() {\n    var _this = _super.call(this) || this;\n\n    _super.prototype.markCompleted.call(_this);\n\n    return _this;\n  }\n\n  return CompletedObserver;\n}(ResultStreamObserver);\n\nexports.CompletedObserver = CompletedObserver;\n\nvar ProcedureRouteObserver =\n/** @class */\nfunction (_super) {\n  __extends(ProcedureRouteObserver, _super);\n\n  function ProcedureRouteObserver(_a) {\n    var resultObserver = _a.resultObserver,\n        onProtocolError = _a.onProtocolError,\n        onError = _a.onError,\n        onCompleted = _a.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._resultObserver = resultObserver;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    _this._records = [];\n    _this._onProtocolError = onProtocolError;\n    resultObserver.subscribe(_this);\n    return _this;\n  }\n\n  ProcedureRouteObserver.prototype.onNext = function (record) {\n    this._records.push(record);\n  };\n\n  ProcedureRouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  ProcedureRouteObserver.prototype.onCompleted = function () {\n    if (this._records !== null && this._records.length !== 1) {\n      this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' + this._records.length + ' records but expected only one.\\n' + neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n      return;\n    }\n\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n    }\n  };\n\n  return ProcedureRouteObserver;\n}(StreamObserver);\n\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\n\nvar RouteObserver =\n/** @class */\nfunction (_super) {\n  __extends(RouteObserver, _super);\n  /**\n   *\n   * @param {Object} param -\n   * @param {function(err: String)} param.onProtocolError\n   * @param {function(err: Error)} param.onError\n   * @param {function(RawRoutingTable)} param.onCompleted\n   */\n\n\n  function RouteObserver(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        onProtocolError = _b.onProtocolError,\n        onError = _b.onError,\n        onCompleted = _b.onCompleted;\n\n    var _this = _super.call(this) || this;\n\n    _this._onProtocolError = onProtocolError;\n    _this._onError = onError;\n    _this._onCompleted = onCompleted;\n    return _this;\n  }\n\n  RouteObserver.prototype.onNext = function (record) {\n    this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n  };\n\n  RouteObserver.prototype.onError = function (error) {\n    if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n      this._onProtocolError(error.message);\n    }\n\n    if (this._onError) {\n      this._onError(error);\n    }\n  };\n\n  RouteObserver.prototype.onCompleted = function (metadata) {\n    if (this._onCompleted) {\n      this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n    }\n  };\n\n  return RouteObserver;\n}(StreamObserver);\n\nexports.RouteObserver = RouteObserver;\nvar _states = {\n  READY_STREAMING: {\n    // async start state\n    onSuccess: function (streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        streamObserver._setState(_states.STREAMING);\n      } // after run succeeded, async directly move to streaming\n      // state\n      );\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'READY_STREAMING';\n    },\n    pull: function () {}\n  },\n  READY: {\n    // reactive start state\n    onSuccess: function (streamObserver, meta) {\n      streamObserver._handleRunSuccess(meta, function () {\n        return streamObserver._handleStreaming();\n      } // after run succeeded received, reactive shall start pulling\n      );\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'READY';\n    },\n    pull: function (streamObserver) {\n      return streamObserver._more();\n    }\n  },\n  STREAMING: {\n    onSuccess: function (streamObserver, meta) {\n      if (meta.has_more) {\n        streamObserver._handleHasMore(meta);\n      } else {\n        streamObserver._handlePullSuccess(meta);\n      }\n    },\n    onError: function (streamObserver, error) {\n      streamObserver._handleError(error);\n    },\n    name: function () {\n      return 'STREAMING';\n    },\n    pull: function () {}\n  },\n  FAILED: {\n    onError: function (_error) {// more errors are ignored\n    },\n    name: function () {\n      return 'FAILED';\n    },\n    pull: function () {}\n  },\n  SUCCEEDED: {\n    name: function () {\n      return 'SUCCEEDED';\n    },\n    pull: function () {}\n  }\n};","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","TelemetryObserver","ProcedureRouteObserver","RouteObserver","CompletedObserver","FailedObserver","ResetObserver","LogoffObserver","LoginObserver","ResultStreamObserver","StreamObserver","neo4j_driver_core_1","require","routing_table_raw_1","FETCH_ALL","internal","constants","PROTOCOL_ERROR","error","onNext","rawRecord","onError","_error","onCompleted","meta","_super","_a","_b","_c","reactive","moreFunction","discardFunction","_d","fetchSize","beforeError","afterError","beforeKeys","afterKeys","beforeComplete","afterComplete","server","_e","highRecordWatermark","Number","MAX_VALUE","_f","lowRecordWatermark","_this","_fieldKeys","_fieldLookup","_head","_queuedRecords","_tail","_observers","_meta","_server","_beforeError","_afterError","_beforeKeys","_afterKeys","_beforeComplete","_afterComplete","_queryId","_moreFunction","_discardFunction","_discard","_fetchSize","_lowRecordWatermark","_highRecordWatermark","_setState","_states","READY","READY_STREAMING","_setupAutoPull","_paused","pause","resume","_state","pull","record","Record","some","o","forEach","push","length","_autoPull","onSuccess","cancel","prepareToHandleSingleResponse","STREAMING","markCompleted","SUCCEEDED","subscribe","observer","onKeys","i","_handleStreaming","_handleHasMore","has_more","_handlePullSuccess","completionMetadata","assign","undefined","includes","type","newError","concat","beforeHandlerResult","continuation","Promise","resolve","then","_handleRunSuccess","afterSuccess","fields","qid","_storeMetadataForCompletion","continuation_1","_handleError","FAILED","_more","keys","index","key","state","_onError","_onCompleted","json","stringify","metadata","onProtocolError","onComplete","_onProtocolError","_onComplete","code","message","resultObserver","_resultObserver","_records","default","ofRecord","ofMessageResponse","streamObserver","name"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-bolt-connection/lib/bolt/stream-observers.js"],"sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TelemetryObserver = exports.ProcedureRouteObserver = exports.RouteObserver = exports.CompletedObserver = exports.FailedObserver = exports.ResetObserver = exports.LogoffObserver = exports.LoginObserver = exports.ResultStreamObserver = exports.StreamObserver = void 0;\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar routing_table_raw_1 = __importDefault(require(\"./routing-table-raw\"));\nvar FETCH_ALL = neo4j_driver_core_1.internal.constants.FETCH_ALL;\nvar PROTOCOL_ERROR = neo4j_driver_core_1.error.PROTOCOL_ERROR;\nvar StreamObserver = /** @class */ (function () {\n    function StreamObserver() {\n    }\n    StreamObserver.prototype.onNext = function (rawRecord) { };\n    StreamObserver.prototype.onError = function (_error) { };\n    StreamObserver.prototype.onCompleted = function (meta) { };\n    return StreamObserver;\n}());\nexports.StreamObserver = StreamObserver;\n/**\n * Handles a RUN/PULL_ALL, or RUN/DISCARD_ALL requests, maps the responses\n * in a way that a user-provided observer can see these as a clean Stream\n * of records.\n * This class will queue up incoming messages until a user-provided observer\n * for the incoming stream is registered. Thus, we keep fields around\n * for tracking head/records/tail. These are only used if there is no\n * observer registered.\n * @access private\n */\nvar ResultStreamObserver = /** @class */ (function (_super) {\n    __extends(ResultStreamObserver, _super);\n    /**\n     *\n     * @param {Object} param\n     * @param {Object} param.server\n     * @param {boolean} param.reactive\n     * @param {function(stmtId: number|Integer, n: number|Integer, observer: StreamObserver)} param.moreFunction -\n     * @param {function(stmtId: number|Integer, observer: StreamObserver)} param.discardFunction -\n     * @param {number|Integer} param.fetchSize -\n     * @param {function(err: Error): Promise|void} param.beforeError -\n     * @param {function(err: Error): Promise|void} param.afterError -\n     * @param {function(keys: string[]): Promise|void} param.beforeKeys -\n     * @param {function(keys: string[]): Promise|void} param.afterKeys -\n     * @param {function(metadata: Object): Promise|void} param.beforeComplete -\n     * @param {function(metadata: Object): Promise|void} param.afterComplete -\n     */\n    function ResultStreamObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.reactive, reactive = _c === void 0 ? false : _c, moreFunction = _b.moreFunction, discardFunction = _b.discardFunction, _d = _b.fetchSize, fetchSize = _d === void 0 ? FETCH_ALL : _d, beforeError = _b.beforeError, afterError = _b.afterError, beforeKeys = _b.beforeKeys, afterKeys = _b.afterKeys, beforeComplete = _b.beforeComplete, afterComplete = _b.afterComplete, server = _b.server, _e = _b.highRecordWatermark, highRecordWatermark = _e === void 0 ? Number.MAX_VALUE : _e, _f = _b.lowRecordWatermark, lowRecordWatermark = _f === void 0 ? Number.MAX_VALUE : _f;\n        var _this = _super.call(this) || this;\n        _this._fieldKeys = null;\n        _this._fieldLookup = null;\n        _this._head = null;\n        _this._queuedRecords = [];\n        _this._tail = null;\n        _this._error = null;\n        _this._observers = [];\n        _this._meta = {};\n        _this._server = server;\n        _this._beforeError = beforeError;\n        _this._afterError = afterError;\n        _this._beforeKeys = beforeKeys;\n        _this._afterKeys = afterKeys;\n        _this._beforeComplete = beforeComplete;\n        _this._afterComplete = afterComplete;\n        _this._queryId = null;\n        _this._moreFunction = moreFunction;\n        _this._discardFunction = discardFunction;\n        _this._discard = false;\n        _this._fetchSize = fetchSize;\n        _this._lowRecordWatermark = lowRecordWatermark;\n        _this._highRecordWatermark = highRecordWatermark;\n        _this._setState(reactive ? _states.READY : _states.READY_STREAMING);\n        _this._setupAutoPull();\n        _this._paused = false;\n        return _this;\n    }\n    /**\n     * Pause the record consuming\n     *\n     * This function will supend the record consuming. It will not cancel the stream and the already\n     * requested records will be sent to the subscriber.\n     */\n    ResultStreamObserver.prototype.pause = function () {\n        this._paused = true;\n    };\n    /**\n     * Resume the record consuming\n     *\n     * This function will resume the record consuming fetching more records from the server.\n     */\n    ResultStreamObserver.prototype.resume = function () {\n        this._paused = false;\n        this._setupAutoPull(true);\n        this._state.pull(this);\n    };\n    /**\n     * Will be called on every record that comes in and transform a raw record\n     * to a Object. If user-provided observer is present, pass transformed record\n     * to it's onNext method, otherwise, push to record que.\n     * @param {Array} rawRecord - An array with the raw record\n     */\n    ResultStreamObserver.prototype.onNext = function (rawRecord) {\n        var record = new neo4j_driver_core_1.Record(this._fieldKeys, rawRecord, this._fieldLookup);\n        if (this._observers.some(function (o) { return o.onNext; })) {\n            this._observers.forEach(function (o) {\n                if (o.onNext) {\n                    o.onNext(record);\n                }\n            });\n        }\n        else {\n            this._queuedRecords.push(record);\n            if (this._queuedRecords.length > this._highRecordWatermark) {\n                this._autoPull = false;\n            }\n        }\n    };\n    ResultStreamObserver.prototype.onCompleted = function (meta) {\n        this._state.onSuccess(this, meta);\n    };\n    /**\n     * Will be called on errors.\n     * If user-provided observer is present, pass the error\n     * to it's onError method, otherwise set instance variable _error.\n     * @param {Object} error - An error object\n     */\n    ResultStreamObserver.prototype.onError = function (error) {\n        this._state.onError(this, error);\n    };\n    /**\n     * Cancel pending record stream\n     */\n    ResultStreamObserver.prototype.cancel = function () {\n        this._discard = true;\n    };\n    /**\n     * Stream observer defaults to handling responses for two messages: RUN + PULL_ALL or RUN + DISCARD_ALL.\n     * Response for RUN initializes query keys. Response for PULL_ALL / DISCARD_ALL exposes the result stream.\n     *\n     * However, some operations can be represented as a single message which receives full metadata in a single response.\n     * For example, operations to begin, commit and rollback an explicit transaction use two messages in Bolt V1 but a single message in Bolt V3.\n     * Messages are `RUN \"BEGIN\" {}` + `PULL_ALL` in Bolt V1 and `BEGIN` in Bolt V3.\n     *\n     * This function prepares the observer to only handle a single response message.\n     */\n    ResultStreamObserver.prototype.prepareToHandleSingleResponse = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._setState(_states.STREAMING);\n    };\n    /**\n     * Mark this observer as if it has completed with no metadata.\n     */\n    ResultStreamObserver.prototype.markCompleted = function () {\n        this._head = [];\n        this._fieldKeys = [];\n        this._tail = {};\n        this._setState(_states.SUCCEEDED);\n    };\n    /**\n     * Subscribe to events with provided observer.\n     * @param {Object} observer - Observer object\n     * @param {function(keys: String[])} observer.onKeys - Handle stream header, field keys.\n     * @param {function(record: Object)} observer.onNext - Handle records, one by one.\n     * @param {function(metadata: Object)} observer.onCompleted - Handle stream tail, the metadata.\n     * @param {function(error: Object)} observer.onError - Handle errors, should always be provided.\n     */\n    ResultStreamObserver.prototype.subscribe = function (observer) {\n        if (this._head && observer.onKeys) {\n            observer.onKeys(this._head);\n        }\n        if (this._queuedRecords.length > 0 && observer.onNext) {\n            for (var i = 0; i < this._queuedRecords.length; i++) {\n                observer.onNext(this._queuedRecords[i]);\n                if (this._queuedRecords.length - i - 1 <= this._lowRecordWatermark) {\n                    this._autoPull = true;\n                    if (this._state === _states.READY) {\n                        this._handleStreaming();\n                    }\n                }\n            }\n        }\n        if (this._tail && observer.onCompleted) {\n            observer.onCompleted(this._tail);\n        }\n        if (this._error) {\n            observer.onError(this._error);\n        }\n        this._observers.push(observer);\n        if (this._state === _states.READY) {\n            this._handleStreaming();\n        }\n    };\n    ResultStreamObserver.prototype._handleHasMore = function (meta) {\n        // We've consumed current batch and server notified us that there're more\n        // records to stream. Let's invoke more or discard function based on whether\n        // the user wants to discard streaming or not\n        this._setState(_states.READY); // we've done streaming\n        this._handleStreaming();\n        delete meta.has_more;\n    };\n    ResultStreamObserver.prototype._handlePullSuccess = function (meta) {\n        var _this = this;\n        var completionMetadata = Object.assign(this._server ? { server: this._server } : {}, this._meta, meta);\n        if (![undefined, null, 'r', 'w', 'rw', 's'].includes(completionMetadata.type)) {\n            this.onError((0, neo4j_driver_core_1.newError)(\"Server returned invalid query type. Expected one of [undefined, null, \\\"r\\\", \\\"w\\\", \\\"rw\\\", \\\"s\\\"] but got '\".concat(completionMetadata.type, \"'\"), PROTOCOL_ERROR));\n            return;\n        }\n        this._setState(_states.SUCCEEDED);\n        var beforeHandlerResult = null;\n        if (this._beforeComplete) {\n            beforeHandlerResult = this._beforeComplete(completionMetadata);\n        }\n        var continuation = function () {\n            // End of stream\n            _this._tail = completionMetadata;\n            if (_this._observers.some(function (o) { return o.onCompleted; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onCompleted) {\n                        o.onCompleted(completionMetadata);\n                    }\n                });\n            }\n            if (_this._afterComplete) {\n                _this._afterComplete(completionMetadata);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleRunSuccess = function (meta, afterSuccess) {\n        var _this = this;\n        if (this._fieldKeys === null) {\n            // Stream header, build a name->index field lookup table\n            // to be used by records. This is an optimization to make it\n            // faster to look up fields in a record by name, rather than by index.\n            // Since the records we get back via Bolt are just arrays of values.\n            this._fieldKeys = [];\n            this._fieldLookup = {};\n            if (meta.fields && meta.fields.length > 0) {\n                this._fieldKeys = meta.fields;\n                for (var i = 0; i < meta.fields.length; i++) {\n                    this._fieldLookup[meta.fields[i]] = i;\n                }\n                // remove fields key from metadata object\n                delete meta.fields;\n            }\n            // Extract server generated query id for use in requestMore and discard\n            // functions\n            if (meta.qid !== null && meta.qid !== undefined) {\n                this._queryId = meta.qid;\n                // remove qid from metadata object\n                delete meta.qid;\n            }\n            this._storeMetadataForCompletion(meta);\n            var beforeHandlerResult = null;\n            if (this._beforeKeys) {\n                beforeHandlerResult = this._beforeKeys(this._fieldKeys);\n            }\n            var continuation_1 = function () {\n                _this._head = _this._fieldKeys;\n                if (_this._observers.some(function (o) { return o.onKeys; })) {\n                    _this._observers.forEach(function (o) {\n                        if (o.onKeys) {\n                            o.onKeys(_this._fieldKeys);\n                        }\n                    });\n                }\n                if (_this._afterKeys) {\n                    _this._afterKeys(_this._fieldKeys);\n                }\n                afterSuccess();\n            };\n            if (beforeHandlerResult) {\n                Promise.resolve(beforeHandlerResult).then(function () { return continuation_1(); });\n            }\n            else {\n                continuation_1();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._handleError = function (error) {\n        var _this = this;\n        this._setState(_states.FAILED);\n        this._error = error;\n        var beforeHandlerResult = null;\n        if (this._beforeError) {\n            beforeHandlerResult = this._beforeError(error);\n        }\n        var continuation = function () {\n            if (_this._observers.some(function (o) { return o.onError; })) {\n                _this._observers.forEach(function (o) {\n                    if (o.onError) {\n                        o.onError(error);\n                    }\n                });\n            }\n            if (_this._afterError) {\n                _this._afterError(error);\n            }\n        };\n        if (beforeHandlerResult) {\n            Promise.resolve(beforeHandlerResult).then(function () { return continuation(); });\n        }\n        else {\n            continuation();\n        }\n    };\n    ResultStreamObserver.prototype._handleStreaming = function () {\n        if (this._head && this._observers.some(function (o) { return o.onNext || o.onCompleted; })) {\n            if (!this._paused && (this._discard || this._autoPull)) {\n                this._more();\n            }\n        }\n    };\n    ResultStreamObserver.prototype._more = function () {\n        if (this._discard) {\n            this._discardFunction(this._queryId, this);\n        }\n        else {\n            this._moreFunction(this._queryId, this._fetchSize, this);\n        }\n        this._setState(_states.STREAMING);\n    };\n    ResultStreamObserver.prototype._storeMetadataForCompletion = function (meta) {\n        var keys = Object.keys(meta);\n        var index = keys.length;\n        var key = '';\n        while (index--) {\n            key = keys[index];\n            this._meta[key] = meta[key];\n        }\n    };\n    ResultStreamObserver.prototype._setState = function (state) {\n        this._state = state;\n    };\n    ResultStreamObserver.prototype._setupAutoPull = function () {\n        this._autoPull = true;\n    };\n    return ResultStreamObserver;\n}(StreamObserver));\nexports.ResultStreamObserver = ResultStreamObserver;\nvar LoginObserver = /** @class */ (function (_super) {\n    __extends(LoginObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LoginObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LoginObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when initializing ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LoginObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LoginObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LoginObserver;\n}(StreamObserver));\nexports.LoginObserver = LoginObserver;\nvar LogoffObserver = /** @class */ (function (_super) {\n    __extends(LogoffObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function LogoffObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    LogoffObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when logging off ' + neo4j_driver_core_1.json.stringify(record)));\n    };\n    LogoffObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    LogoffObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return LogoffObserver;\n}(StreamObserver));\nexports.LogoffObserver = LogoffObserver;\nvar ResetObserver = /** @class */ (function (_super) {\n    __extends(ResetObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onComplete\n     */\n    function ResetObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onComplete = _b.onComplete;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onComplete = onComplete;\n        return _this;\n    }\n    ResetObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    ResetObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ResetObserver.prototype.onCompleted = function (metadata) {\n        if (this._onComplete) {\n            this._onComplete(metadata);\n        }\n    };\n    return ResetObserver;\n}(StreamObserver));\nexports.ResetObserver = ResetObserver;\nvar TelemetryObserver = /** @class */ (function (_super) {\n    __extends(TelemetryObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: Error)} param.onError\n     * @param {function(metadata)} param.onCompleted\n     */\n    function TelemetryObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    TelemetryObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when sending telemetry ' + neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    TelemetryObserver.prototype.onError = function (error) {\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    TelemetryObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(metadata);\n        }\n    };\n    return TelemetryObserver;\n}(ResultStreamObserver));\nexports.TelemetryObserver = TelemetryObserver;\nvar FailedObserver = /** @class */ (function (_super) {\n    __extends(FailedObserver, _super);\n    function FailedObserver(_a) {\n        var error = _a.error, onError = _a.onError;\n        var _this = _super.call(this, { beforeError: onError }) || this;\n        _this.onError(error);\n        return _this;\n    }\n    return FailedObserver;\n}(ResultStreamObserver));\nexports.FailedObserver = FailedObserver;\nvar CompletedObserver = /** @class */ (function (_super) {\n    __extends(CompletedObserver, _super);\n    function CompletedObserver() {\n        var _this = _super.call(this) || this;\n        _super.prototype.markCompleted.call(_this);\n        return _this;\n    }\n    return CompletedObserver;\n}(ResultStreamObserver));\nexports.CompletedObserver = CompletedObserver;\nvar ProcedureRouteObserver = /** @class */ (function (_super) {\n    __extends(ProcedureRouteObserver, _super);\n    function ProcedureRouteObserver(_a) {\n        var resultObserver = _a.resultObserver, onProtocolError = _a.onProtocolError, onError = _a.onError, onCompleted = _a.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._resultObserver = resultObserver;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        _this._records = [];\n        _this._onProtocolError = onProtocolError;\n        resultObserver.subscribe(_this);\n        return _this;\n    }\n    ProcedureRouteObserver.prototype.onNext = function (record) {\n        this._records.push(record);\n    };\n    ProcedureRouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    ProcedureRouteObserver.prototype.onCompleted = function () {\n        if (this._records !== null && this._records.length !== 1) {\n            this.onError((0, neo4j_driver_core_1.newError)('Illegal response from router. Received ' +\n                this._records.length +\n                ' records but expected only one.\\n' +\n                neo4j_driver_core_1.json.stringify(this._records), PROTOCOL_ERROR));\n            return;\n        }\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofRecord(this._records[0]));\n        }\n    };\n    return ProcedureRouteObserver;\n}(StreamObserver));\nexports.ProcedureRouteObserver = ProcedureRouteObserver;\nvar RouteObserver = /** @class */ (function (_super) {\n    __extends(RouteObserver, _super);\n    /**\n     *\n     * @param {Object} param -\n     * @param {function(err: String)} param.onProtocolError\n     * @param {function(err: Error)} param.onError\n     * @param {function(RawRoutingTable)} param.onCompleted\n     */\n    function RouteObserver(_a) {\n        var _b = _a === void 0 ? {} : _a, onProtocolError = _b.onProtocolError, onError = _b.onError, onCompleted = _b.onCompleted;\n        var _this = _super.call(this) || this;\n        _this._onProtocolError = onProtocolError;\n        _this._onError = onError;\n        _this._onCompleted = onCompleted;\n        return _this;\n    }\n    RouteObserver.prototype.onNext = function (record) {\n        this.onError((0, neo4j_driver_core_1.newError)('Received RECORD when resetting: received record is: ' +\n            neo4j_driver_core_1.json.stringify(record), PROTOCOL_ERROR));\n    };\n    RouteObserver.prototype.onError = function (error) {\n        if (error.code === PROTOCOL_ERROR && this._onProtocolError) {\n            this._onProtocolError(error.message);\n        }\n        if (this._onError) {\n            this._onError(error);\n        }\n    };\n    RouteObserver.prototype.onCompleted = function (metadata) {\n        if (this._onCompleted) {\n            this._onCompleted(routing_table_raw_1.default.ofMessageResponse(metadata));\n        }\n    };\n    return RouteObserver;\n}(StreamObserver));\nexports.RouteObserver = RouteObserver;\nvar _states = {\n    READY_STREAMING: {\n        // async start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () {\n                streamObserver._setState(_states.STREAMING);\n            } // after run succeeded, async directly move to streaming\n            // state\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY_STREAMING';\n        },\n        pull: function () { }\n    },\n    READY: {\n        // reactive start state\n        onSuccess: function (streamObserver, meta) {\n            streamObserver._handleRunSuccess(meta, function () { return streamObserver._handleStreaming(); } // after run succeeded received, reactive shall start pulling\n            );\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'READY';\n        },\n        pull: function (streamObserver) { return streamObserver._more(); }\n    },\n    STREAMING: {\n        onSuccess: function (streamObserver, meta) {\n            if (meta.has_more) {\n                streamObserver._handleHasMore(meta);\n            }\n            else {\n                streamObserver._handlePullSuccess(meta);\n            }\n        },\n        onError: function (streamObserver, error) {\n            streamObserver._handleError(error);\n        },\n        name: function () {\n            return 'STREAMING';\n        },\n        pull: function () { }\n    },\n    FAILED: {\n        onError: function (_error) {\n            // more errors are ignored\n        },\n        name: function () {\n            return 'FAILED';\n        },\n        pull: function () { }\n    },\n    SUCCEEDED: {\n        name: function () {\n            return 'SUCCEEDED';\n        },\n        pull: function () { }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}