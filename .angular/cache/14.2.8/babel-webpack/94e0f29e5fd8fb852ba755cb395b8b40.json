{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Url = exports.formatIPv6Address = exports.formatIPv4Address = exports.defaultPortForScheme = exports.parseDatabaseUrl = void 0;\n\nvar util_1 = require(\"./util\");\n\nvar DEFAULT_BOLT_PORT = 7687;\nvar DEFAULT_HTTP_PORT = 7474;\nvar DEFAULT_HTTPS_PORT = 7473;\n\nvar Url =\n/** @class */\nfunction () {\n  function Url(scheme, host, port, hostAndPort, query) {\n    /**\n     * Nullable scheme (protocol) of the URL.\n     * Example: 'bolt', 'neo4j', 'http', 'https', etc.\n     * @type {string}\n     */\n    this.scheme = scheme;\n    /**\n     * Nonnull host name or IP address. IPv6 not wrapped in square brackets.\n     * Example: 'neo4j.com', 'localhost', '127.0.0.1', '192.168.10.15', '::1', '2001:4860:4860::8844', etc.\n     * @type {string}\n     */\n\n    this.host = host;\n    /**\n     * Nonnull number representing port. Default port for the given scheme is used if given URL string\n     * does not contain port. Example: 7687 for bolt, 7474 for HTTP and 7473 for HTTPS.\n     * @type {number}\n     */\n\n    this.port = port;\n    /**\n     * Nonnull host name or IP address plus port, separated by ':'. IPv6 wrapped in square brackets.\n     * Example: 'neo4j.com', 'neo4j.com:7687', '127.0.0.1', '127.0.0.1:8080', '[2001:4860:4860::8844]',\n     * '[2001:4860:4860::8844]:9090', etc.\n     * @type {string}\n     */\n\n    this.hostAndPort = hostAndPort;\n    /**\n     * Nonnull object representing parsed query string key-value pairs. Duplicated keys not supported.\n     * Example: '{}', '{'key1': 'value1', 'key2': 'value2'}', etc.\n     * @type {Object}\n     */\n\n    this.query = query;\n  }\n\n  return Url;\n}();\n\nexports.Url = Url;\n\nfunction parseDatabaseUrl(url) {\n  var _a;\n\n  (0, util_1.assertString)(url, 'URL');\n  var sanitized = sanitizeUrl(url);\n  var parsedUrl = uriJsParse(sanitized.url);\n  var scheme = sanitized.schemeMissing ? null : extractScheme(parsedUrl.scheme);\n  var host = extractHost(parsedUrl.host); // no square brackets for IPv6\n\n  var formattedHost = formatHost(host); // has square brackets for IPv6\n\n  var port = extractPort(parsedUrl.port, scheme);\n  var hostAndPort = \"\".concat(formattedHost, \":\").concat(port);\n  var query = extractQuery( // @ts-expect-error\n  (_a = parsedUrl.query) !== null && _a !== void 0 ? _a : extractResourceQueryString(parsedUrl.resourceName), url);\n  return new Url(scheme, host, port, hostAndPort, query);\n}\n\nexports.parseDatabaseUrl = parseDatabaseUrl;\n\nfunction extractResourceQueryString(resource) {\n  if (typeof resource !== 'string') {\n    return null;\n  }\n\n  var _a = __read(resource.split('?'), 2),\n      query = _a[1];\n\n  return query;\n}\n\nfunction sanitizeUrl(url) {\n  url = url.trim();\n\n  if (!url.includes('://')) {\n    // url does not contain scheme, add dummy 'none://' to make parser work correctly\n    return {\n      schemeMissing: true,\n      url: \"none://\".concat(url)\n    };\n  }\n\n  return {\n    schemeMissing: false,\n    url: url\n  };\n}\n\nfunction extractScheme(scheme) {\n  if (scheme != null) {\n    scheme = scheme.trim();\n\n    if (scheme.charAt(scheme.length - 1) === ':') {\n      scheme = scheme.substring(0, scheme.length - 1);\n    }\n\n    return scheme;\n  }\n\n  return null;\n}\n\nfunction extractHost(host, url) {\n  if (host == null) {\n    throw new Error('Unable to extract host from null or undefined URL');\n  }\n\n  return host.trim();\n}\n\nfunction extractPort(portString, scheme) {\n  var port = typeof portString === 'string' ? parseInt(portString, 10) : portString;\n  return port != null && !isNaN(port) ? port : defaultPortForScheme(scheme);\n}\n\nfunction extractQuery(queryString, url) {\n  var query = queryString != null ? trimAndSanitizeQuery(queryString) : null;\n  var context = {};\n\n  if (query != null) {\n    query.split('&').forEach(function (pair) {\n      var keyValue = pair.split('=');\n\n      if (keyValue.length !== 2) {\n        throw new Error(\"Invalid parameters: '\".concat(keyValue.toString(), \"' in URL '\").concat(url, \"'.\"));\n      }\n\n      var key = trimAndVerifyQueryElement(keyValue[0], 'key', url);\n      var value = trimAndVerifyQueryElement(keyValue[1], 'value', url);\n\n      if (context[key] !== undefined) {\n        throw new Error(\"Duplicated query parameters with key '\".concat(key, \"' in URL '\").concat(url, \"'\"));\n      }\n\n      context[key] = value;\n    });\n  }\n\n  return context;\n}\n\nfunction trimAndSanitizeQuery(query) {\n  query = (query !== null && query !== void 0 ? query : '').trim();\n\n  if ((query === null || query === void 0 ? void 0 : query.charAt(0)) === '?') {\n    query = query.substring(1, query.length);\n  }\n\n  return query;\n}\n\nfunction trimAndVerifyQueryElement(element, name, url) {\n  element = (element !== null && element !== void 0 ? element : '').trim();\n\n  if (element === '') {\n    throw new Error(\"Illegal empty \".concat(name, \" in URL query '\").concat(url, \"'\"));\n  }\n\n  return element;\n}\n\nfunction escapeIPv6Address(address) {\n  var startsWithSquareBracket = address.charAt(0) === '[';\n  var endsWithSquareBracket = address.charAt(address.length - 1) === ']';\n\n  if (!startsWithSquareBracket && !endsWithSquareBracket) {\n    return \"[\".concat(address, \"]\");\n  } else if (startsWithSquareBracket && endsWithSquareBracket) {\n    return address;\n  } else {\n    throw new Error(\"Illegal IPv6 address \".concat(address));\n  }\n}\n\nfunction formatHost(host) {\n  if (host === '' || host == null) {\n    throw new Error(\"Illegal host \".concat(host));\n  }\n\n  var isIPv6Address = host.includes(':');\n  return isIPv6Address ? escapeIPv6Address(host) : host;\n}\n\nfunction formatIPv4Address(address, port) {\n  return \"\".concat(address, \":\").concat(port);\n}\n\nexports.formatIPv4Address = formatIPv4Address;\n\nfunction formatIPv6Address(address, port) {\n  var escapedAddress = escapeIPv6Address(address);\n  return \"\".concat(escapedAddress, \":\").concat(port);\n}\n\nexports.formatIPv6Address = formatIPv6Address;\n\nfunction defaultPortForScheme(scheme) {\n  if (scheme === 'http') {\n    return DEFAULT_HTTP_PORT;\n  } else if (scheme === 'https') {\n    return DEFAULT_HTTPS_PORT;\n  } else {\n    return DEFAULT_BOLT_PORT;\n  }\n}\n\nexports.defaultPortForScheme = defaultPortForScheme;\n\nfunction uriJsParse(value) {\n  // JS version of Python partition function\n  function partition(s, delimiter) {\n    var i = s.indexOf(delimiter);\n    if (i >= 0) return [s.substring(0, i), s[i], s.substring(i + 1)];else return [s, '', ''];\n  } // JS version of Python rpartition function\n\n\n  function rpartition(s, delimiter) {\n    var i = s.lastIndexOf(delimiter);\n    if (i >= 0) return [s.substring(0, i), s[i], s.substring(i + 1)];else return ['', '', s];\n  }\n\n  function between(s, ldelimiter, rdelimiter) {\n    var lpartition = partition(s, ldelimiter);\n    var rpartition = partition(lpartition[2], rdelimiter);\n    return [rpartition[0], rpartition[2]];\n  } // Parse an authority string into an object\n  // with the following keys:\n  // - userInfo (optional, might contain both user name and password)\n  // - host\n  // - port (optional, included only as a string)\n\n\n  function parseAuthority(value) {\n    var parsed = {};\n    var parts; // Parse user info\n\n    parts = rpartition(value, '@');\n\n    if (parts[1] === '@') {\n      parsed.userInfo = decodeURIComponent(parts[0]);\n      value = parts[2];\n    } // Parse host and port\n\n\n    var _a = __read(between(value, '[', ']'), 2),\n        ipv6Host = _a[0],\n        rest = _a[1];\n\n    if (ipv6Host !== '') {\n      parsed.host = ipv6Host;\n      parts = partition(rest, ':');\n    } else {\n      parts = partition(value, ':');\n      parsed.host = parts[0];\n    }\n\n    if (parts[1] === ':') {\n      parsed.port = parts[2];\n    }\n\n    return parsed;\n  }\n\n  var parsed = {};\n  var parts; // Parse scheme\n\n  parts = partition(value, ':');\n\n  if (parts[1] === ':') {\n    parsed.scheme = decodeURIComponent(parts[0]);\n    value = parts[2];\n  } // Parse fragment\n\n\n  parts = partition(value, '#');\n\n  if (parts[1] === '#') {\n    parsed.fragment = decodeURIComponent(parts[2]);\n    value = parts[0];\n  } // Parse query\n\n\n  parts = partition(value, '?');\n\n  if (parts[1] === '?') {\n    parsed.query = parts[2];\n    value = parts[0];\n  } // Parse authority and path\n\n\n  if (value.startsWith('//')) {\n    parts = partition(value.substr(2), '/');\n    parsed = __assign(__assign({}, parsed), parseAuthority(parts[0]));\n    parsed.path = parts[1] + parts[2];\n  } else {\n    parsed.path = value;\n  }\n\n  return parsed;\n}","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","defineProperty","exports","Url","formatIPv6Address","formatIPv4Address","defaultPortForScheme","parseDatabaseUrl","util_1","require","DEFAULT_BOLT_PORT","DEFAULT_HTTP_PORT","DEFAULT_HTTPS_PORT","scheme","host","port","hostAndPort","query","url","_a","assertString","sanitized","sanitizeUrl","parsedUrl","uriJsParse","schemeMissing","extractScheme","extractHost","formattedHost","formatHost","extractPort","concat","extractQuery","extractResourceQueryString","resourceName","resource","split","trim","includes","charAt","substring","Error","portString","parseInt","isNaN","queryString","trimAndSanitizeQuery","context","forEach","pair","keyValue","toString","key","trimAndVerifyQueryElement","undefined","element","name","escapeIPv6Address","address","startsWithSquareBracket","endsWithSquareBracket","isIPv6Address","escapedAddress","partition","delimiter","indexOf","rpartition","lastIndexOf","between","ldelimiter","rdelimiter","lpartition","parseAuthority","parsed","parts","userInfo","decodeURIComponent","ipv6Host","rest","fragment","startsWith","substr","path"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-core/lib/internal/url-util.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Url = exports.formatIPv6Address = exports.formatIPv4Address = exports.defaultPortForScheme = exports.parseDatabaseUrl = void 0;\nvar util_1 = require(\"./util\");\nvar DEFAULT_BOLT_PORT = 7687;\nvar DEFAULT_HTTP_PORT = 7474;\nvar DEFAULT_HTTPS_PORT = 7473;\nvar Url = /** @class */ (function () {\n    function Url(scheme, host, port, hostAndPort, query) {\n        /**\n         * Nullable scheme (protocol) of the URL.\n         * Example: 'bolt', 'neo4j', 'http', 'https', etc.\n         * @type {string}\n         */\n        this.scheme = scheme;\n        /**\n         * Nonnull host name or IP address. IPv6 not wrapped in square brackets.\n         * Example: 'neo4j.com', 'localhost', '127.0.0.1', '192.168.10.15', '::1', '2001:4860:4860::8844', etc.\n         * @type {string}\n         */\n        this.host = host;\n        /**\n         * Nonnull number representing port. Default port for the given scheme is used if given URL string\n         * does not contain port. Example: 7687 for bolt, 7474 for HTTP and 7473 for HTTPS.\n         * @type {number}\n         */\n        this.port = port;\n        /**\n         * Nonnull host name or IP address plus port, separated by ':'. IPv6 wrapped in square brackets.\n         * Example: 'neo4j.com', 'neo4j.com:7687', '127.0.0.1', '127.0.0.1:8080', '[2001:4860:4860::8844]',\n         * '[2001:4860:4860::8844]:9090', etc.\n         * @type {string}\n         */\n        this.hostAndPort = hostAndPort;\n        /**\n         * Nonnull object representing parsed query string key-value pairs. Duplicated keys not supported.\n         * Example: '{}', '{'key1': 'value1', 'key2': 'value2'}', etc.\n         * @type {Object}\n         */\n        this.query = query;\n    }\n    return Url;\n}());\nexports.Url = Url;\nfunction parseDatabaseUrl(url) {\n    var _a;\n    (0, util_1.assertString)(url, 'URL');\n    var sanitized = sanitizeUrl(url);\n    var parsedUrl = uriJsParse(sanitized.url);\n    var scheme = sanitized.schemeMissing\n        ? null\n        : extractScheme(parsedUrl.scheme);\n    var host = extractHost(parsedUrl.host); // no square brackets for IPv6\n    var formattedHost = formatHost(host); // has square brackets for IPv6\n    var port = extractPort(parsedUrl.port, scheme);\n    var hostAndPort = \"\".concat(formattedHost, \":\").concat(port);\n    var query = extractQuery(\n    // @ts-expect-error\n    (_a = parsedUrl.query) !== null && _a !== void 0 ? _a : extractResourceQueryString(parsedUrl.resourceName), url);\n    return new Url(scheme, host, port, hostAndPort, query);\n}\nexports.parseDatabaseUrl = parseDatabaseUrl;\nfunction extractResourceQueryString(resource) {\n    if (typeof resource !== 'string') {\n        return null;\n    }\n    var _a = __read(resource.split('?'), 2), query = _a[1];\n    return query;\n}\nfunction sanitizeUrl(url) {\n    url = url.trim();\n    if (!url.includes('://')) {\n        // url does not contain scheme, add dummy 'none://' to make parser work correctly\n        return { schemeMissing: true, url: \"none://\".concat(url) };\n    }\n    return { schemeMissing: false, url: url };\n}\nfunction extractScheme(scheme) {\n    if (scheme != null) {\n        scheme = scheme.trim();\n        if (scheme.charAt(scheme.length - 1) === ':') {\n            scheme = scheme.substring(0, scheme.length - 1);\n        }\n        return scheme;\n    }\n    return null;\n}\nfunction extractHost(host, url) {\n    if (host == null) {\n        throw new Error('Unable to extract host from null or undefined URL');\n    }\n    return host.trim();\n}\nfunction extractPort(portString, scheme) {\n    var port = typeof portString === 'string' ? parseInt(portString, 10) : portString;\n    return port != null && !isNaN(port) ? port : defaultPortForScheme(scheme);\n}\nfunction extractQuery(queryString, url) {\n    var query = queryString != null ? trimAndSanitizeQuery(queryString) : null;\n    var context = {};\n    if (query != null) {\n        query.split('&').forEach(function (pair) {\n            var keyValue = pair.split('=');\n            if (keyValue.length !== 2) {\n                throw new Error(\"Invalid parameters: '\".concat(keyValue.toString(), \"' in URL '\").concat(url, \"'.\"));\n            }\n            var key = trimAndVerifyQueryElement(keyValue[0], 'key', url);\n            var value = trimAndVerifyQueryElement(keyValue[1], 'value', url);\n            if (context[key] !== undefined) {\n                throw new Error(\"Duplicated query parameters with key '\".concat(key, \"' in URL '\").concat(url, \"'\"));\n            }\n            context[key] = value;\n        });\n    }\n    return context;\n}\nfunction trimAndSanitizeQuery(query) {\n    query = (query !== null && query !== void 0 ? query : '').trim();\n    if ((query === null || query === void 0 ? void 0 : query.charAt(0)) === '?') {\n        query = query.substring(1, query.length);\n    }\n    return query;\n}\nfunction trimAndVerifyQueryElement(element, name, url) {\n    element = (element !== null && element !== void 0 ? element : '').trim();\n    if (element === '') {\n        throw new Error(\"Illegal empty \".concat(name, \" in URL query '\").concat(url, \"'\"));\n    }\n    return element;\n}\nfunction escapeIPv6Address(address) {\n    var startsWithSquareBracket = address.charAt(0) === '[';\n    var endsWithSquareBracket = address.charAt(address.length - 1) === ']';\n    if (!startsWithSquareBracket && !endsWithSquareBracket) {\n        return \"[\".concat(address, \"]\");\n    }\n    else if (startsWithSquareBracket && endsWithSquareBracket) {\n        return address;\n    }\n    else {\n        throw new Error(\"Illegal IPv6 address \".concat(address));\n    }\n}\nfunction formatHost(host) {\n    if (host === '' || host == null) {\n        throw new Error(\"Illegal host \".concat(host));\n    }\n    var isIPv6Address = host.includes(':');\n    return isIPv6Address ? escapeIPv6Address(host) : host;\n}\nfunction formatIPv4Address(address, port) {\n    return \"\".concat(address, \":\").concat(port);\n}\nexports.formatIPv4Address = formatIPv4Address;\nfunction formatIPv6Address(address, port) {\n    var escapedAddress = escapeIPv6Address(address);\n    return \"\".concat(escapedAddress, \":\").concat(port);\n}\nexports.formatIPv6Address = formatIPv6Address;\nfunction defaultPortForScheme(scheme) {\n    if (scheme === 'http') {\n        return DEFAULT_HTTP_PORT;\n    }\n    else if (scheme === 'https') {\n        return DEFAULT_HTTPS_PORT;\n    }\n    else {\n        return DEFAULT_BOLT_PORT;\n    }\n}\nexports.defaultPortForScheme = defaultPortForScheme;\nfunction uriJsParse(value) {\n    // JS version of Python partition function\n    function partition(s, delimiter) {\n        var i = s.indexOf(delimiter);\n        if (i >= 0)\n            return [s.substring(0, i), s[i], s.substring(i + 1)];\n        else\n            return [s, '', ''];\n    }\n    // JS version of Python rpartition function\n    function rpartition(s, delimiter) {\n        var i = s.lastIndexOf(delimiter);\n        if (i >= 0)\n            return [s.substring(0, i), s[i], s.substring(i + 1)];\n        else\n            return ['', '', s];\n    }\n    function between(s, ldelimiter, rdelimiter) {\n        var lpartition = partition(s, ldelimiter);\n        var rpartition = partition(lpartition[2], rdelimiter);\n        return [rpartition[0], rpartition[2]];\n    }\n    // Parse an authority string into an object\n    // with the following keys:\n    // - userInfo (optional, might contain both user name and password)\n    // - host\n    // - port (optional, included only as a string)\n    function parseAuthority(value) {\n        var parsed = {};\n        var parts;\n        // Parse user info\n        parts = rpartition(value, '@');\n        if (parts[1] === '@') {\n            parsed.userInfo = decodeURIComponent(parts[0]);\n            value = parts[2];\n        }\n        // Parse host and port\n        var _a = __read(between(value, '[', ']'), 2), ipv6Host = _a[0], rest = _a[1];\n        if (ipv6Host !== '') {\n            parsed.host = ipv6Host;\n            parts = partition(rest, ':');\n        }\n        else {\n            parts = partition(value, ':');\n            parsed.host = parts[0];\n        }\n        if (parts[1] === ':') {\n            parsed.port = parts[2];\n        }\n        return parsed;\n    }\n    var parsed = {};\n    var parts;\n    // Parse scheme\n    parts = partition(value, ':');\n    if (parts[1] === ':') {\n        parsed.scheme = decodeURIComponent(parts[0]);\n        value = parts[2];\n    }\n    // Parse fragment\n    parts = partition(value, '#');\n    if (parts[1] === '#') {\n        parsed.fragment = decodeURIComponent(parts[2]);\n        value = parts[0];\n    }\n    // Parse query\n    parts = partition(value, '?');\n    if (parts[1] === '?') {\n        parsed.query = parts[2];\n        value = parts[0];\n    }\n    // Parse authority and path\n    if (value.startsWith('//')) {\n        parts = partition(value.substr(2), '/');\n        parsed = __assign(__assign({}, parsed), parseAuthority(parts[0]));\n        parsed.path = parts[1] + parts[2];\n    }\n    else {\n        parsed.path = value;\n    }\n    return parsed;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}