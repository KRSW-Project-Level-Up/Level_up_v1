{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\n\nvar channel_1 = require(\"../channel\");\n\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\n\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\n\nvar load_balancing_1 = require(\"../load-balancing\");\n\nvar connection_1 = require(\"../connection\");\n\nvar lang_1 = require(\"../lang\");\n\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE,\n    SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks,\n    _a = neo4j_driver_core_1.internal.constants,\n    READ = _a.ACCESS_MODE_READ,\n    WRITE = _a.ACCESS_MODE_WRITE,\n    BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3,\n    BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0,\n    BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4,\n    BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\nvar PROCEDURE_NOT_FOUND_CODE = 'Neo.ClientError.Procedure.ProcedureNotFound';\nvar DATABASE_NOT_FOUND_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar INVALID_BOOKMARK_CODE = 'Neo.ClientError.Transaction.InvalidBookmark';\nvar INVALID_BOOKMARK_MIXTURE_CODE = 'Neo.ClientError.Transaction.InvalidBookmarkMixture';\nvar AUTHORIZATION_EXPIRED_CODE = 'Neo.ClientError.Security.AuthorizationExpired';\nvar INVALID_ARGUMENT_ERROR = 'Neo.ClientError.Statement.ArgumentError';\nvar INVALID_REQUEST_ERROR = 'Neo.ClientError.Request.Invalid';\nvar STATEMENT_TYPE_ERROR = 'Neo.ClientError.Statement.TypeError';\nvar NOT_AVAILABLE = 'N/A';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\n\nvar RoutingConnectionProvider =\n/** @class */\nfunction (_super) {\n  __extends(RoutingConnectionProvider, _super);\n\n  function RoutingConnectionProvider(_a) {\n    var id = _a.id,\n        address = _a.address,\n        routingContext = _a.routingContext,\n        hostNameResolver = _a.hostNameResolver,\n        config = _a.config,\n        log = _a.log,\n        userAgent = _a.userAgent,\n        boltAgent = _a.boltAgent,\n        authTokenManager = _a.authTokenManager,\n        routingTablePurgeDelay = _a.routingTablePurgeDelay,\n        newPool = _a.newPool;\n\n    var _this = _super.call(this, {\n      id: id,\n      config: config,\n      log: log,\n      userAgent: userAgent,\n      boltAgent: boltAgent,\n      authTokenManager: authTokenManager,\n      newPool: newPool\n    }, function (address) {\n      return (0, connection_1.createChannelConnection)(address, _this._config, _this._createConnectionErrorHandler(), _this._log, _this._routingContext);\n    }) || this;\n\n    _this._routingContext = __assign(__assign({}, routingContext), {\n      address: address.toString()\n    });\n    _this._seedRouter = address;\n    _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n    _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n    _this._hostNameResolver = hostNameResolver;\n    _this._dnsResolver = new channel_1.HostNameResolver();\n    _this._log = log;\n    _this._useSeedRouter = true;\n    _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay) : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n    _this._refreshRoutingTable = lang_1.functional.reuseOngoingRequest(_this._refreshRoutingTable, _this);\n    return _this;\n  }\n\n  RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n    // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n    // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n    return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n  };\n\n  RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n    this._log.warn(\"Routing driver \".concat(this._id, \" will forget \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n\n    this.forget(address, database || DEFAULT_DB_NAME);\n    return error;\n  };\n\n  RoutingConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\n    this._log.warn(\"Routing driver \".concat(this._id, \" will close connections to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n\n    return _super.prototype._handleSecurityError.call(this, error, address, connection, database);\n  };\n\n  RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n    this._log.warn(\"Routing driver \".concat(this._id, \" will forget writer \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n\n    this.forgetWriter(address, database || DEFAULT_DB_NAME);\n    return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED, error);\n  };\n  /**\n   * See {@link ConnectionProvider} for more information about this method and\n   * its arguments.\n   */\n\n\n  RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        accessMode = _b.accessMode,\n        database = _b.database,\n        bookmarks = _b.bookmarks,\n        impersonatedUser = _b.impersonatedUser,\n        onDatabaseNameResolved = _b.onDatabaseNameResolved,\n        auth = _b.auth;\n\n    return __awaiter(this, void 0, void 0, function () {\n      var name, address, context, databaseSpecificErrorHandler, routingTable, connection, error_1, transformed;\n\n      var _this = this;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            context = {\n              database: database || DEFAULT_DB_NAME\n            };\n            databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) {\n              return _this._handleUnavailability(error, address, context.database);\n            }, function (error, address) {\n              return _this._handleWriteFailure(error, address, context.database);\n            }, function (error, address, conn) {\n              return _this._handleSecurityError(error, address, conn, context.database);\n            });\n            return [4\n            /*yield*/\n            , this._freshRoutingTable({\n              accessMode: accessMode,\n              database: context.database,\n              bookmarks: bookmarks,\n              impersonatedUser: impersonatedUser,\n              auth: auth,\n              onDatabaseNameResolved: function (databaseName) {\n                context.database = context.database || databaseName;\n\n                if (onDatabaseNameResolved) {\n                  onDatabaseNameResolved(databaseName);\n                }\n              }\n            }) // select a target server based on specified access mode\n            ];\n\n          case 1:\n            routingTable = _c.sent(); // select a target server based on specified access mode\n\n            if (accessMode === READ) {\n              address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n              name = 'read';\n            } else if (accessMode === WRITE) {\n              address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n              name = 'write';\n            } else {\n              throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n            } // we couldn't select a target server\n\n\n            if (!address) {\n              throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \".concat(name, \" server. Known routing table is: \").concat(routingTable), SESSION_EXPIRED);\n            }\n\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this._connectionPool.acquire({\n              auth: auth\n            }, address)];\n\n          case 3:\n            connection = _c.sent();\n            if (!auth) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , this._verifyStickyConnection({\n              auth: auth,\n              connection: connection,\n              address: address\n            })];\n\n          case 4:\n            _c.sent();\n\n            return [2\n            /*return*/\n            , connection];\n\n          case 5:\n            return [2\n            /*return*/\n            , new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n\n          case 6:\n            error_1 = _c.sent();\n            transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n            throw transformed;\n\n          case 7:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n    return __awaiter(this, void 0, void 0, function () {\n      var addresses, lastError, i, connection, protocolVersion, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._resolveSeedRouter(this._seedRouter)];\n\n          case 1:\n            addresses = _a.sent();\n            i = 0;\n            _a.label = 2;\n\n          case 2:\n            if (!(i < addresses.length)) return [3\n            /*break*/\n            , 8];\n            _a.label = 3;\n\n          case 3:\n            _a.trys.push([3, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , (0, connection_1.createChannelConnection)(addresses[i], this._config, this._createConnectionErrorHandler(), this._log)];\n\n          case 4:\n            connection = _a.sent();\n            protocolVersion = connection.protocol() ? connection.protocol().version : null;\n            return [4\n            /*yield*/\n            , connection.close()];\n\n          case 5:\n            _a.sent();\n\n            if (protocolVersion) {\n              return [2\n              /*return*/\n              , versionPredicate(protocolVersion)];\n            }\n\n            return [2\n            /*return*/\n            , false];\n\n          case 6:\n            error_2 = _a.sent();\n            lastError = error_2;\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            i++;\n            return [3\n            /*break*/\n            , 2];\n\n          case 8:\n            if (lastError) {\n              throw lastError;\n            }\n\n            return [2\n            /*return*/\n            , false];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V4_0;\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V3;\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V4_4;\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.supportsSessionAuth = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._hasProtocolVersion(function (version) {\n              return version >= BOLT_PROTOCOL_V5_1;\n            })];\n\n          case 1:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      _this._hasProtocolVersion(resolve).catch(reject);\n    });\n  };\n\n  RoutingConnectionProvider.prototype.verifyAuthentication = function (_a) {\n    var database = _a.database,\n        accessMode = _a.accessMode,\n        auth = _a.auth;\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_b) {\n        return [2\n        /*return*/\n        , this._verifyAuthentication({\n          auth: auth,\n          getAddress: function () {\n            return __awaiter(_this, void 0, void 0, function () {\n              var context, routingTable, servers;\n              return __generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    context = {\n                      database: database || DEFAULT_DB_NAME\n                    };\n                    return [4\n                    /*yield*/\n                    , this._freshRoutingTable({\n                      accessMode: accessMode,\n                      database: context.database,\n                      auth: auth,\n                      onDatabaseNameResolved: function (databaseName) {\n                        context.database = context.database || databaseName;\n                      }\n                    })];\n\n                  case 1:\n                    routingTable = _a.sent();\n                    servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n\n                    if (servers.length === 0) {\n                      throw (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                    }\n\n                    return [2\n                    /*return*/\n                    , servers[0]];\n                }\n              });\n            });\n          }\n        })];\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (_a) {\n    var database = _a.database,\n        accessMode = _a.accessMode;\n    return __awaiter(this, void 0, void 0, function () {\n      var context, routingTable, servers, error, servers_1, servers_1_1, address, serverInfo, e_1, e_2_1;\n\n      var e_2, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            context = {\n              database: database || DEFAULT_DB_NAME\n            };\n            return [4\n            /*yield*/\n            , this._freshRoutingTable({\n              accessMode: accessMode,\n              database: context.database,\n              onDatabaseNameResolved: function (databaseName) {\n                context.database = context.database || databaseName;\n              }\n            })];\n\n          case 1:\n            routingTable = _c.sent();\n            servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n            error = (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n            _c.label = 2;\n\n          case 2:\n            _c.trys.push([2, 9, 10, 11]);\n\n            servers_1 = __values(servers), servers_1_1 = servers_1.next();\n            _c.label = 3;\n\n          case 3:\n            if (!!servers_1_1.done) return [3\n            /*break*/\n            , 8];\n            address = servers_1_1.value;\n            _c.label = 4;\n\n          case 4:\n            _c.trys.push([4, 6,, 7]);\n\n            return [4\n            /*yield*/\n            , this._verifyConnectivityAndGetServerVersion({\n              address: address\n            })];\n\n          case 5:\n            serverInfo = _c.sent();\n            return [2\n            /*return*/\n            , serverInfo];\n\n          case 6:\n            e_1 = _c.sent();\n            error = e_1;\n            return [3\n            /*break*/\n            , 7];\n\n          case 7:\n            servers_1_1 = servers_1.next();\n            return [3\n            /*break*/\n            , 3];\n\n          case 8:\n            return [3\n            /*break*/\n            , 11];\n\n          case 9:\n            e_2_1 = _c.sent();\n            e_2 = {\n              error: e_2_1\n            };\n            return [3\n            /*break*/\n            , 11];\n\n          case 10:\n            try {\n              if (servers_1_1 && !servers_1_1.done && (_b = servers_1.return)) _b.call(servers_1);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 11:\n            throw error;\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype.forget = function (address, database) {\n    this._routingTableRegistry.apply(database, {\n      applyWhenExists: function (routingTable) {\n        return routingTable.forget(address);\n      }\n    }); // We're firing and forgetting this operation explicitly and listening for any\n    // errors to avoid unhandled promise rejection\n\n\n    this._connectionPool.purge(address).catch(function () {});\n  };\n\n  RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n    this._routingTableRegistry.apply(database, {\n      applyWhenExists: function (routingTable) {\n        return routingTable.forgetWriter(address);\n      }\n    });\n  };\n\n  RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n    var _b = _a === void 0 ? {} : _a,\n        accessMode = _b.accessMode,\n        database = _b.database,\n        bookmarks = _b.bookmarks,\n        impersonatedUser = _b.impersonatedUser,\n        onDatabaseNameResolved = _b.onDatabaseNameResolved,\n        auth = _b.auth;\n\n    var currentRoutingTable = this._routingTableRegistry.get(database, function () {\n      return new rediscovery_1.RoutingTable({\n        database: database\n      });\n    });\n\n    if (!currentRoutingTable.isStaleFor(accessMode)) {\n      return currentRoutingTable;\n    }\n\n    this._log.info(\"Routing table is stale for database: \\\"\".concat(database, \"\\\" and access mode: \\\"\").concat(accessMode, \"\\\": \").concat(currentRoutingTable));\n\n    return this._refreshRoutingTable(currentRoutingTable, bookmarks, impersonatedUser, auth).then(function (newRoutingTable) {\n      onDatabaseNameResolved(newRoutingTable.database);\n      return newRoutingTable;\n    });\n  };\n\n  RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    var knownRouters = currentRoutingTable.routers;\n\n    if (this._useSeedRouter) {\n      return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n    }\n\n    return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n  };\n\n  RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var seenRouters, _a, newRoutingTable, error, _b, newRoutingTable2, error2;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            seenRouters = [];\n            return [4\n            /*yield*/\n            , this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n\n          case 1:\n            _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n            if (!newRoutingTable) return [3\n            /*break*/\n            , 2];\n            this._useSeedRouter = false;\n            return [3\n            /*break*/\n            , 4];\n\n          case 2:\n            return [4\n            /*yield*/\n            , this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n\n          case 3:\n            _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable2 = _b[0], error2 = _b[1];\n            newRoutingTable = newRoutingTable2;\n            error = error2 || error;\n            _c.label = 4;\n\n          case 4:\n            return [4\n            /*yield*/\n            , this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n\n          case 5:\n            return [2\n            /*return*/\n            , _c.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, newRoutingTable, error;\n\n      var _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n\n          case 1:\n            _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n            if (!!newRoutingTable) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n\n          case 2:\n            // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n            _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _b[0], error = _b[1];\n            _c.label = 3;\n\n          case 3:\n            return [4\n            /*yield*/\n            , this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n\n          case 4:\n            return [2\n            /*return*/\n            , _c.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, newRoutingTable, error, lastRouterIndex;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n\n          case 1:\n            _a = __read.apply(void 0, [_b.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n\n            if (newRoutingTable) {\n              // one of the known routers returned a valid routing table - use it\n              return [2\n              /*return*/\n              , [newRoutingTable, null]];\n            }\n\n            lastRouterIndex = knownRouters.length - 1;\n\n            RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n\n            return [2\n            /*return*/\n            , [null, error]];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolvedAddresses, newAddresses;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._resolveSeedRouter(seedRouter) // filter out all addresses that we've already tried\n            ];\n\n          case 1:\n            resolvedAddresses = _a.sent();\n            newAddresses = resolvedAddresses.filter(function (address) {\n              return seenRouters.indexOf(address) < 0;\n            });\n            return [4\n            /*yield*/\n            , this._fetchRoutingTable(newAddresses, routingTable, bookmarks, impersonatedUser, auth)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var resolvedAddresses, dnsResolvedAddresses;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._hostNameResolver.resolve(seedRouter)];\n\n          case 1:\n            resolvedAddresses = _a.sent();\n            return [4\n            /*yield*/\n            , Promise.all(resolvedAddresses.map(function (address) {\n              return _this._dnsResolver.resolve(address);\n            }))];\n\n          case 2:\n            dnsResolvedAddresses = _a.sent();\n            return [2\n            /*return*/\n            , [].concat.apply([], dnsResolvedAddresses)];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) {\n          return __awaiter(_this, void 0, void 0, function () {\n            var _a, newRoutingTable, previousRouterIndex, _b, session, error, error_3;\n\n            return __generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  return [4\n                  /*yield*/\n                  , refreshedTablePromise];\n\n                case 1:\n                  _a = __read.apply(void 0, [_c.sent(), 1]), newRoutingTable = _a[0];\n\n                  if (newRoutingTable) {\n                    // valid routing table was fetched - just return it, try next router otherwise\n                    return [2\n                    /*return*/\n                    , [newRoutingTable, null]];\n                  } else {\n                    previousRouterIndex = currentIndex - 1;\n\n                    RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n                  }\n\n                  return [4\n                  /*yield*/\n                  , this._createSessionForRediscovery(currentRouter, bookmarks, impersonatedUser, auth)];\n\n                case 2:\n                  _b = __read.apply(void 0, [_c.sent(), 2]), session = _b[0], error = _b[1];\n                  if (!session) return [3\n                  /*break*/\n                  , 8];\n                  _c.label = 3;\n\n                case 3:\n                  _c.trys.push([3, 5, 6, 7]);\n\n                  return [4\n                  /*yield*/\n                  , this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n\n                case 4:\n                  return [2\n                  /*return*/\n                  , [_c.sent(), null]];\n\n                case 5:\n                  error_3 = _c.sent();\n                  return [2\n                  /*return*/\n                  , this._handleRediscoveryError(error_3, currentRouter)];\n\n                case 6:\n                  session.close();\n                  return [7\n                  /*endfinally*/\n                  ];\n\n                case 7:\n                  return [3\n                  /*break*/\n                  , 9];\n\n                case 8:\n                  // unable to acquire connection and create session towards the current router\n                  // return null to signal that the next router should be tried\n                  return [2\n                  /*return*/\n                  , [null, error]];\n\n                case 9:\n                  return [2\n                  /*return*/\n                  ];\n              }\n            });\n          });\n        }, Promise.resolve([null, null]))];\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmarks, impersonatedUser, auth) {\n    return __awaiter(this, void 0, void 0, function () {\n      var connection, databaseSpecificErrorHandler, delegateConnection, connectionProvider, protocolVersion, error_4;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , this._connectionPool.acquire({\n              auth: auth\n            }, routerAddress)];\n\n          case 1:\n            connection = _a.sent();\n            if (!auth) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , this._verifyStickyConnection({\n              auth: auth,\n              connection: connection,\n              address: routerAddress\n            })];\n\n          case 2:\n            _a.sent();\n\n            _a.label = 3;\n\n          case 3:\n            databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n              errorCode: SESSION_EXPIRED,\n              handleSecurityError: function (error, address, conn) {\n                return _this._handleSecurityError(error, address, conn);\n              }\n            });\n            delegateConnection = !connection._sticky ? new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler) : new connection_1.DelegateConnection(connection);\n            connectionProvider = new connection_provider_single_1.default(delegateConnection);\n            protocolVersion = connection.protocol().version;\n\n            if (protocolVersion < 4.0) {\n              return [2\n              /*return*/\n              , [new neo4j_driver_core_1.Session({\n                mode: WRITE,\n                bookmarks: Bookmarks.empty(),\n                connectionProvider: connectionProvider\n              }), null]];\n            }\n\n            return [2\n            /*return*/\n            , [new neo4j_driver_core_1.Session({\n              mode: READ,\n              database: SYSTEM_DB_NAME,\n              bookmarks: bookmarks,\n              connectionProvider: connectionProvider,\n              impersonatedUser: impersonatedUser\n            }), null]];\n\n          case 4:\n            error_4 = _a.sent();\n            return [2\n            /*return*/\n            , this._handleRediscoveryError(error_4, routerAddress)];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._handleRediscoveryError = function (error, routerAddress) {\n    if (_isFailFastError(error) || _isFailFastSecurityError(error)) {\n      throw error;\n    } else if (error.code === PROCEDURE_NOT_FOUND_CODE) {\n      // throw when getServers procedure not found because this is clearly a configuration issue\n      throw (0, neo4j_driver_core_1.newError)(\"Server at \".concat(routerAddress.asHostPort(), \" can't perform routing. Make sure you are connecting to a causal cluster\"), SERVICE_UNAVAILABLE, error);\n    }\n\n    this._log.warn(\"unable to fetch routing table because of an error \".concat(error));\n\n    return [null, error];\n  };\n\n  RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, error) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!newRoutingTable) {\n              // none of routing servers returned valid routing table, throw exception\n              throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \".concat(currentRoutingTable), SERVICE_UNAVAILABLE, error);\n            }\n\n            if (newRoutingTable.writers.length === 0) {\n              // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n              // does not always get routing table without writers because it talks exclusively to a minority partition\n              this._useSeedRouter = true;\n            }\n\n            return [4\n            /*yield*/\n            , this._updateRoutingTable(newRoutingTable)];\n\n          case 1:\n            _a.sent();\n\n            return [2\n            /*return*/\n            , newRoutingTable];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // close old connections to servers not present in the new routing table\n            return [4\n            /*yield*/\n            , this._connectionPool.keepAll(newRoutingTable.allServers())];\n\n          case 1:\n            // close old connections to servers not present in the new routing table\n            _a.sent();\n\n            this._routingTableRegistry.removeExpired();\n\n            this._routingTableRegistry.register(newRoutingTable);\n\n            this._log.info(\"Updated routing table \".concat(newRoutingTable));\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n    var address = routersArray[routerIndex];\n\n    if (routingTable && address) {\n      routingTable.forgetRouter(address);\n    }\n  };\n\n  return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default);\n\nexports.default = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\n\nvar RoutingTableRegistry =\n/** @class */\nfunction () {\n  /**\n   * Constructor\n   * @param {int} routingTablePurgeDelay The routing table purge delay\n   */\n  function RoutingTableRegistry(routingTablePurgeDelay) {\n    this._tables = new Map();\n    this._routingTablePurgeDelay = routingTablePurgeDelay;\n  }\n  /**\n   * Put a routing table in the registry\n   *\n   * @param {RoutingTable} table The routing table\n   * @returns {RoutingTableRegistry} this\n   */\n\n\n  RoutingTableRegistry.prototype.register = function (table) {\n    this._tables.set(table.database, table);\n\n    return this;\n  };\n  /**\n   * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n   * be applied for each element\n   *\n   * @param {string} database The database name\n   * @param {object} callbacks The actions\n   * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n   * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n   * @returns {RoutingTableRegistry} this\n   */\n\n\n  RoutingTableRegistry.prototype.apply = function (database, _a) {\n    var _b = _a === void 0 ? {} : _a,\n        applyWhenExists = _b.applyWhenExists,\n        _c = _b.applyWhenDontExists,\n        applyWhenDontExists = _c === void 0 ? function () {} : _c;\n\n    if (this._tables.has(database)) {\n      applyWhenExists(this._tables.get(database));\n    } else if (typeof database === 'string' || database === null) {\n      applyWhenDontExists();\n    } else {\n      this._forEach(applyWhenExists);\n    }\n\n    return this;\n  };\n  /**\n   * Retrieves a routing table from a given database name\n   *\n   * @param {string|impersonatedUser} impersonatedUser The impersonated User\n   * @param {string} database The database name\n   * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n   * @returns {RoutingTable} The routing table for the respective database\n   */\n\n\n  RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n    if (this._tables.has(database)) {\n      return this._tables.get(database);\n    }\n\n    return typeof defaultSupplier === 'function' ? defaultSupplier() : defaultSupplier;\n  };\n  /**\n   * Remove the routing table which is already expired\n   * @returns {RoutingTableRegistry} this\n   */\n\n\n  RoutingTableRegistry.prototype.removeExpired = function () {\n    var _this = this;\n\n    return this._removeIf(function (value) {\n      return value.isExpiredFor(_this._routingTablePurgeDelay);\n    });\n  };\n\n  RoutingTableRegistry.prototype._forEach = function (apply) {\n    var e_3, _a;\n\n    try {\n      for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            value = _d[1];\n\n        apply(value);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return this;\n  };\n\n  RoutingTableRegistry.prototype._remove = function (key) {\n    this._tables.delete(key);\n\n    return this;\n  };\n\n  RoutingTableRegistry.prototype._removeIf = function (predicate) {\n    var e_4, _a;\n\n    try {\n      for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var _d = __read(_c.value, 2),\n            key = _d[0],\n            value = _d[1];\n\n        if (predicate(value)) {\n          this._remove(key);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return this;\n  };\n\n  return RoutingTableRegistry;\n}();\n\nfunction _isFailFastError(error) {\n  return [DATABASE_NOT_FOUND_CODE, INVALID_BOOKMARK_CODE, INVALID_BOOKMARK_MIXTURE_CODE, INVALID_ARGUMENT_ERROR, INVALID_REQUEST_ERROR, STATEMENT_TYPE_ERROR, NOT_AVAILABLE].includes(error.code);\n}\n\nfunction _isFailFastSecurityError(error) {\n  return error.code.startsWith('Neo.ClientError.Security.') && ![AUTHORIZATION_EXPIRED_CODE].includes(error.code);\n}","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__createBinding","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","__generator","body","_","label","sent","trys","ops","f","y","g","verb","Symbol","iterator","op","pop","push","__values","__read","r","ar","error","__importDefault","exports","neo4j_driver_core_1","require","rediscovery_1","channel_1","connection_provider_single_1","connection_provider_pooled_1","load_balancing_1","connection_1","lang_1","SERVICE_UNAVAILABLE","SESSION_EXPIRED","Bookmarks","internal","bookmarks","_a","constants","READ","ACCESS_MODE_READ","WRITE","ACCESS_MODE_WRITE","BOLT_PROTOCOL_V3","BOLT_PROTOCOL_V4_0","BOLT_PROTOCOL_V4_4","BOLT_PROTOCOL_V5_1","PROCEDURE_NOT_FOUND_CODE","DATABASE_NOT_FOUND_CODE","INVALID_BOOKMARK_CODE","INVALID_BOOKMARK_MIXTURE_CODE","AUTHORIZATION_EXPIRED_CODE","INVALID_ARGUMENT_ERROR","INVALID_REQUEST_ERROR","STATEMENT_TYPE_ERROR","NOT_AVAILABLE","SYSTEM_DB_NAME","DEFAULT_DB_NAME","DEFAULT_ROUTING_TABLE_PURGE_DELAY","int","RoutingConnectionProvider","_super","id","address","routingContext","hostNameResolver","config","log","userAgent","boltAgent","authTokenManager","routingTablePurgeDelay","newPool","_this","createChannelConnection","_config","_createConnectionErrorHandler","_log","_routingContext","toString","_seedRouter","_rediscovery","default","_loadBalancingStrategy","LeastConnectedLoadBalancingStrategy","_connectionPool","_hostNameResolver","_dnsResolver","HostNameResolver","_useSeedRouter","_routingTableRegistry","RoutingTableRegistry","_refreshRoutingTable","functional","reuseOngoingRequest","ConnectionErrorHandler","_handleUnavailability","database","warn","concat","_id","code","message","forget","_handleSecurityError","connection","_handleWriteFailure","forgetWriter","newError","acquireConnection","_b","accessMode","impersonatedUser","onDatabaseNameResolved","auth","name","context","databaseSpecificErrorHandler","routingTable","error_1","transformed","_c","conn","_freshRoutingTable","databaseName","selectReader","readers","selectWriter","writers","acquire","_verifyStickyConnection","DelegateConnection","handleAndTransformError","_hasProtocolVersion","versionPredicate","addresses","lastError","protocolVersion","error_2","_resolveSeedRouter","protocol","version","close","supportsMultiDb","supportsTransactionConfig","supportsUserImpersonation","supportsSessionAuth","getNegotiatedProtocolVersion","catch","verifyAuthentication","_verifyAuthentication","getAddress","servers","verifyConnectivityAndGetServerInfo","servers_1","servers_1_1","serverInfo","e_1","e_2_1","e_2","_verifyConnectivityAndGetServerVersion","return","applyWhenExists","purge","currentRoutingTable","RoutingTable","isStaleFor","info","newRoutingTable","knownRouters","routers","_fetchRoutingTableFromSeedRouterFallbackToKnownRouters","_fetchRoutingTableFromKnownRoutersFallbackToSeedRouter","seenRouters","newRoutingTable2","error2","_fetchRoutingTableUsingSeedRouter","_fetchRoutingTableUsingKnownRouters","_applyRoutingTableIfPossible","lastRouterIndex","_fetchRoutingTable","_forgetRouter","seedRouter","resolvedAddresses","newAddresses","filter","indexOf","dnsResolvedAddresses","all","map","routerAddresses","reduce","refreshedTablePromise","currentRouter","currentIndex","previousRouterIndex","session","error_3","_createSessionForRediscovery","lookupRoutingTableOnRouter","_handleRediscoveryError","routerAddress","delegateConnection","connectionProvider","error_4","errorCode","handleSecurityError","_sticky","Session","mode","empty","_isFailFastError","_isFailFastSecurityError","asHostPort","_updateRoutingTable","keepAll","allServers","removeExpired","register","routersArray","routerIndex","forgetRouter","_tables","Map","_routingTablePurgeDelay","table","set","applyWhenDontExists","has","_forEach","defaultSupplier","_removeIf","isExpiredFor","e_3","_d","e_3_1","_remove","key","delete","predicate","e_4","e_4_1","includes","startsWith"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-bolt-connection/lib/connection-provider/connection-provider-routing.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar rediscovery_1 = __importStar(require(\"../rediscovery\"));\nvar channel_1 = require(\"../channel\");\nvar connection_provider_single_1 = __importDefault(require(\"./connection-provider-single\"));\nvar connection_provider_pooled_1 = __importDefault(require(\"./connection-provider-pooled\"));\nvar load_balancing_1 = require(\"../load-balancing\");\nvar connection_1 = require(\"../connection\");\nvar lang_1 = require(\"../lang\");\nvar SERVICE_UNAVAILABLE = neo4j_driver_core_1.error.SERVICE_UNAVAILABLE, SESSION_EXPIRED = neo4j_driver_core_1.error.SESSION_EXPIRED;\nvar Bookmarks = neo4j_driver_core_1.internal.bookmarks.Bookmarks, _a = neo4j_driver_core_1.internal.constants, READ = _a.ACCESS_MODE_READ, WRITE = _a.ACCESS_MODE_WRITE, BOLT_PROTOCOL_V3 = _a.BOLT_PROTOCOL_V3, BOLT_PROTOCOL_V4_0 = _a.BOLT_PROTOCOL_V4_0, BOLT_PROTOCOL_V4_4 = _a.BOLT_PROTOCOL_V4_4, BOLT_PROTOCOL_V5_1 = _a.BOLT_PROTOCOL_V5_1;\nvar PROCEDURE_NOT_FOUND_CODE = 'Neo.ClientError.Procedure.ProcedureNotFound';\nvar DATABASE_NOT_FOUND_CODE = 'Neo.ClientError.Database.DatabaseNotFound';\nvar INVALID_BOOKMARK_CODE = 'Neo.ClientError.Transaction.InvalidBookmark';\nvar INVALID_BOOKMARK_MIXTURE_CODE = 'Neo.ClientError.Transaction.InvalidBookmarkMixture';\nvar AUTHORIZATION_EXPIRED_CODE = 'Neo.ClientError.Security.AuthorizationExpired';\nvar INVALID_ARGUMENT_ERROR = 'Neo.ClientError.Statement.ArgumentError';\nvar INVALID_REQUEST_ERROR = 'Neo.ClientError.Request.Invalid';\nvar STATEMENT_TYPE_ERROR = 'Neo.ClientError.Statement.TypeError';\nvar NOT_AVAILABLE = 'N/A';\nvar SYSTEM_DB_NAME = 'system';\nvar DEFAULT_DB_NAME = null;\nvar DEFAULT_ROUTING_TABLE_PURGE_DELAY = (0, neo4j_driver_core_1.int)(30000);\nvar RoutingConnectionProvider = /** @class */ (function (_super) {\n    __extends(RoutingConnectionProvider, _super);\n    function RoutingConnectionProvider(_a) {\n        var id = _a.id, address = _a.address, routingContext = _a.routingContext, hostNameResolver = _a.hostNameResolver, config = _a.config, log = _a.log, userAgent = _a.userAgent, boltAgent = _a.boltAgent, authTokenManager = _a.authTokenManager, routingTablePurgeDelay = _a.routingTablePurgeDelay, newPool = _a.newPool;\n        var _this = _super.call(this, { id: id, config: config, log: log, userAgent: userAgent, boltAgent: boltAgent, authTokenManager: authTokenManager, newPool: newPool }, function (address) {\n            return (0, connection_1.createChannelConnection)(address, _this._config, _this._createConnectionErrorHandler(), _this._log, _this._routingContext);\n        }) || this;\n        _this._routingContext = __assign(__assign({}, routingContext), { address: address.toString() });\n        _this._seedRouter = address;\n        _this._rediscovery = new rediscovery_1.default(_this._routingContext);\n        _this._loadBalancingStrategy = new load_balancing_1.LeastConnectedLoadBalancingStrategy(_this._connectionPool);\n        _this._hostNameResolver = hostNameResolver;\n        _this._dnsResolver = new channel_1.HostNameResolver();\n        _this._log = log;\n        _this._useSeedRouter = true;\n        _this._routingTableRegistry = new RoutingTableRegistry(routingTablePurgeDelay\n            ? (0, neo4j_driver_core_1.int)(routingTablePurgeDelay)\n            : DEFAULT_ROUTING_TABLE_PURGE_DELAY);\n        _this._refreshRoutingTable = lang_1.functional.reuseOngoingRequest(_this._refreshRoutingTable, _this);\n        return _this;\n    }\n    RoutingConnectionProvider.prototype._createConnectionErrorHandler = function () {\n        // connection errors mean SERVICE_UNAVAILABLE for direct driver but for routing driver they should only\n        // result in SESSION_EXPIRED because there might still exist other servers capable of serving the request\n        return new connection_1.ConnectionErrorHandler(SESSION_EXPIRED);\n    };\n    RoutingConnectionProvider.prototype._handleUnavailability = function (error, address, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        this.forget(address, database || DEFAULT_DB_NAME);\n        return error;\n    };\n    RoutingConnectionProvider.prototype._handleSecurityError = function (error, address, connection, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will close connections to \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        return _super.prototype._handleSecurityError.call(this, error, address, connection, database);\n    };\n    RoutingConnectionProvider.prototype._handleWriteFailure = function (error, address, database) {\n        this._log.warn(\"Routing driver \".concat(this._id, \" will forget writer \").concat(address, \" for database '\").concat(database, \"' because of an error \").concat(error.code, \" '\").concat(error.message, \"'\"));\n        this.forgetWriter(address, database || DEFAULT_DB_NAME);\n        return (0, neo4j_driver_core_1.newError)('No longer possible to write to server at ' + address, SESSION_EXPIRED, error);\n    };\n    /**\n     * See {@link ConnectionProvider} for more information about this method and\n     * its arguments.\n     */\n    RoutingConnectionProvider.prototype.acquireConnection = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var name, address, context, databaseSpecificErrorHandler, routingTable, connection, error_1, transformed;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        databaseSpecificErrorHandler = new connection_1.ConnectionErrorHandler(SESSION_EXPIRED, function (error, address) { return _this._handleUnavailability(error, address, context.database); }, function (error, address) { return _this._handleWriteFailure(error, address, context.database); }, function (error, address, conn) {\n                            return _this._handleSecurityError(error, address, conn, context.database);\n                        });\n                        return [4 /*yield*/, this._freshRoutingTable({\n                                accessMode: accessMode,\n                                database: context.database,\n                                bookmarks: bookmarks,\n                                impersonatedUser: impersonatedUser,\n                                auth: auth,\n                                onDatabaseNameResolved: function (databaseName) {\n                                    context.database = context.database || databaseName;\n                                    if (onDatabaseNameResolved) {\n                                        onDatabaseNameResolved(databaseName);\n                                    }\n                                }\n                            })\n                            // select a target server based on specified access mode\n                        ];\n                    case 1:\n                        routingTable = _c.sent();\n                        // select a target server based on specified access mode\n                        if (accessMode === READ) {\n                            address = this._loadBalancingStrategy.selectReader(routingTable.readers);\n                            name = 'read';\n                        }\n                        else if (accessMode === WRITE) {\n                            address = this._loadBalancingStrategy.selectWriter(routingTable.writers);\n                            name = 'write';\n                        }\n                        else {\n                            throw (0, neo4j_driver_core_1.newError)('Illegal mode ' + accessMode);\n                        }\n                        // we couldn't select a target server\n                        if (!address) {\n                            throw (0, neo4j_driver_core_1.newError)(\"Failed to obtain connection towards \".concat(name, \" server. Known routing table is: \").concat(routingTable), SESSION_EXPIRED);\n                        }\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 6, , 7]);\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, address)];\n                    case 3:\n                        connection = _c.sent();\n                        if (!auth) return [3 /*break*/, 5];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: address\n                            })];\n                    case 4:\n                        _c.sent();\n                        return [2 /*return*/, connection];\n                    case 5: return [2 /*return*/, new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)];\n                    case 6:\n                        error_1 = _c.sent();\n                        transformed = databaseSpecificErrorHandler.handleAndTransformError(error_1, address);\n                        throw transformed;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._hasProtocolVersion = function (versionPredicate) {\n        return __awaiter(this, void 0, void 0, function () {\n            var addresses, lastError, i, connection, protocolVersion, error_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(this._seedRouter)];\n                    case 1:\n                        addresses = _a.sent();\n                        i = 0;\n                        _a.label = 2;\n                    case 2:\n                        if (!(i < addresses.length)) return [3 /*break*/, 8];\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 6, , 7]);\n                        return [4 /*yield*/, (0, connection_1.createChannelConnection)(addresses[i], this._config, this._createConnectionErrorHandler(), this._log)];\n                    case 4:\n                        connection = _a.sent();\n                        protocolVersion = connection.protocol()\n                            ? connection.protocol().version\n                            : null;\n                        return [4 /*yield*/, connection.close()];\n                    case 5:\n                        _a.sent();\n                        if (protocolVersion) {\n                            return [2 /*return*/, versionPredicate(protocolVersion)];\n                        }\n                        return [2 /*return*/, false];\n                    case 6:\n                        error_2 = _a.sent();\n                        lastError = error_2;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        i++;\n                        return [3 /*break*/, 2];\n                    case 8:\n                        if (lastError) {\n                            throw lastError;\n                        }\n                        return [2 /*return*/, false];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsMultiDb = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_0; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsTransactionConfig = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V3; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsUserImpersonation = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V4_4; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.supportsSessionAuth = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hasProtocolVersion(function (version) { return version >= BOLT_PROTOCOL_V5_1; })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.getNegotiatedProtocolVersion = function () {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._hasProtocolVersion(resolve)\n                .catch(reject);\n        });\n    };\n    RoutingConnectionProvider.prototype.verifyAuthentication = function (_a) {\n        var database = _a.database, accessMode = _a.accessMode, auth = _a.auth;\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_b) {\n                return [2 /*return*/, this._verifyAuthentication({\n                        auth: auth,\n                        getAddress: function () { return __awaiter(_this, void 0, void 0, function () {\n                            var context, routingTable, servers;\n                            return __generator(this, function (_a) {\n                                switch (_a.label) {\n                                    case 0:\n                                        context = { database: database || DEFAULT_DB_NAME };\n                                        return [4 /*yield*/, this._freshRoutingTable({\n                                                accessMode: accessMode,\n                                                database: context.database,\n                                                auth: auth,\n                                                onDatabaseNameResolved: function (databaseName) {\n                                                    context.database = context.database || databaseName;\n                                                }\n                                            })];\n                                    case 1:\n                                        routingTable = _a.sent();\n                                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                                        if (servers.length === 0) {\n                                            throw (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                                        }\n                                        return [2 /*return*/, servers[0]];\n                                }\n                            });\n                        }); }\n                    })];\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.verifyConnectivityAndGetServerInfo = function (_a) {\n        var database = _a.database, accessMode = _a.accessMode;\n        return __awaiter(this, void 0, void 0, function () {\n            var context, routingTable, servers, error, servers_1, servers_1_1, address, serverInfo, e_1, e_2_1;\n            var e_2, _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        context = { database: database || DEFAULT_DB_NAME };\n                        return [4 /*yield*/, this._freshRoutingTable({\n                                accessMode: accessMode,\n                                database: context.database,\n                                onDatabaseNameResolved: function (databaseName) {\n                                    context.database = context.database || databaseName;\n                                }\n                            })];\n                    case 1:\n                        routingTable = _c.sent();\n                        servers = accessMode === WRITE ? routingTable.writers : routingTable.readers;\n                        error = (0, neo4j_driver_core_1.newError)(\"No servers available for database '\".concat(context.database, \"' with access mode '\").concat(accessMode, \"'\"), SERVICE_UNAVAILABLE);\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 9, 10, 11]);\n                        servers_1 = __values(servers), servers_1_1 = servers_1.next();\n                        _c.label = 3;\n                    case 3:\n                        if (!!servers_1_1.done) return [3 /*break*/, 8];\n                        address = servers_1_1.value;\n                        _c.label = 4;\n                    case 4:\n                        _c.trys.push([4, 6, , 7]);\n                        return [4 /*yield*/, this._verifyConnectivityAndGetServerVersion({ address: address })];\n                    case 5:\n                        serverInfo = _c.sent();\n                        return [2 /*return*/, serverInfo];\n                    case 6:\n                        e_1 = _c.sent();\n                        error = e_1;\n                        return [3 /*break*/, 7];\n                    case 7:\n                        servers_1_1 = servers_1.next();\n                        return [3 /*break*/, 3];\n                    case 8: return [3 /*break*/, 11];\n                    case 9:\n                        e_2_1 = _c.sent();\n                        e_2 = { error: e_2_1 };\n                        return [3 /*break*/, 11];\n                    case 10:\n                        try {\n                            if (servers_1_1 && !servers_1_1.done && (_b = servers_1.return)) _b.call(servers_1);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                        return [7 /*endfinally*/];\n                    case 11: throw error;\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype.forget = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forget(address); }\n        });\n        // We're firing and forgetting this operation explicitly and listening for any\n        // errors to avoid unhandled promise rejection\n        this._connectionPool.purge(address).catch(function () { });\n    };\n    RoutingConnectionProvider.prototype.forgetWriter = function (address, database) {\n        this._routingTableRegistry.apply(database, {\n            applyWhenExists: function (routingTable) { return routingTable.forgetWriter(address); }\n        });\n    };\n    RoutingConnectionProvider.prototype._freshRoutingTable = function (_a) {\n        var _b = _a === void 0 ? {} : _a, accessMode = _b.accessMode, database = _b.database, bookmarks = _b.bookmarks, impersonatedUser = _b.impersonatedUser, onDatabaseNameResolved = _b.onDatabaseNameResolved, auth = _b.auth;\n        var currentRoutingTable = this._routingTableRegistry.get(database, function () { return new rediscovery_1.RoutingTable({ database: database }); });\n        if (!currentRoutingTable.isStaleFor(accessMode)) {\n            return currentRoutingTable;\n        }\n        this._log.info(\"Routing table is stale for database: \\\"\".concat(database, \"\\\" and access mode: \\\"\").concat(accessMode, \"\\\": \").concat(currentRoutingTable));\n        return this._refreshRoutingTable(currentRoutingTable, bookmarks, impersonatedUser, auth)\n            .then(function (newRoutingTable) {\n            onDatabaseNameResolved(newRoutingTable.database);\n            return newRoutingTable;\n        });\n    };\n    RoutingConnectionProvider.prototype._refreshRoutingTable = function (currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        var knownRouters = currentRoutingTable.routers;\n        if (this._useSeedRouter) {\n            return this._fetchRoutingTableFromSeedRouterFallbackToKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n        }\n        return this._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth);\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromSeedRouterFallbackToKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var seenRouters, _a, newRoutingTable, error, _b, newRoutingTable2, error2;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        seenRouters = [];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(seenRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (!newRoutingTable) return [3 /*break*/, 2];\n                        this._useSeedRouter = false;\n                        return [3 /*break*/, 4];\n                    case 2: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 3:\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable2 = _b[0], error2 = _b[1];\n                        newRoutingTable = newRoutingTable2;\n                        error = error2 || error;\n                        _c.label = 4;\n                    case 4: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n                    case 5: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableFromKnownRoutersFallbackToSeedRouter = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, newRoutingTable, error;\n            var _b;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTableUsingKnownRouters(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (!!newRoutingTable) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._fetchRoutingTableUsingSeedRouter(knownRouters, this._seedRouter, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 2:\n                        // none of the known routers returned a valid routing table - try to use seed router address for rediscovery\n                        _b = __read.apply(void 0, [_c.sent(), 2]), newRoutingTable = _b[0], error = _b[1];\n                        _c.label = 3;\n                    case 3: return [4 /*yield*/, this._applyRoutingTableIfPossible(currentRoutingTable, newRoutingTable, error)];\n                    case 4: return [2 /*return*/, _c.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingKnownRouters = function (knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, newRoutingTable, error, lastRouterIndex;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4 /*yield*/, this._fetchRoutingTable(knownRouters, currentRoutingTable, bookmarks, impersonatedUser, auth)];\n                    case 1:\n                        _a = __read.apply(void 0, [_b.sent(), 2]), newRoutingTable = _a[0], error = _a[1];\n                        if (newRoutingTable) {\n                            // one of the known routers returned a valid routing table - use it\n                            return [2 /*return*/, [newRoutingTable, null]];\n                        }\n                        lastRouterIndex = knownRouters.length - 1;\n                        RoutingConnectionProvider._forgetRouter(currentRoutingTable, knownRouters, lastRouterIndex);\n                        return [2 /*return*/, [null, error]];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTableUsingSeedRouter = function (seenRouters, seedRouter, routingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, newAddresses;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._resolveSeedRouter(seedRouter)\n                        // filter out all addresses that we've already tried\n                    ];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        newAddresses = resolvedAddresses.filter(function (address) { return seenRouters.indexOf(address) < 0; });\n                        return [4 /*yield*/, this._fetchRoutingTable(newAddresses, routingTable, bookmarks, impersonatedUser, auth)];\n                    case 2: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._resolveSeedRouter = function (seedRouter) {\n        return __awaiter(this, void 0, void 0, function () {\n            var resolvedAddresses, dnsResolvedAddresses;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._hostNameResolver.resolve(seedRouter)];\n                    case 1:\n                        resolvedAddresses = _a.sent();\n                        return [4 /*yield*/, Promise.all(resolvedAddresses.map(function (address) { return _this._dnsResolver.resolve(address); }))];\n                    case 2:\n                        dnsResolvedAddresses = _a.sent();\n                        return [2 /*return*/, [].concat.apply([], dnsResolvedAddresses)];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._fetchRoutingTable = function (routerAddresses, routingTable, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, routerAddresses.reduce(function (refreshedTablePromise, currentRouter, currentIndex) { return __awaiter(_this, void 0, void 0, function () {\n                        var _a, newRoutingTable, previousRouterIndex, _b, session, error, error_3;\n                        return __generator(this, function (_c) {\n                            switch (_c.label) {\n                                case 0: return [4 /*yield*/, refreshedTablePromise];\n                                case 1:\n                                    _a = __read.apply(void 0, [_c.sent(), 1]), newRoutingTable = _a[0];\n                                    if (newRoutingTable) {\n                                        // valid routing table was fetched - just return it, try next router otherwise\n                                        return [2 /*return*/, [newRoutingTable, null]];\n                                    }\n                                    else {\n                                        previousRouterIndex = currentIndex - 1;\n                                        RoutingConnectionProvider._forgetRouter(routingTable, routerAddresses, previousRouterIndex);\n                                    }\n                                    return [4 /*yield*/, this._createSessionForRediscovery(currentRouter, bookmarks, impersonatedUser, auth)];\n                                case 2:\n                                    _b = __read.apply(void 0, [_c.sent(), 2]), session = _b[0], error = _b[1];\n                                    if (!session) return [3 /*break*/, 8];\n                                    _c.label = 3;\n                                case 3:\n                                    _c.trys.push([3, 5, 6, 7]);\n                                    return [4 /*yield*/, this._rediscovery.lookupRoutingTableOnRouter(session, routingTable.database, currentRouter, impersonatedUser)];\n                                case 4: return [2 /*return*/, [_c.sent(), null]];\n                                case 5:\n                                    error_3 = _c.sent();\n                                    return [2 /*return*/, this._handleRediscoveryError(error_3, currentRouter)];\n                                case 6:\n                                    session.close();\n                                    return [7 /*endfinally*/];\n                                case 7: return [3 /*break*/, 9];\n                                case 8: \n                                // unable to acquire connection and create session towards the current router\n                                // return null to signal that the next router should be tried\n                                return [2 /*return*/, [null, error]];\n                                case 9: return [2 /*return*/];\n                            }\n                        });\n                    }); }, Promise.resolve([null, null]))];\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._createSessionForRediscovery = function (routerAddress, bookmarks, impersonatedUser, auth) {\n        return __awaiter(this, void 0, void 0, function () {\n            var connection, databaseSpecificErrorHandler, delegateConnection, connectionProvider, protocolVersion, error_4;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 4, , 5]);\n                        return [4 /*yield*/, this._connectionPool.acquire({ auth: auth }, routerAddress)];\n                    case 1:\n                        connection = _a.sent();\n                        if (!auth) return [3 /*break*/, 3];\n                        return [4 /*yield*/, this._verifyStickyConnection({\n                                auth: auth,\n                                connection: connection,\n                                address: routerAddress\n                            })];\n                    case 2:\n                        _a.sent();\n                        _a.label = 3;\n                    case 3:\n                        databaseSpecificErrorHandler = connection_1.ConnectionErrorHandler.create({\n                            errorCode: SESSION_EXPIRED,\n                            handleSecurityError: function (error, address, conn) { return _this._handleSecurityError(error, address, conn); }\n                        });\n                        delegateConnection = !connection._sticky\n                            ? new connection_1.DelegateConnection(connection, databaseSpecificErrorHandler)\n                            : new connection_1.DelegateConnection(connection);\n                        connectionProvider = new connection_provider_single_1.default(delegateConnection);\n                        protocolVersion = connection.protocol().version;\n                        if (protocolVersion < 4.0) {\n                            return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                                        mode: WRITE,\n                                        bookmarks: Bookmarks.empty(),\n                                        connectionProvider: connectionProvider\n                                    }), null]];\n                        }\n                        return [2 /*return*/, [new neo4j_driver_core_1.Session({\n                                    mode: READ,\n                                    database: SYSTEM_DB_NAME,\n                                    bookmarks: bookmarks,\n                                    connectionProvider: connectionProvider,\n                                    impersonatedUser: impersonatedUser\n                                }), null]];\n                    case 4:\n                        error_4 = _a.sent();\n                        return [2 /*return*/, this._handleRediscoveryError(error_4, routerAddress)];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._handleRediscoveryError = function (error, routerAddress) {\n        if (_isFailFastError(error) || _isFailFastSecurityError(error)) {\n            throw error;\n        }\n        else if (error.code === PROCEDURE_NOT_FOUND_CODE) {\n            // throw when getServers procedure not found because this is clearly a configuration issue\n            throw (0, neo4j_driver_core_1.newError)(\"Server at \".concat(routerAddress.asHostPort(), \" can't perform routing. Make sure you are connecting to a causal cluster\"), SERVICE_UNAVAILABLE, error);\n        }\n        this._log.warn(\"unable to fetch routing table because of an error \".concat(error));\n        return [null, error];\n    };\n    RoutingConnectionProvider.prototype._applyRoutingTableIfPossible = function (currentRoutingTable, newRoutingTable, error) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!newRoutingTable) {\n                            // none of routing servers returned valid routing table, throw exception\n                            throw (0, neo4j_driver_core_1.newError)(\"Could not perform discovery. No routing servers available. Known routing table: \".concat(currentRoutingTable), SERVICE_UNAVAILABLE, error);\n                        }\n                        if (newRoutingTable.writers.length === 0) {\n                            // use seed router next time. this is important when cluster is partitioned. it tries to make sure driver\n                            // does not always get routing table without writers because it talks exclusively to a minority partition\n                            this._useSeedRouter = true;\n                        }\n                        return [4 /*yield*/, this._updateRoutingTable(newRoutingTable)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, newRoutingTable];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider.prototype._updateRoutingTable = function (newRoutingTable) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: \n                    // close old connections to servers not present in the new routing table\n                    return [4 /*yield*/, this._connectionPool.keepAll(newRoutingTable.allServers())];\n                    case 1:\n                        // close old connections to servers not present in the new routing table\n                        _a.sent();\n                        this._routingTableRegistry.removeExpired();\n                        this._routingTableRegistry.register(newRoutingTable);\n                        this._log.info(\"Updated routing table \".concat(newRoutingTable));\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    RoutingConnectionProvider._forgetRouter = function (routingTable, routersArray, routerIndex) {\n        var address = routersArray[routerIndex];\n        if (routingTable && address) {\n            routingTable.forgetRouter(address);\n        }\n    };\n    return RoutingConnectionProvider;\n}(connection_provider_pooled_1.default));\nexports.default = RoutingConnectionProvider;\n/**\n * Responsible for keeping track of the existing routing tables\n */\nvar RoutingTableRegistry = /** @class */ (function () {\n    /**\n     * Constructor\n     * @param {int} routingTablePurgeDelay The routing table purge delay\n     */\n    function RoutingTableRegistry(routingTablePurgeDelay) {\n        this._tables = new Map();\n        this._routingTablePurgeDelay = routingTablePurgeDelay;\n    }\n    /**\n     * Put a routing table in the registry\n     *\n     * @param {RoutingTable} table The routing table\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.register = function (table) {\n        this._tables.set(table.database, table);\n        return this;\n    };\n    /**\n     * Apply function in the routing table for an specific database. If the database name is not defined, the function will\n     * be applied for each element\n     *\n     * @param {string} database The database name\n     * @param {object} callbacks The actions\n     * @param {function (RoutingTable)} callbacks.applyWhenExists Call when the db exists or when the database property is not informed\n     * @param {function ()} callbacks.applyWhenDontExists Call when the database doesn't have the routing table registred\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.apply = function (database, _a) {\n        var _b = _a === void 0 ? {} : _a, applyWhenExists = _b.applyWhenExists, _c = _b.applyWhenDontExists, applyWhenDontExists = _c === void 0 ? function () { } : _c;\n        if (this._tables.has(database)) {\n            applyWhenExists(this._tables.get(database));\n        }\n        else if (typeof database === 'string' || database === null) {\n            applyWhenDontExists();\n        }\n        else {\n            this._forEach(applyWhenExists);\n        }\n        return this;\n    };\n    /**\n     * Retrieves a routing table from a given database name\n     *\n     * @param {string|impersonatedUser} impersonatedUser The impersonated User\n     * @param {string} database The database name\n     * @param {function()|RoutingTable} defaultSupplier The routing table supplier, if it's not a function or not exists, it will return itself as default value\n     * @returns {RoutingTable} The routing table for the respective database\n     */\n    RoutingTableRegistry.prototype.get = function (database, defaultSupplier) {\n        if (this._tables.has(database)) {\n            return this._tables.get(database);\n        }\n        return typeof defaultSupplier === 'function'\n            ? defaultSupplier()\n            : defaultSupplier;\n    };\n    /**\n     * Remove the routing table which is already expired\n     * @returns {RoutingTableRegistry} this\n     */\n    RoutingTableRegistry.prototype.removeExpired = function () {\n        var _this = this;\n        return this._removeIf(function (value) {\n            return value.isExpiredFor(_this._routingTablePurgeDelay);\n        });\n    };\n    RoutingTableRegistry.prototype._forEach = function (apply) {\n        var e_3, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), value = _d[1];\n                apply(value);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return this;\n    };\n    RoutingTableRegistry.prototype._remove = function (key) {\n        this._tables.delete(key);\n        return this;\n    };\n    RoutingTableRegistry.prototype._removeIf = function (predicate) {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this._tables), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var _d = __read(_c.value, 2), key = _d[0], value = _d[1];\n                if (predicate(value)) {\n                    this._remove(key);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return this;\n    };\n    return RoutingTableRegistry;\n}());\nfunction _isFailFastError(error) {\n    return [\n        DATABASE_NOT_FOUND_CODE,\n        INVALID_BOOKMARK_CODE,\n        INVALID_BOOKMARK_MIXTURE_CODE,\n        INVALID_ARGUMENT_ERROR,\n        INVALID_REQUEST_ERROR,\n        STATEMENT_TYPE_ERROR,\n        NOT_AVAILABLE\n    ].includes(error.code);\n}\nfunction _isFailFastSecurityError(error) {\n    return error.code.startsWith('Neo.ClientError.Security.') &&\n        ![\n            AUTHORIZATION_EXPIRED_CODE\n        ].includes(error.code);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}