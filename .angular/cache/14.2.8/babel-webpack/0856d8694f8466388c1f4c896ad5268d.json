{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n*/\n\n/* eslint-disable @typescript-eslint/promise-function-async */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Interface which defines a connection for the core driver object.\n *\n *\n * This connection exposes only methods used by the code module.\n * Methods with connection implementation details can be defined and used\n * by the implementation layer.\n *\n * @private\n * @interface\n */\n\nvar Connection =\n/** @class */\nfunction () {\n  function Connection() {}\n\n  Connection.prototype.beginTransaction = function (config) {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.run = function (query, parameters, config) {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.commitTransaction = function (config) {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.rollbackTransaction = function (config) {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.resetAndFlush = function () {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.isOpen = function () {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.getProtocolVersion = function () {\n    throw new Error('Not implemented');\n  };\n\n  Connection.prototype.hasOngoingObservableRequests = function () {\n    throw new Error('Not implemented');\n  };\n\n  return Connection;\n}();\n\nexports.default = Connection;","map":{"version":3,"names":["Object","defineProperty","exports","value","Connection","prototype","beginTransaction","config","Error","run","query","parameters","commitTransaction","rollbackTransaction","resetAndFlush","isOpen","getProtocolVersion","hasOngoingObservableRequests","default"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-core/lib/connection.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n*/\n/* eslint-disable @typescript-eslint/promise-function-async */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Interface which defines a connection for the core driver object.\n *\n *\n * This connection exposes only methods used by the code module.\n * Methods with connection implementation details can be defined and used\n * by the implementation layer.\n *\n * @private\n * @interface\n */\nvar Connection = /** @class */ (function () {\n    function Connection() {\n    }\n    Connection.prototype.beginTransaction = function (config) {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.run = function (query, parameters, config) {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.commitTransaction = function (config) {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.rollbackTransaction = function (config) {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.resetAndFlush = function () {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.isOpen = function () {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.getProtocolVersion = function () {\n        throw new Error('Not implemented');\n    };\n    Connection.prototype.hasOngoingObservableRequests = function () {\n        throw new Error('Not implemented');\n    };\n    return Connection;\n}());\nexports.default = Connection;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,UAAU;AAAG;AAAe,YAAY;EACxC,SAASA,UAAT,GAAsB,CACrB;;EACDA,UAAU,CAACC,SAAX,CAAqBC,gBAArB,GAAwC,UAAUC,MAAV,EAAkB;IACtD,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBI,GAArB,GAA2B,UAAUC,KAAV,EAAiBC,UAAjB,EAA6BJ,MAA7B,EAAqC;IAC5D,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBO,iBAArB,GAAyC,UAAUL,MAAV,EAAkB;IACvD,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBQ,mBAArB,GAA2C,UAAUN,MAAV,EAAkB;IACzD,MAAM,IAAIC,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBS,aAArB,GAAqC,YAAY;IAC7C,MAAM,IAAIN,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBU,MAArB,GAA8B,YAAY;IACtC,MAAM,IAAIP,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBW,kBAArB,GAA0C,YAAY;IAClD,MAAM,IAAIR,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGAJ,UAAU,CAACC,SAAX,CAAqBY,4BAArB,GAAoD,YAAY;IAC5D,MAAM,IAAIT,KAAJ,CAAU,iBAAV,CAAN;EACH,CAFD;;EAGA,OAAOJ,UAAP;AACH,CA5B+B,EAAhC;;AA6BAF,OAAO,CAACgB,OAAR,GAAkBd,UAAlB"},"metadata":{},"sourceType":"script"}