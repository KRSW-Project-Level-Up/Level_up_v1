{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar pool_config_1 = __importDefault(require(\"./pool-config\"));\n\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\n\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\n\nvar Pool =\n/** @class */\nfunction () {\n  /**\n   * @param {function(acquisitionContext: object, address: ServerAddress, function(address: ServerAddress, resource: object): Promise<object>): Promise<object>} create\n   *                an allocation function that creates a promise with a new resource. It's given an address for which to\n   *                allocate the connection and a function that will return the resource to the pool if invoked, which is\n   *                meant to be called on .dispose or .close or whatever mechanism the resource uses to finalize.\n   * @param {function(acquisitionContext: object, resource: object): boolean} validateOnAcquire\n   *                called at various times when an instance is acquired\n   *                If this returns false, the resource will be evicted\n   * @param {function(resource: object): boolean} validateOnRelease\n   *                called at various times when an instance is released\n   *                If this returns false, the resource will be evicted\n   * @param {function(resource: object): Promise<void>} destroy\n   *                called with the resource when it is evicted from this pool\n   * @param {function(resource: object, observer: { onError }): void} installIdleObserver\n   *                called when the resource is released back to pool\n   * @param {function(resource: object): void} removeIdleObserver\n   *                called when the resource is acquired from the pool\n   * @param {PoolConfig} config configuration for the new driver.\n   * @param {Logger} log the driver logger.\n   */\n  function Pool(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.create,\n        create = _c === void 0 ? function (acquisitionContext, address, release) {\n      return Promise.resolve();\n    } : _c,\n        _d = _b.destroy,\n        destroy = _d === void 0 ? function (conn) {\n      return Promise.resolve();\n    } : _d,\n        _e = _b.validateOnAcquire,\n        validateOnAcquire = _e === void 0 ? function (acquisitionContext, conn) {\n      return true;\n    } : _e,\n        _f = _b.validateOnRelease,\n        validateOnRelease = _f === void 0 ? function (conn) {\n      return true;\n    } : _f,\n        _g = _b.installIdleObserver,\n        installIdleObserver = _g === void 0 ? function (conn, observer) {} : _g,\n        _h = _b.removeIdleObserver,\n        removeIdleObserver = _h === void 0 ? function (conn) {} : _h,\n        _j = _b.config,\n        config = _j === void 0 ? pool_config_1.default.defaultConfig() : _j,\n        _k = _b.log,\n        log = _k === void 0 ? Logger.noOp() : _k;\n\n    this._create = create;\n    this._destroy = destroy;\n    this._validateOnAcquire = validateOnAcquire;\n    this._validateOnRelease = validateOnRelease;\n    this._installIdleObserver = installIdleObserver;\n    this._removeIdleObserver = removeIdleObserver;\n    this._maxSize = config.maxSize;\n    this._acquisitionTimeout = config.acquisitionTimeout;\n    this._pools = {};\n    this._pendingCreates = {};\n    this._acquireRequests = {};\n    this._activeResourceCounts = {};\n    this._release = this._release.bind(this);\n    this._log = log;\n    this._closed = false;\n  }\n  /**\n   * Acquire and idle resource fom the pool or create a new one.\n   * @param {object} acquisitionContext the acquisition context used for create and validateOnAcquire connection\n   * @param {ServerAddress} address the address for which we're acquiring.\n   * @param {object} config the config\n   * @param {boolean} config.requireNew Indicate it requires a new resource\n   * @return {Promise<Object>} resource that is ready to use.\n   */\n\n\n  Pool.prototype.acquire = function (acquisitionContext, address, config) {\n    var _this = this;\n\n    var key = address.asKey(); // We're out of resources and will try to acquire later on when an existing resource is released.\n\n    var allRequests = this._acquireRequests;\n    var requests = allRequests[key];\n\n    if (!requests) {\n      allRequests[key] = [];\n    }\n\n    return new Promise(function (resolve, reject) {\n      var request = null;\n      var timeoutId = setTimeout(function () {\n        // acquisition timeout fired\n        // remove request from the queue of pending requests, if it's still there\n        // request might've been taken out by the release operation\n        var pendingRequests = allRequests[key];\n\n        if (pendingRequests) {\n          allRequests[key] = pendingRequests.filter(function (item) {\n            return item !== request;\n          });\n        }\n\n        if (request.isCompleted()) {// request already resolved/rejected by the release operation; nothing to do\n        } else {\n          // request is still pending and needs to be failed\n          var activeCount = _this.activeResourceCount(address);\n\n          var idleCount = _this.has(address) ? _this._pools[key].length : 0;\n          request.reject((0, neo4j_driver_core_1.newError)(\"Connection acquisition timed out in \".concat(_this._acquisitionTimeout, \" ms. Pool status: Active conn count = \").concat(activeCount, \", Idle conn count = \").concat(idleCount, \".\")));\n        }\n      }, _this._acquisitionTimeout);\n      request = new PendingRequest(key, acquisitionContext, config, resolve, reject, timeoutId, _this._log);\n      allRequests[key].push(request);\n\n      _this._processPendingAcquireRequests(address);\n    });\n  };\n  /**\n   * Destroy all idle resources for the given address.\n   * @param {ServerAddress} address the address of the server to purge its pool.\n   * @returns {Promise<void>} A promise that is resolved when the resources are purged\n   */\n\n\n  Pool.prototype.purge = function (address) {\n    return this._purgeKey(address.asKey());\n  };\n\n  Pool.prototype.apply = function (address, resourceConsumer) {\n    var key = address.asKey();\n\n    if (key in this._pools) {\n      this._pools[key].apply(resourceConsumer);\n    }\n  };\n  /**\n   * Destroy all idle resources in this pool.\n   * @returns {Promise<void>} A promise that is resolved when the resources are purged\n   */\n\n\n  Pool.prototype.close = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this._closed = true;\n            return [4\n            /*yield*/\n            , Promise.all(Object.keys(this._pools).map(function (key) {\n              return _this._purgeKey(key);\n            }))];\n\n          case 1:\n            /**\n             * The lack of Promise consuming was making the driver do not close properly in the scenario\n             * captured at result.test.js:it('should handle missing onCompleted'). The test was timing out\n             * because while wainting for the driver close.\n             *\n             * Consuming the Promise.all or by calling then or by awaiting in the result inside this method solved\n             * the issue somehow.\n             *\n             * PS: the return of this method was already awaited at PooledConnectionProvider.close, but the await bellow\n             * seems to be need also.\n             */\n            return [2\n            /*return*/\n            , _a.sent()];\n        }\n      });\n    });\n  };\n  /**\n   * Keep the idle resources for the provided addresses and purge the rest.\n   * @returns {Promise<void>} A promise that is resolved when the other resources are purged\n   */\n\n\n  Pool.prototype.keepAll = function (addresses) {\n    var _this = this;\n\n    var keysToKeep = addresses.map(function (a) {\n      return a.asKey();\n    });\n    var keysPresent = Object.keys(this._pools);\n    var keysToPurge = keysPresent.filter(function (k) {\n      return keysToKeep.indexOf(k) === -1;\n    });\n    return Promise.all(keysToPurge.map(function (key) {\n      return _this._purgeKey(key);\n    }));\n  };\n  /**\n   * Check if this pool contains resources for the given address.\n   * @param {ServerAddress} address the address of the server to check.\n   * @return {boolean} `true` when pool contains entries for the given key, <code>false</code> otherwise.\n   */\n\n\n  Pool.prototype.has = function (address) {\n    return address.asKey() in this._pools;\n  };\n  /**\n   * Get count of active (checked out of the pool) resources for the given key.\n   * @param {ServerAddress} address the address of the server to check.\n   * @return {number} count of resources acquired by clients.\n   */\n\n\n  Pool.prototype.activeResourceCount = function (address) {\n    return this._activeResourceCounts[address.asKey()] || 0;\n  };\n\n  Pool.prototype._getOrInitializePoolFor = function (key) {\n    var pool = this._pools[key];\n\n    if (!pool) {\n      pool = new SingleAddressPool();\n      this._pools[key] = pool;\n      this._pendingCreates[key] = 0;\n    }\n\n    return pool;\n  };\n\n  Pool.prototype._acquire = function (acquisitionContext, address, requireNew) {\n    return __awaiter(this, void 0, void 0, function () {\n      var key, pool, resource_1, numConnections, resource, numConnections, resource_2;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._closed) {\n              throw (0, neo4j_driver_core_1.newError)('Pool is closed, it is no more able to serve requests.');\n            }\n\n            key = address.asKey();\n            pool = this._getOrInitializePoolFor(key);\n            if (!!requireNew) return [3\n            /*break*/\n            , 6];\n            _a.label = 1;\n\n          case 1:\n            if (!pool.length) return [3\n            /*break*/\n            , 6];\n            resource_1 = pool.pop();\n\n            if (this._removeIdleObserver) {\n              this._removeIdleObserver(resource_1);\n            }\n\n            return [4\n            /*yield*/\n            , this._validateOnAcquire(acquisitionContext, resource_1)];\n\n          case 2:\n            if (!_a.sent()) return [3\n            /*break*/\n            , 3]; // idle resource is valid and can be acquired\n\n            resourceAcquired(key, this._activeResourceCounts);\n\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\"\".concat(resource_1, \" acquired from the pool \").concat(key));\n            }\n\n            return [2\n            /*return*/\n            , {\n              resource: resource_1,\n              pool: pool\n            }];\n\n          case 3:\n            pool.removeInUse(resource_1);\n            return [4\n            /*yield*/\n            , this._destroy(resource_1)];\n\n          case 4:\n            _a.sent();\n\n            _a.label = 5;\n\n          case 5:\n            return [3\n            /*break*/\n            , 1];\n\n          case 6:\n            // Ensure requested max pool size\n            if (this._maxSize > 0) {\n              numConnections = this.activeResourceCount(address) + this._pendingCreates[key];\n\n              if (numConnections >= this._maxSize) {\n                // Will put this request in queue instead since the pool is full\n                return [2\n                /*return*/\n                , {\n                  resource: null,\n                  pool: pool\n                }];\n              }\n            } // there exist no idle valid resources, create a new one for acquisition\n            // Keep track of how many pending creates there are to avoid making too many connections.\n\n\n            this._pendingCreates[key] = this._pendingCreates[key] + 1;\n            _a.label = 7;\n\n          case 7:\n            _a.trys.push([7,, 11, 12]);\n\n            numConnections = this.activeResourceCount(address) + pool.length;\n            if (!(numConnections >= this._maxSize && requireNew)) return [3\n            /*break*/\n            , 9];\n            resource_2 = pool.pop();\n\n            if (this._removeIdleObserver) {\n              this._removeIdleObserver(resource_2);\n            }\n\n            pool.removeInUse(resource_2);\n            return [4\n            /*yield*/\n            , this._destroy(resource_2)];\n\n          case 8:\n            _a.sent();\n\n            _a.label = 9;\n\n          case 9:\n            return [4\n            /*yield*/\n            , this._create(acquisitionContext, address, function (address, resource) {\n              return _this._release(address, resource, pool);\n            })];\n\n          case 10:\n            // Invoke callback that creates actual connection\n            resource = _a.sent();\n            pool.pushInUse(resource);\n            resourceAcquired(key, this._activeResourceCounts);\n\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\"\".concat(resource, \" created for the pool \").concat(key));\n            }\n\n            return [3\n            /*break*/\n            , 12];\n\n          case 11:\n            this._pendingCreates[key] = this._pendingCreates[key] - 1;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 12:\n            return [2\n            /*return*/\n            , {\n              resource: resource,\n              pool: pool\n            }];\n        }\n      });\n    });\n  };\n\n  Pool.prototype._release = function (address, resource, pool) {\n    return __awaiter(this, void 0, void 0, function () {\n      var key;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            key = address.asKey();\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1,, 9, 10]);\n\n            if (!pool.isActive()) return [3\n            /*break*/\n            , 6];\n            return [4\n            /*yield*/\n            , this._validateOnRelease(resource)];\n\n          case 2:\n            if (!!_a.sent()) return [3\n            /*break*/\n            , 4];\n\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because it is not functional\"));\n            }\n\n            pool.removeInUse(resource);\n            return [4\n            /*yield*/\n            , this._destroy(resource)];\n\n          case 3:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 4:\n            if (this._installIdleObserver) {\n              this._installIdleObserver(resource, {\n                onError: function (error) {\n                  _this._log.debug(\"Idle connection \".concat(resource, \" destroyed because of error: \").concat(error));\n\n                  var pool = _this._pools[key];\n\n                  if (pool) {\n                    _this._pools[key] = pool.filter(function (r) {\n                      return r !== resource;\n                    });\n                    pool.removeInUse(resource);\n                  } // let's not care about background clean-ups due to errors but just trigger the destroy\n                  // process for the resource, we especially catch any errors and ignore them to avoid\n                  // unhandled promise rejection warnings\n\n\n                  _this._destroy(resource).catch(function () {});\n                }\n              });\n            }\n\n            pool.push(resource);\n\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\"\".concat(resource, \" released to the pool \").concat(key));\n            }\n\n            _a.label = 5;\n\n          case 5:\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            // key has been purged, don't put it back, just destroy the resource\n            if (this._log.isDebugEnabled()) {\n              this._log.debug(\"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because pool has been purged\"));\n            }\n\n            pool.removeInUse(resource);\n            return [4\n            /*yield*/\n            , this._destroy(resource)];\n\n          case 7:\n            _a.sent();\n\n            _a.label = 8;\n\n          case 8:\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            resourceReleased(key, this._activeResourceCounts);\n\n            this._processPendingAcquireRequests(address);\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Pool.prototype._purgeKey = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var pool, destructionList, resource;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            pool = this._pools[key];\n            destructionList = [];\n            if (!pool) return [3\n            /*break*/\n            , 2];\n\n            while (pool.length) {\n              resource = pool.pop();\n\n              if (this._removeIdleObserver) {\n                this._removeIdleObserver(resource);\n              }\n\n              destructionList.push(this._destroy(resource));\n            }\n\n            pool.close();\n            delete this._pools[key];\n            return [4\n            /*yield*/\n            , Promise.all(destructionList)];\n\n          case 1:\n            _a.sent();\n\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  Pool.prototype._processPendingAcquireRequests = function (address) {\n    var _this = this;\n\n    var key = address.asKey();\n    var requests = this._acquireRequests[key];\n\n    if (requests) {\n      var pendingRequest_1 = requests.shift(); // pop a pending acquire request\n\n      if (pendingRequest_1) {\n        this._acquire(pendingRequest_1.context, address, pendingRequest_1.requireNew).catch(function (error) {\n          // failed to acquire/create a new connection to resolve the pending acquire request\n          // propagate the error by failing the pending request\n          pendingRequest_1.reject(error);\n          return {\n            resource: null\n          };\n        }).then(function (_a) {\n          var resource = _a.resource,\n              pool = _a.pool;\n\n          if (resource) {\n            // managed to acquire a valid resource from the pool\n            if (pendingRequest_1.isCompleted()) {\n              // request has been completed, most likely failed by a timeout\n              // return the acquired resource back to the pool\n              _this._release(address, resource, pool);\n            } else {\n              // request is still pending and can be resolved with the newly acquired resource\n              pendingRequest_1.resolve(resource); // resolve the pending request with the acquired resource\n            }\n          } else {\n            // failed to acquire a valid resource from the pool\n            // return the pending request back to the pool\n            if (!pendingRequest_1.isCompleted()) {\n              if (!_this._acquireRequests[key]) {\n                _this._acquireRequests[key] = [];\n              }\n\n              _this._acquireRequests[key].unshift(pendingRequest_1);\n            }\n          }\n        });\n      } else {\n        delete this._acquireRequests[key];\n      }\n    }\n  };\n\n  return Pool;\n}();\n/**\n * Increment active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\n\n\nfunction resourceAcquired(key, activeResourceCounts) {\n  var currentCount = activeResourceCounts[key] || 0;\n  activeResourceCounts[key] = currentCount + 1;\n}\n/**\n * Decrement active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\n\n\nfunction resourceReleased(key, activeResourceCounts) {\n  var currentCount = activeResourceCounts[key] || 0;\n  var nextCount = currentCount - 1;\n\n  if (nextCount > 0) {\n    activeResourceCounts[key] = nextCount;\n  } else {\n    delete activeResourceCounts[key];\n  }\n}\n\nvar PendingRequest =\n/** @class */\nfunction () {\n  function PendingRequest(key, context, config, resolve, reject, timeoutId, log) {\n    this._key = key;\n    this._context = context;\n    this._resolve = resolve;\n    this._reject = reject;\n    this._timeoutId = timeoutId;\n    this._log = log;\n    this._completed = false;\n    this._config = config || {};\n  }\n\n  Object.defineProperty(PendingRequest.prototype, \"context\", {\n    get: function () {\n      return this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PendingRequest.prototype, \"requireNew\", {\n    get: function () {\n      return this._config.requireNew || false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PendingRequest.prototype.isCompleted = function () {\n    return this._completed;\n  };\n\n  PendingRequest.prototype.resolve = function (resource) {\n    if (this._completed) {\n      return;\n    }\n\n    this._completed = true;\n    clearTimeout(this._timeoutId);\n\n    if (this._log.isDebugEnabled()) {\n      this._log.debug(\"\".concat(resource, \" acquired from the pool \").concat(this._key));\n    }\n\n    this._resolve(resource);\n  };\n\n  PendingRequest.prototype.reject = function (error) {\n    if (this._completed) {\n      return;\n    }\n\n    this._completed = true;\n    clearTimeout(this._timeoutId);\n\n    this._reject(error);\n  };\n\n  return PendingRequest;\n}();\n\nvar SingleAddressPool =\n/** @class */\nfunction () {\n  function SingleAddressPool() {\n    this._active = true;\n    this._elements = [];\n    this._elementsInUse = new Set();\n  }\n\n  SingleAddressPool.prototype.isActive = function () {\n    return this._active;\n  };\n\n  SingleAddressPool.prototype.close = function () {\n    this._active = false;\n    this._elements = [];\n    this._elementsInUse = new Set();\n  };\n\n  SingleAddressPool.prototype.filter = function (predicate) {\n    this._elements = this._elements.filter(predicate);\n    return this;\n  };\n\n  SingleAddressPool.prototype.apply = function (resourceConsumer) {\n    this._elements.forEach(resourceConsumer);\n\n    this._elementsInUse.forEach(resourceConsumer);\n  };\n\n  Object.defineProperty(SingleAddressPool.prototype, \"length\", {\n    get: function () {\n      return this._elements.length;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SingleAddressPool.prototype.pop = function () {\n    var element = this._elements.pop();\n\n    this._elementsInUse.add(element);\n\n    return element;\n  };\n\n  SingleAddressPool.prototype.push = function (element) {\n    this._elementsInUse.delete(element);\n\n    return this._elements.push(element);\n  };\n\n  SingleAddressPool.prototype.pushInUse = function (element) {\n    this._elementsInUse.add(element);\n  };\n\n  SingleAddressPool.prototype.removeInUse = function (element) {\n    this._elementsInUse.delete(element);\n  };\n\n  return SingleAddressPool;\n}();\n\nexports.default = Pool;","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","_","label","sent","t","trys","ops","f","y","g","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","__importDefault","mod","__esModule","Object","defineProperty","exports","pool_config_1","require","neo4j_driver_core_1","Logger","internal","logger","Pool","_a","_b","_c","create","acquisitionContext","address","release","_d","destroy","conn","_e","validateOnAcquire","_f","validateOnRelease","_g","installIdleObserver","observer","_h","removeIdleObserver","_j","config","default","defaultConfig","_k","log","noOp","_create","_destroy","_validateOnAcquire","_validateOnRelease","_installIdleObserver","_removeIdleObserver","_maxSize","maxSize","_acquisitionTimeout","acquisitionTimeout","_pools","_pendingCreates","_acquireRequests","_activeResourceCounts","_release","bind","_log","_closed","prototype","acquire","_this","key","asKey","allRequests","requests","request","timeoutId","setTimeout","pendingRequests","filter","item","isCompleted","activeCount","activeResourceCount","idleCount","has","newError","concat","PendingRequest","_processPendingAcquireRequests","purge","_purgeKey","resourceConsumer","close","all","keys","map","keepAll","addresses","keysToKeep","a","keysPresent","keysToPurge","k","indexOf","_getOrInitializePoolFor","pool","SingleAddressPool","_acquire","requireNew","resource_1","numConnections","resource","resource_2","resourceAcquired","isDebugEnabled","debug","removeInUse","pushInUse","isActive","onError","error","r","catch","resourceReleased","destructionList","pendingRequest_1","shift","context","unshift","activeResourceCounts","currentCount","nextCount","_key","_context","_resolve","_reject","_timeoutId","_completed","_config","get","enumerable","configurable","clearTimeout","_active","_elements","_elementsInUse","Set","predicate","forEach","element","add","delete"],"sources":["C:/projects/levelUp_v1/Level-Up-FN/Level-Up-Fronten-master/node_modules/neo4j-driver-bolt-connection/lib/pool/pool.js"],"sourcesContent":["\"use strict\";\n/**\n * Copyright (c) \"Neo4j\"\n * Neo4j Sweden AB [https://neo4j.com]\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pool_config_1 = __importDefault(require(\"./pool-config\"));\nvar neo4j_driver_core_1 = require(\"neo4j-driver-core\");\nvar Logger = neo4j_driver_core_1.internal.logger.Logger;\nvar Pool = /** @class */ (function () {\n    /**\n     * @param {function(acquisitionContext: object, address: ServerAddress, function(address: ServerAddress, resource: object): Promise<object>): Promise<object>} create\n     *                an allocation function that creates a promise with a new resource. It's given an address for which to\n     *                allocate the connection and a function that will return the resource to the pool if invoked, which is\n     *                meant to be called on .dispose or .close or whatever mechanism the resource uses to finalize.\n     * @param {function(acquisitionContext: object, resource: object): boolean} validateOnAcquire\n     *                called at various times when an instance is acquired\n     *                If this returns false, the resource will be evicted\n     * @param {function(resource: object): boolean} validateOnRelease\n     *                called at various times when an instance is released\n     *                If this returns false, the resource will be evicted\n     * @param {function(resource: object): Promise<void>} destroy\n     *                called with the resource when it is evicted from this pool\n     * @param {function(resource: object, observer: { onError }): void} installIdleObserver\n     *                called when the resource is released back to pool\n     * @param {function(resource: object): void} removeIdleObserver\n     *                called when the resource is acquired from the pool\n     * @param {PoolConfig} config configuration for the new driver.\n     * @param {Logger} log the driver logger.\n     */\n    function Pool(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.create, create = _c === void 0 ? function (acquisitionContext, address, release) { return Promise.resolve(); } : _c, _d = _b.destroy, destroy = _d === void 0 ? function (conn) { return Promise.resolve(); } : _d, _e = _b.validateOnAcquire, validateOnAcquire = _e === void 0 ? function (acquisitionContext, conn) { return true; } : _e, _f = _b.validateOnRelease, validateOnRelease = _f === void 0 ? function (conn) { return true; } : _f, _g = _b.installIdleObserver, installIdleObserver = _g === void 0 ? function (conn, observer) { } : _g, _h = _b.removeIdleObserver, removeIdleObserver = _h === void 0 ? function (conn) { } : _h, _j = _b.config, config = _j === void 0 ? pool_config_1.default.defaultConfig() : _j, _k = _b.log, log = _k === void 0 ? Logger.noOp() : _k;\n        this._create = create;\n        this._destroy = destroy;\n        this._validateOnAcquire = validateOnAcquire;\n        this._validateOnRelease = validateOnRelease;\n        this._installIdleObserver = installIdleObserver;\n        this._removeIdleObserver = removeIdleObserver;\n        this._maxSize = config.maxSize;\n        this._acquisitionTimeout = config.acquisitionTimeout;\n        this._pools = {};\n        this._pendingCreates = {};\n        this._acquireRequests = {};\n        this._activeResourceCounts = {};\n        this._release = this._release.bind(this);\n        this._log = log;\n        this._closed = false;\n    }\n    /**\n     * Acquire and idle resource fom the pool or create a new one.\n     * @param {object} acquisitionContext the acquisition context used for create and validateOnAcquire connection\n     * @param {ServerAddress} address the address for which we're acquiring.\n     * @param {object} config the config\n     * @param {boolean} config.requireNew Indicate it requires a new resource\n     * @return {Promise<Object>} resource that is ready to use.\n     */\n    Pool.prototype.acquire = function (acquisitionContext, address, config) {\n        var _this = this;\n        var key = address.asKey();\n        // We're out of resources and will try to acquire later on when an existing resource is released.\n        var allRequests = this._acquireRequests;\n        var requests = allRequests[key];\n        if (!requests) {\n            allRequests[key] = [];\n        }\n        return new Promise(function (resolve, reject) {\n            var request = null;\n            var timeoutId = setTimeout(function () {\n                // acquisition timeout fired\n                // remove request from the queue of pending requests, if it's still there\n                // request might've been taken out by the release operation\n                var pendingRequests = allRequests[key];\n                if (pendingRequests) {\n                    allRequests[key] = pendingRequests.filter(function (item) { return item !== request; });\n                }\n                if (request.isCompleted()) {\n                    // request already resolved/rejected by the release operation; nothing to do\n                }\n                else {\n                    // request is still pending and needs to be failed\n                    var activeCount = _this.activeResourceCount(address);\n                    var idleCount = _this.has(address) ? _this._pools[key].length : 0;\n                    request.reject((0, neo4j_driver_core_1.newError)(\"Connection acquisition timed out in \".concat(_this._acquisitionTimeout, \" ms. Pool status: Active conn count = \").concat(activeCount, \", Idle conn count = \").concat(idleCount, \".\")));\n                }\n            }, _this._acquisitionTimeout);\n            request = new PendingRequest(key, acquisitionContext, config, resolve, reject, timeoutId, _this._log);\n            allRequests[key].push(request);\n            _this._processPendingAcquireRequests(address);\n        });\n    };\n    /**\n     * Destroy all idle resources for the given address.\n     * @param {ServerAddress} address the address of the server to purge its pool.\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\n     */\n    Pool.prototype.purge = function (address) {\n        return this._purgeKey(address.asKey());\n    };\n    Pool.prototype.apply = function (address, resourceConsumer) {\n        var key = address.asKey();\n        if (key in this._pools) {\n            this._pools[key].apply(resourceConsumer);\n        }\n    };\n    /**\n     * Destroy all idle resources in this pool.\n     * @returns {Promise<void>} A promise that is resolved when the resources are purged\n     */\n    Pool.prototype.close = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._closed = true;\n                        return [4 /*yield*/, Promise.all(Object.keys(this._pools).map(function (key) { return _this._purgeKey(key); }))];\n                    case 1: \n                    /**\n                     * The lack of Promise consuming was making the driver do not close properly in the scenario\n                     * captured at result.test.js:it('should handle missing onCompleted'). The test was timing out\n                     * because while wainting for the driver close.\n                     *\n                     * Consuming the Promise.all or by calling then or by awaiting in the result inside this method solved\n                     * the issue somehow.\n                     *\n                     * PS: the return of this method was already awaited at PooledConnectionProvider.close, but the await bellow\n                     * seems to be need also.\n                     */\n                    return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    /**\n     * Keep the idle resources for the provided addresses and purge the rest.\n     * @returns {Promise<void>} A promise that is resolved when the other resources are purged\n     */\n    Pool.prototype.keepAll = function (addresses) {\n        var _this = this;\n        var keysToKeep = addresses.map(function (a) { return a.asKey(); });\n        var keysPresent = Object.keys(this._pools);\n        var keysToPurge = keysPresent.filter(function (k) { return keysToKeep.indexOf(k) === -1; });\n        return Promise.all(keysToPurge.map(function (key) { return _this._purgeKey(key); }));\n    };\n    /**\n     * Check if this pool contains resources for the given address.\n     * @param {ServerAddress} address the address of the server to check.\n     * @return {boolean} `true` when pool contains entries for the given key, <code>false</code> otherwise.\n     */\n    Pool.prototype.has = function (address) {\n        return address.asKey() in this._pools;\n    };\n    /**\n     * Get count of active (checked out of the pool) resources for the given key.\n     * @param {ServerAddress} address the address of the server to check.\n     * @return {number} count of resources acquired by clients.\n     */\n    Pool.prototype.activeResourceCount = function (address) {\n        return this._activeResourceCounts[address.asKey()] || 0;\n    };\n    Pool.prototype._getOrInitializePoolFor = function (key) {\n        var pool = this._pools[key];\n        if (!pool) {\n            pool = new SingleAddressPool();\n            this._pools[key] = pool;\n            this._pendingCreates[key] = 0;\n        }\n        return pool;\n    };\n    Pool.prototype._acquire = function (acquisitionContext, address, requireNew) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key, pool, resource_1, numConnections, resource, numConnections, resource_2;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this._closed) {\n                            throw (0, neo4j_driver_core_1.newError)('Pool is closed, it is no more able to serve requests.');\n                        }\n                        key = address.asKey();\n                        pool = this._getOrInitializePoolFor(key);\n                        if (!!requireNew) return [3 /*break*/, 6];\n                        _a.label = 1;\n                    case 1:\n                        if (!pool.length) return [3 /*break*/, 6];\n                        resource_1 = pool.pop();\n                        if (this._removeIdleObserver) {\n                            this._removeIdleObserver(resource_1);\n                        }\n                        return [4 /*yield*/, this._validateOnAcquire(acquisitionContext, resource_1)];\n                    case 2:\n                        if (!_a.sent()) return [3 /*break*/, 3];\n                        // idle resource is valid and can be acquired\n                        resourceAcquired(key, this._activeResourceCounts);\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource_1, \" acquired from the pool \").concat(key));\n                        }\n                        return [2 /*return*/, { resource: resource_1, pool: pool }];\n                    case 3:\n                        pool.removeInUse(resource_1);\n                        return [4 /*yield*/, this._destroy(resource_1)];\n                    case 4:\n                        _a.sent();\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 1];\n                    case 6:\n                        // Ensure requested max pool size\n                        if (this._maxSize > 0) {\n                            numConnections = this.activeResourceCount(address) + this._pendingCreates[key];\n                            if (numConnections >= this._maxSize) {\n                                // Will put this request in queue instead since the pool is full\n                                return [2 /*return*/, { resource: null, pool: pool }];\n                            }\n                        }\n                        // there exist no idle valid resources, create a new one for acquisition\n                        // Keep track of how many pending creates there are to avoid making too many connections.\n                        this._pendingCreates[key] = this._pendingCreates[key] + 1;\n                        _a.label = 7;\n                    case 7:\n                        _a.trys.push([7, , 11, 12]);\n                        numConnections = this.activeResourceCount(address) + pool.length;\n                        if (!(numConnections >= this._maxSize && requireNew)) return [3 /*break*/, 9];\n                        resource_2 = pool.pop();\n                        if (this._removeIdleObserver) {\n                            this._removeIdleObserver(resource_2);\n                        }\n                        pool.removeInUse(resource_2);\n                        return [4 /*yield*/, this._destroy(resource_2)];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9: return [4 /*yield*/, this._create(acquisitionContext, address, function (address, resource) { return _this._release(address, resource, pool); })];\n                    case 10:\n                        // Invoke callback that creates actual connection\n                        resource = _a.sent();\n                        pool.pushInUse(resource);\n                        resourceAcquired(key, this._activeResourceCounts);\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" created for the pool \").concat(key));\n                        }\n                        return [3 /*break*/, 12];\n                    case 11:\n                        this._pendingCreates[key] = this._pendingCreates[key] - 1;\n                        return [7 /*endfinally*/];\n                    case 12: return [2 /*return*/, { resource: resource, pool: pool }];\n                }\n            });\n        });\n    };\n    Pool.prototype._release = function (address, resource, pool) {\n        return __awaiter(this, void 0, void 0, function () {\n            var key;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        key = address.asKey();\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, , 9, 10]);\n                        if (!pool.isActive()) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._validateOnRelease(resource)];\n                    case 2:\n                        if (!!(_a.sent())) return [3 /*break*/, 4];\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because it is not functional\"));\n                        }\n                        pool.removeInUse(resource);\n                        return [4 /*yield*/, this._destroy(resource)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        if (this._installIdleObserver) {\n                            this._installIdleObserver(resource, {\n                                onError: function (error) {\n                                    _this._log.debug(\"Idle connection \".concat(resource, \" destroyed because of error: \").concat(error));\n                                    var pool = _this._pools[key];\n                                    if (pool) {\n                                        _this._pools[key] = pool.filter(function (r) { return r !== resource; });\n                                        pool.removeInUse(resource);\n                                    }\n                                    // let's not care about background clean-ups due to errors but just trigger the destroy\n                                    // process for the resource, we especially catch any errors and ignore them to avoid\n                                    // unhandled promise rejection warnings\n                                    _this._destroy(resource).catch(function () { });\n                                }\n                            });\n                        }\n                        pool.push(resource);\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" released to the pool \").concat(key));\n                        }\n                        _a.label = 5;\n                    case 5: return [3 /*break*/, 8];\n                    case 6:\n                        // key has been purged, don't put it back, just destroy the resource\n                        if (this._log.isDebugEnabled()) {\n                            this._log.debug(\"\".concat(resource, \" destroyed and can't be released to the pool \").concat(key, \" because pool has been purged\"));\n                        }\n                        pool.removeInUse(resource);\n                        return [4 /*yield*/, this._destroy(resource)];\n                    case 7:\n                        _a.sent();\n                        _a.label = 8;\n                    case 8: return [3 /*break*/, 10];\n                    case 9:\n                        resourceReleased(key, this._activeResourceCounts);\n                        this._processPendingAcquireRequests(address);\n                        return [7 /*endfinally*/];\n                    case 10: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Pool.prototype._purgeKey = function (key) {\n        return __awaiter(this, void 0, void 0, function () {\n            var pool, destructionList, resource;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        pool = this._pools[key];\n                        destructionList = [];\n                        if (!pool) return [3 /*break*/, 2];\n                        while (pool.length) {\n                            resource = pool.pop();\n                            if (this._removeIdleObserver) {\n                                this._removeIdleObserver(resource);\n                            }\n                            destructionList.push(this._destroy(resource));\n                        }\n                        pool.close();\n                        delete this._pools[key];\n                        return [4 /*yield*/, Promise.all(destructionList)];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Pool.prototype._processPendingAcquireRequests = function (address) {\n        var _this = this;\n        var key = address.asKey();\n        var requests = this._acquireRequests[key];\n        if (requests) {\n            var pendingRequest_1 = requests.shift(); // pop a pending acquire request\n            if (pendingRequest_1) {\n                this._acquire(pendingRequest_1.context, address, pendingRequest_1.requireNew)\n                    .catch(function (error) {\n                    // failed to acquire/create a new connection to resolve the pending acquire request\n                    // propagate the error by failing the pending request\n                    pendingRequest_1.reject(error);\n                    return { resource: null };\n                })\n                    .then(function (_a) {\n                    var resource = _a.resource, pool = _a.pool;\n                    if (resource) {\n                        // managed to acquire a valid resource from the pool\n                        if (pendingRequest_1.isCompleted()) {\n                            // request has been completed, most likely failed by a timeout\n                            // return the acquired resource back to the pool\n                            _this._release(address, resource, pool);\n                        }\n                        else {\n                            // request is still pending and can be resolved with the newly acquired resource\n                            pendingRequest_1.resolve(resource); // resolve the pending request with the acquired resource\n                        }\n                    }\n                    else {\n                        // failed to acquire a valid resource from the pool\n                        // return the pending request back to the pool\n                        if (!pendingRequest_1.isCompleted()) {\n                            if (!_this._acquireRequests[key]) {\n                                _this._acquireRequests[key] = [];\n                            }\n                            _this._acquireRequests[key].unshift(pendingRequest_1);\n                        }\n                    }\n                });\n            }\n            else {\n                delete this._acquireRequests[key];\n            }\n        }\n    };\n    return Pool;\n}());\n/**\n * Increment active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceAcquired(key, activeResourceCounts) {\n    var currentCount = activeResourceCounts[key] || 0;\n    activeResourceCounts[key] = currentCount + 1;\n}\n/**\n * Decrement active (checked out of the pool) resource counter.\n * @param {string} key the resource group identifier (server address for connections).\n * @param {Object.<string, number>} activeResourceCounts the object holding active counts per key.\n */\nfunction resourceReleased(key, activeResourceCounts) {\n    var currentCount = activeResourceCounts[key] || 0;\n    var nextCount = currentCount - 1;\n    if (nextCount > 0) {\n        activeResourceCounts[key] = nextCount;\n    }\n    else {\n        delete activeResourceCounts[key];\n    }\n}\nvar PendingRequest = /** @class */ (function () {\n    function PendingRequest(key, context, config, resolve, reject, timeoutId, log) {\n        this._key = key;\n        this._context = context;\n        this._resolve = resolve;\n        this._reject = reject;\n        this._timeoutId = timeoutId;\n        this._log = log;\n        this._completed = false;\n        this._config = config || {};\n    }\n    Object.defineProperty(PendingRequest.prototype, \"context\", {\n        get: function () {\n            return this._context;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PendingRequest.prototype, \"requireNew\", {\n        get: function () {\n            return this._config.requireNew || false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PendingRequest.prototype.isCompleted = function () {\n        return this._completed;\n    };\n    PendingRequest.prototype.resolve = function (resource) {\n        if (this._completed) {\n            return;\n        }\n        this._completed = true;\n        clearTimeout(this._timeoutId);\n        if (this._log.isDebugEnabled()) {\n            this._log.debug(\"\".concat(resource, \" acquired from the pool \").concat(this._key));\n        }\n        this._resolve(resource);\n    };\n    PendingRequest.prototype.reject = function (error) {\n        if (this._completed) {\n            return;\n        }\n        this._completed = true;\n        clearTimeout(this._timeoutId);\n        this._reject(error);\n    };\n    return PendingRequest;\n}());\nvar SingleAddressPool = /** @class */ (function () {\n    function SingleAddressPool() {\n        this._active = true;\n        this._elements = [];\n        this._elementsInUse = new Set();\n    }\n    SingleAddressPool.prototype.isActive = function () {\n        return this._active;\n    };\n    SingleAddressPool.prototype.close = function () {\n        this._active = false;\n        this._elements = [];\n        this._elementsInUse = new Set();\n    };\n    SingleAddressPool.prototype.filter = function (predicate) {\n        this._elements = this._elements.filter(predicate);\n        return this;\n    };\n    SingleAddressPool.prototype.apply = function (resourceConsumer) {\n        this._elements.forEach(resourceConsumer);\n        this._elementsInUse.forEach(resourceConsumer);\n    };\n    Object.defineProperty(SingleAddressPool.prototype, \"length\", {\n        get: function () {\n            return this._elements.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SingleAddressPool.prototype.pop = function () {\n        var element = this._elements.pop();\n        this._elementsInUse.add(element);\n        return element;\n    };\n    SingleAddressPool.prototype.push = function (element) {\n        this._elementsInUse.delete(element);\n        return this._elements.push(element);\n    };\n    SingleAddressPool.prototype.pushInUse = function (element) {\n        this._elementsInUse.add(element);\n    };\n    SingleAddressPool.prototype.removeInUse = function (element) {\n        this._elementsInUse.delete(element);\n    };\n    return SingleAddressPool;\n}());\nexports.default = Pool;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;EACrF,SAASC,KAAT,CAAeC,KAAf,EAAsB;IAAE,OAAOA,KAAK,YAAYH,CAAjB,GAAqBG,KAArB,GAA6B,IAAIH,CAAJ,CAAM,UAAUI,OAAV,EAAmB;MAAEA,OAAO,CAACD,KAAD,CAAP;IAAiB,CAA5C,CAApC;EAAoF;;EAC5G,OAAO,KAAKH,CAAC,KAAKA,CAAC,GAAGK,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;IACvD,SAASC,SAAT,CAAmBJ,KAAnB,EAA0B;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAACQ,IAAV,CAAeN,KAAf,CAAD,CAAJ;MAA8B,CAApC,CAAqC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC3F,SAASC,QAAT,CAAkBR,KAAlB,EAAyB;MAAE,IAAI;QAAEK,IAAI,CAACP,SAAS,CAAC,OAAD,CAAT,CAAmBE,KAAnB,CAAD,CAAJ;MAAkC,CAAxC,CAAyC,OAAOO,CAAP,EAAU;QAAEJ,MAAM,CAACI,CAAD,CAAN;MAAY;IAAE;;IAC9F,SAASF,IAAT,CAAcI,MAAd,EAAsB;MAAEA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACT,KAAR,CAArB,GAAsCD,KAAK,CAACU,MAAM,CAACT,KAAR,CAAL,CAAoBW,IAApB,CAAyBP,SAAzB,EAAoCI,QAApC,CAAtC;IAAsF;;IAC9GH,IAAI,CAAC,CAACP,SAAS,GAAGA,SAAS,CAACc,KAAV,CAAgBjB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDU,IAAzD,EAAD,CAAJ;EACH,CALM,CAAP;AAMH,CARD;;AASA,IAAIO,WAAW,GAAI,QAAQ,KAAKA,WAAd,IAA8B,UAAUlB,OAAV,EAAmBmB,IAAnB,EAAyB;EACrE,IAAIC,CAAC,GAAG;IAAEC,KAAK,EAAE,CAAT;IAAYC,IAAI,EAAE,YAAW;MAAE,IAAIC,CAAC,CAAC,CAAD,CAAD,GAAO,CAAX,EAAc,MAAMA,CAAC,CAAC,CAAD,CAAP;MAAY,OAAOA,CAAC,CAAC,CAAD,CAAR;IAAc,CAAvE;IAAyEC,IAAI,EAAE,EAA/E;IAAmFC,GAAG,EAAE;EAAxF,CAAR;EAAA,IAAsGC,CAAtG;EAAA,IAAyGC,CAAzG;EAAA,IAA4GJ,CAA5G;EAAA,IAA+GK,CAA/G;EACA,OAAOA,CAAC,GAAG;IAAEjB,IAAI,EAAEkB,IAAI,CAAC,CAAD,CAAZ;IAAiB,SAASA,IAAI,CAAC,CAAD,CAA9B;IAAmC,UAAUA,IAAI,CAAC,CAAD;EAAjD,CAAJ,EAA4D,OAAOC,MAAP,KAAkB,UAAlB,KAAiCF,CAAC,CAACE,MAAM,CAACC,QAAR,CAAD,GAAqB,YAAW;IAAE,OAAO,IAAP;EAAc,CAAjF,CAA5D,EAAgJH,CAAvJ;;EACA,SAASC,IAAT,CAAcG,CAAd,EAAiB;IAAE,OAAO,UAAUC,CAAV,EAAa;MAAE,OAAOvB,IAAI,CAAC,CAACsB,CAAD,EAAIC,CAAJ,CAAD,CAAX;IAAsB,CAA5C;EAA+C;;EAClE,SAASvB,IAAT,CAAcwB,EAAd,EAAkB;IACd,IAAIR,CAAJ,EAAO,MAAM,IAAIS,SAAJ,CAAc,iCAAd,CAAN;;IACP,OAAOP,CAAC,KAAKA,CAAC,GAAG,CAAJ,EAAOM,EAAE,CAAC,CAAD,CAAF,KAAUd,CAAC,GAAG,CAAd,CAAZ,CAAD,EAAgCA,CAAvC,EAA0C,IAAI;MAC1C,IAAIM,CAAC,GAAG,CAAJ,EAAOC,CAAC,KAAKJ,CAAC,GAAGW,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAR,GAAYP,CAAC,CAAC,QAAD,CAAb,GAA0BO,EAAE,CAAC,CAAD,CAAF,GAAQP,CAAC,CAAC,OAAD,CAAD,KAAe,CAACJ,CAAC,GAAGI,CAAC,CAAC,QAAD,CAAN,KAAqBJ,CAAC,CAACa,IAAF,CAAOT,CAAP,CAArB,EAAgC,CAA/C,CAAR,GAA4DA,CAAC,CAAChB,IAAjG,CAAD,IAA2G,CAAC,CAACY,CAAC,GAAGA,CAAC,CAACa,IAAF,CAAOT,CAAP,EAAUO,EAAE,CAAC,CAAD,CAAZ,CAAL,EAAuBnB,IAA9I,EAAoJ,OAAOQ,CAAP;MACpJ,IAAII,CAAC,GAAG,CAAJ,EAAOJ,CAAX,EAAcW,EAAE,GAAG,CAACA,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAT,EAAYX,CAAC,CAAClB,KAAd,CAAL;;MACd,QAAQ6B,EAAE,CAAC,CAAD,CAAV;QACI,KAAK,CAAL;QAAQ,KAAK,CAAL;UAAQX,CAAC,GAAGW,EAAJ;UAAQ;;QACxB,KAAK,CAAL;UAAQd,CAAC,CAACC,KAAF;UAAW,OAAO;YAAEhB,KAAK,EAAE6B,EAAE,CAAC,CAAD,CAAX;YAAgBnB,IAAI,EAAE;UAAtB,CAAP;;QACnB,KAAK,CAAL;UAAQK,CAAC,CAACC,KAAF;UAAWM,CAAC,GAAGO,EAAE,CAAC,CAAD,CAAN;UAAWA,EAAE,GAAG,CAAC,CAAD,CAAL;UAAU;;QACxC,KAAK,CAAL;UAAQA,EAAE,GAAGd,CAAC,CAACK,GAAF,CAAMY,GAAN,EAAL;;UAAkBjB,CAAC,CAACI,IAAF,CAAOa,GAAP;;UAAc;;QACxC;UACI,IAAI,EAAEd,CAAC,GAAGH,CAAC,CAACI,IAAN,EAAYD,CAAC,GAAGA,CAAC,CAACe,MAAF,GAAW,CAAX,IAAgBf,CAAC,CAACA,CAAC,CAACe,MAAF,GAAW,CAAZ,CAAnC,MAAuDJ,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAeA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAhF,CAAJ,EAAwF;YAAEd,CAAC,GAAG,CAAJ;YAAO;UAAW;;UAC5G,IAAIc,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,KAAgB,CAACX,CAAD,IAAOW,EAAE,CAAC,CAAD,CAAF,GAAQX,CAAC,CAAC,CAAD,CAAT,IAAgBW,EAAE,CAAC,CAAD,CAAF,GAAQX,CAAC,CAAC,CAAD,CAAhD,CAAJ,EAA2D;YAAEH,CAAC,CAACC,KAAF,GAAUa,EAAE,CAAC,CAAD,CAAZ;YAAiB;UAAQ;;UACtF,IAAIA,EAAE,CAAC,CAAD,CAAF,KAAU,CAAV,IAAed,CAAC,CAACC,KAAF,GAAUE,CAAC,CAAC,CAAD,CAA9B,EAAmC;YAAEH,CAAC,CAACC,KAAF,GAAUE,CAAC,CAAC,CAAD,CAAX;YAAgBA,CAAC,GAAGW,EAAJ;YAAQ;UAAQ;;UACrE,IAAIX,CAAC,IAAIH,CAAC,CAACC,KAAF,GAAUE,CAAC,CAAC,CAAD,CAApB,EAAyB;YAAEH,CAAC,CAACC,KAAF,GAAUE,CAAC,CAAC,CAAD,CAAX;;YAAgBH,CAAC,CAACK,GAAF,CAAMc,IAAN,CAAWL,EAAX;;YAAgB;UAAQ;;UACnE,IAAIX,CAAC,CAAC,CAAD,CAAL,EAAUH,CAAC,CAACK,GAAF,CAAMY,GAAN;;UACVjB,CAAC,CAACI,IAAF,CAAOa,GAAP;;UAAc;MAXtB;;MAaAH,EAAE,GAAGf,IAAI,CAACiB,IAAL,CAAUpC,OAAV,EAAmBoB,CAAnB,CAAL;IACH,CAjByC,CAiBxC,OAAOR,CAAP,EAAU;MAAEsB,EAAE,GAAG,CAAC,CAAD,EAAItB,CAAJ,CAAL;MAAae,CAAC,GAAG,CAAJ;IAAQ,CAjBO,SAiBE;MAAED,CAAC,GAAGH,CAAC,GAAG,CAAR;IAAY;;IAC1D,IAAIW,EAAE,CAAC,CAAD,CAAF,GAAQ,CAAZ,EAAe,MAAMA,EAAE,CAAC,CAAD,CAAR;IAAa,OAAO;MAAE7B,KAAK,EAAE6B,EAAE,CAAC,CAAD,CAAF,GAAQA,EAAE,CAAC,CAAD,CAAV,GAAgB,KAAK,CAA9B;MAAiCnB,IAAI,EAAE;IAAvC,CAAP;EAC/B;AACJ,CA1BD;;AA2BA,IAAIyB,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;IAAE,WAAWA;EAAb,CAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAExC,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIyC,aAAa,GAAGN,eAAe,CAACO,OAAO,CAAC,eAAD,CAAR,CAAnC;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,mBAAD,CAAjC;;AACA,IAAIE,MAAM,GAAGD,mBAAmB,CAACE,QAApB,CAA6BC,MAA7B,CAAoCF,MAAjD;;AACA,IAAIG,IAAI;AAAG;AAAe,YAAY;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAASA,IAAT,CAAcC,EAAd,EAAkB;IACd,IAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,EAAhB,GAAqBA,EAA9B;IAAA,IAAkCE,EAAE,GAAGD,EAAE,CAACE,MAA1C;IAAA,IAAkDA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAUE,kBAAV,EAA8BC,OAA9B,EAAuCC,OAAvC,EAAgD;MAAE,OAAOpD,OAAO,CAACD,OAAR,EAAP;IAA2B,CAA7F,GAAgGiD,EAA3J;IAAA,IAA+JK,EAAE,GAAGN,EAAE,CAACO,OAAvK;IAAA,IAAgLA,OAAO,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAUE,IAAV,EAAgB;MAAE,OAAOvD,OAAO,CAACD,OAAR,EAAP;IAA2B,CAA7D,GAAgEsD,EAA1P;IAAA,IAA8PG,EAAE,GAAGT,EAAE,CAACU,iBAAtQ;IAAA,IAAyRA,iBAAiB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAUN,kBAAV,EAA8BK,IAA9B,EAAoC;MAAE,OAAO,IAAP;IAAc,CAApE,GAAuEC,EAApX;IAAA,IAAwXE,EAAE,GAAGX,EAAE,CAACY,iBAAhY;IAAA,IAAmZA,iBAAiB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAUH,IAAV,EAAgB;MAAE,OAAO,IAAP;IAAc,CAAhD,GAAmDG,EAA1d;IAAA,IAA8dE,EAAE,GAAGb,EAAE,CAACc,mBAAte;IAAA,IAA2fA,mBAAmB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAUL,IAAV,EAAgBO,QAAhB,EAA0B,CAAG,CAA7C,GAAgDF,EAAjkB;IAAA,IAAqkBG,EAAE,GAAGhB,EAAE,CAACiB,kBAA7kB;IAAA,IAAimBA,kBAAkB,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,UAAUR,IAAV,EAAgB,CAAG,CAAnC,GAAsCQ,EAA5pB;IAAA,IAAgqBE,EAAE,GAAGlB,EAAE,CAACmB,MAAxqB;IAAA,IAAgrBA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB1B,aAAa,CAAC4B,OAAd,CAAsBC,aAAtB,EAAhB,GAAwDH,EAAjvB;IAAA,IAAqvBI,EAAE,GAAGtB,EAAE,CAACuB,GAA7vB;IAAA,IAAkwBA,GAAG,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB3B,MAAM,CAAC6B,IAAP,EAAhB,GAAgCF,EAAxyB;;IACA,KAAKG,OAAL,GAAevB,MAAf;IACA,KAAKwB,QAAL,GAAgBnB,OAAhB;IACA,KAAKoB,kBAAL,GAA0BjB,iBAA1B;IACA,KAAKkB,kBAAL,GAA0BhB,iBAA1B;IACA,KAAKiB,oBAAL,GAA4Bf,mBAA5B;IACA,KAAKgB,mBAAL,GAA2Bb,kBAA3B;IACA,KAAKc,QAAL,GAAgBZ,MAAM,CAACa,OAAvB;IACA,KAAKC,mBAAL,GAA2Bd,MAAM,CAACe,kBAAlC;IACA,KAAKC,MAAL,GAAc,EAAd;IACA,KAAKC,eAAL,GAAuB,EAAvB;IACA,KAAKC,gBAAL,GAAwB,EAAxB;IACA,KAAKC,qBAAL,GAA6B,EAA7B;IACA,KAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;IACA,KAAKC,IAAL,GAAYlB,GAAZ;IACA,KAAKmB,OAAL,GAAe,KAAf;EACH;EACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;EACI5C,IAAI,CAAC6C,SAAL,CAAeC,OAAf,GAAyB,UAAUzC,kBAAV,EAA8BC,OAA9B,EAAuCe,MAAvC,EAA+C;IACpE,IAAI0B,KAAK,GAAG,IAAZ;;IACA,IAAIC,GAAG,GAAG1C,OAAO,CAAC2C,KAAR,EAAV,CAFoE,CAGpE;;IACA,IAAIC,WAAW,GAAG,KAAKX,gBAAvB;IACA,IAAIY,QAAQ,GAAGD,WAAW,CAACF,GAAD,CAA1B;;IACA,IAAI,CAACG,QAAL,EAAe;MACXD,WAAW,CAACF,GAAD,CAAX,GAAmB,EAAnB;IACH;;IACD,OAAO,IAAI7F,OAAJ,CAAY,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;MAC1C,IAAIgG,OAAO,GAAG,IAAd;MACA,IAAIC,SAAS,GAAGC,UAAU,CAAC,YAAY;QACnC;QACA;QACA;QACA,IAAIC,eAAe,GAAGL,WAAW,CAACF,GAAD,CAAjC;;QACA,IAAIO,eAAJ,EAAqB;UACjBL,WAAW,CAACF,GAAD,CAAX,GAAmBO,eAAe,CAACC,MAAhB,CAAuB,UAAUC,IAAV,EAAgB;YAAE,OAAOA,IAAI,KAAKL,OAAhB;UAA0B,CAAnE,CAAnB;QACH;;QACD,IAAIA,OAAO,CAACM,WAAR,EAAJ,EAA2B,CACvB;QACH,CAFD,MAGK;UACD;UACA,IAAIC,WAAW,GAAGZ,KAAK,CAACa,mBAAN,CAA0BtD,OAA1B,CAAlB;;UACA,IAAIuD,SAAS,GAAGd,KAAK,CAACe,GAAN,CAAUxD,OAAV,IAAqByC,KAAK,CAACV,MAAN,CAAaW,GAAb,EAAkB9D,MAAvC,GAAgD,CAAhE;UACAkE,OAAO,CAAChG,MAAR,CAAe,CAAC,GAAGwC,mBAAmB,CAACmE,QAAxB,EAAkC,uCAAuCC,MAAvC,CAA8CjB,KAAK,CAACZ,mBAApD,EAAyE,wCAAzE,EAAmH6B,MAAnH,CAA0HL,WAA1H,EAAuI,sBAAvI,EAA+JK,MAA/J,CAAsKH,SAAtK,EAAiL,GAAjL,CAAlC,CAAf;QACH;MACJ,CAjByB,EAiBvBd,KAAK,CAACZ,mBAjBiB,CAA1B;MAkBAiB,OAAO,GAAG,IAAIa,cAAJ,CAAmBjB,GAAnB,EAAwB3C,kBAAxB,EAA4CgB,MAA5C,EAAoDnE,OAApD,EAA6DE,MAA7D,EAAqEiG,SAArE,EAAgFN,KAAK,CAACJ,IAAtF,CAAV;MACAO,WAAW,CAACF,GAAD,CAAX,CAAiB7D,IAAjB,CAAsBiE,OAAtB;;MACAL,KAAK,CAACmB,8BAAN,CAAqC5D,OAArC;IACH,CAvBM,CAAP;EAwBH,CAjCD;EAkCA;AACJ;AACA;AACA;AACA;;;EACIN,IAAI,CAAC6C,SAAL,CAAesB,KAAf,GAAuB,UAAU7D,OAAV,EAAmB;IACtC,OAAO,KAAK8D,SAAL,CAAe9D,OAAO,CAAC2C,KAAR,EAAf,CAAP;EACH,CAFD;;EAGAjD,IAAI,CAAC6C,SAAL,CAAehF,KAAf,GAAuB,UAAUyC,OAAV,EAAmB+D,gBAAnB,EAAqC;IACxD,IAAIrB,GAAG,GAAG1C,OAAO,CAAC2C,KAAR,EAAV;;IACA,IAAID,GAAG,IAAI,KAAKX,MAAhB,EAAwB;MACpB,KAAKA,MAAL,CAAYW,GAAZ,EAAiBnF,KAAjB,CAAuBwG,gBAAvB;IACH;EACJ,CALD;EAMA;AACJ;AACA;AACA;;;EACIrE,IAAI,CAAC6C,SAAL,CAAeyB,KAAf,GAAuB,YAAY;IAC/B,OAAO3H,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIoG,KAAK,GAAG,IAAZ;;MACA,OAAOjF,WAAW,CAAC,IAAD,EAAO,UAAUmC,EAAV,EAAc;QACnC,QAAQA,EAAE,CAAChC,KAAX;UACI,KAAK,CAAL;YACI,KAAK2E,OAAL,GAAe,IAAf;YACA,OAAO,CAAC;YAAE;YAAH,EAAczF,OAAO,CAACoH,GAAR,CAAYhF,MAAM,CAACiF,IAAP,CAAY,KAAKnC,MAAjB,EAAyBoC,GAAzB,CAA6B,UAAUzB,GAAV,EAAe;cAAE,OAAOD,KAAK,CAACqB,SAAN,CAAgBpB,GAAhB,CAAP;YAA8B,CAA5E,CAAZ,CAAd,CAAP;;UACJ,KAAK,CAAL;YACA;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;YACoB,OAAO,CAAC;YAAE;YAAH,EAAe/C,EAAE,CAAC/B,IAAH,EAAf,CAAP;QAhBJ;MAkBH,CAnBiB,CAAlB;IAoBH,CAtBe,CAAhB;EAuBH,CAxBD;EAyBA;AACJ;AACA;AACA;;;EACI8B,IAAI,CAAC6C,SAAL,CAAe6B,OAAf,GAAyB,UAAUC,SAAV,EAAqB;IAC1C,IAAI5B,KAAK,GAAG,IAAZ;;IACA,IAAI6B,UAAU,GAAGD,SAAS,CAACF,GAAV,CAAc,UAAUI,CAAV,EAAa;MAAE,OAAOA,CAAC,CAAC5B,KAAF,EAAP;IAAmB,CAAhD,CAAjB;IACA,IAAI6B,WAAW,GAAGvF,MAAM,CAACiF,IAAP,CAAY,KAAKnC,MAAjB,CAAlB;IACA,IAAI0C,WAAW,GAAGD,WAAW,CAACtB,MAAZ,CAAmB,UAAUwB,CAAV,EAAa;MAAE,OAAOJ,UAAU,CAACK,OAAX,CAAmBD,CAAnB,MAA0B,CAAC,CAAlC;IAAsC,CAAxE,CAAlB;IACA,OAAO7H,OAAO,CAACoH,GAAR,CAAYQ,WAAW,CAACN,GAAZ,CAAgB,UAAUzB,GAAV,EAAe;MAAE,OAAOD,KAAK,CAACqB,SAAN,CAAgBpB,GAAhB,CAAP;IAA8B,CAA/D,CAAZ,CAAP;EACH,CAND;EAOA;AACJ;AACA;AACA;AACA;;;EACIhD,IAAI,CAAC6C,SAAL,CAAeiB,GAAf,GAAqB,UAAUxD,OAAV,EAAmB;IACpC,OAAOA,OAAO,CAAC2C,KAAR,MAAmB,KAAKZ,MAA/B;EACH,CAFD;EAGA;AACJ;AACA;AACA;AACA;;;EACIrC,IAAI,CAAC6C,SAAL,CAAee,mBAAf,GAAqC,UAAUtD,OAAV,EAAmB;IACpD,OAAO,KAAKkC,qBAAL,CAA2BlC,OAAO,CAAC2C,KAAR,EAA3B,KAA+C,CAAtD;EACH,CAFD;;EAGAjD,IAAI,CAAC6C,SAAL,CAAeqC,uBAAf,GAAyC,UAAUlC,GAAV,EAAe;IACpD,IAAImC,IAAI,GAAG,KAAK9C,MAAL,CAAYW,GAAZ,CAAX;;IACA,IAAI,CAACmC,IAAL,EAAW;MACPA,IAAI,GAAG,IAAIC,iBAAJ,EAAP;MACA,KAAK/C,MAAL,CAAYW,GAAZ,IAAmBmC,IAAnB;MACA,KAAK7C,eAAL,CAAqBU,GAArB,IAA4B,CAA5B;IACH;;IACD,OAAOmC,IAAP;EACH,CARD;;EASAnF,IAAI,CAAC6C,SAAL,CAAewC,QAAf,GAA0B,UAAUhF,kBAAV,EAA8BC,OAA9B,EAAuCgF,UAAvC,EAAmD;IACzE,OAAO3I,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIqG,GAAJ,EAASmC,IAAT,EAAeI,UAAf,EAA2BC,cAA3B,EAA2CC,QAA3C,EAAqDD,cAArD,EAAqEE,UAArE;;MACA,IAAI3C,KAAK,GAAG,IAAZ;;MACA,OAAOjF,WAAW,CAAC,IAAD,EAAO,UAAUmC,EAAV,EAAc;QACnC,QAAQA,EAAE,CAAChC,KAAX;UACI,KAAK,CAAL;YACI,IAAI,KAAK2E,OAAT,EAAkB;cACd,MAAM,CAAC,GAAGhD,mBAAmB,CAACmE,QAAxB,EAAkC,uDAAlC,CAAN;YACH;;YACDf,GAAG,GAAG1C,OAAO,CAAC2C,KAAR,EAAN;YACAkC,IAAI,GAAG,KAAKD,uBAAL,CAA6BlC,GAA7B,CAAP;YACA,IAAI,CAAC,CAACsC,UAAN,EAAkB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YAClBrF,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACI,IAAI,CAACkH,IAAI,CAACjG,MAAV,EAAkB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YAClBqG,UAAU,GAAGJ,IAAI,CAAClG,GAAL,EAAb;;YACA,IAAI,KAAK+C,mBAAT,EAA8B;cAC1B,KAAKA,mBAAL,CAAyBuD,UAAzB;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK1D,kBAAL,CAAwBxB,kBAAxB,EAA4CkF,UAA5C,CAAd,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,CAACtF,EAAE,CAAC/B,IAAH,EAAL,EAAgB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP,CADpB,CAEI;;YACAyH,gBAAgB,CAAC3C,GAAD,EAAM,KAAKR,qBAAX,CAAhB;;YACA,IAAI,KAAKG,IAAL,CAAUiD,cAAV,EAAJ,EAAgC;cAC5B,KAAKjD,IAAL,CAAUkD,KAAV,CAAgB,GAAG7B,MAAH,CAAUuB,UAAV,EAAsB,0BAAtB,EAAkDvB,MAAlD,CAAyDhB,GAAzD,CAAhB;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAe;cAAEyC,QAAQ,EAAEF,UAAZ;cAAwBJ,IAAI,EAAEA;YAA9B,CAAf,CAAP;;UACJ,KAAK,CAAL;YACIA,IAAI,CAACW,WAAL,CAAiBP,UAAjB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK3D,QAAL,CAAc2D,UAAd,CAAd,CAAP;;UACJ,KAAK,CAAL;YACItF,EAAE,CAAC/B,IAAH;;YACA+B,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACR,KAAK,CAAL;YACI;YACA,IAAI,KAAKgE,QAAL,GAAgB,CAApB,EAAuB;cACnBuD,cAAc,GAAG,KAAK5B,mBAAL,CAAyBtD,OAAzB,IAAoC,KAAKgC,eAAL,CAAqBU,GAArB,CAArD;;cACA,IAAIwC,cAAc,IAAI,KAAKvD,QAA3B,EAAqC;gBACjC;gBACA,OAAO,CAAC;gBAAE;gBAAH,EAAe;kBAAEwD,QAAQ,EAAE,IAAZ;kBAAkBN,IAAI,EAAEA;gBAAxB,CAAf,CAAP;cACH;YACJ,CARL,CASI;YACA;;;YACA,KAAK7C,eAAL,CAAqBU,GAArB,IAA4B,KAAKV,eAAL,CAAqBU,GAArB,IAA4B,CAAxD;YACA/C,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIgC,EAAE,CAAC7B,IAAH,CAAQe,IAAR,CAAa,CAAC,CAAD,GAAM,EAAN,EAAU,EAAV,CAAb;;YACAqG,cAAc,GAAG,KAAK5B,mBAAL,CAAyBtD,OAAzB,IAAoC6E,IAAI,CAACjG,MAA1D;YACA,IAAI,EAAEsG,cAAc,IAAI,KAAKvD,QAAvB,IAAmCqD,UAArC,CAAJ,EAAsD,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACtDI,UAAU,GAAGP,IAAI,CAAClG,GAAL,EAAb;;YACA,IAAI,KAAK+C,mBAAT,EAA8B;cAC1B,KAAKA,mBAAL,CAAyB0D,UAAzB;YACH;;YACDP,IAAI,CAACW,WAAL,CAAiBJ,UAAjB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK9D,QAAL,CAAc8D,UAAd,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIzF,EAAE,CAAC/B,IAAH;;YACA+B,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK0D,OAAL,CAAatB,kBAAb,EAAiCC,OAAjC,EAA0C,UAAUA,OAAV,EAAmBmF,QAAnB,EAA6B;cAAE,OAAO1C,KAAK,CAACN,QAAN,CAAenC,OAAf,EAAwBmF,QAAxB,EAAkCN,IAAlC,CAAP;YAAiD,CAA1H,CAAd,CAAP;;UACR,KAAK,EAAL;YACI;YACAM,QAAQ,GAAGxF,EAAE,CAAC/B,IAAH,EAAX;YACAiH,IAAI,CAACY,SAAL,CAAeN,QAAf;YACAE,gBAAgB,CAAC3C,GAAD,EAAM,KAAKR,qBAAX,CAAhB;;YACA,IAAI,KAAKG,IAAL,CAAUiD,cAAV,EAAJ,EAAgC;cAC5B,KAAKjD,IAAL,CAAUkD,KAAV,CAAgB,GAAG7B,MAAH,CAAUyB,QAAV,EAAoB,wBAApB,EAA8CzB,MAA9C,CAAqDhB,GAArD,CAAhB;YACH;;YACD,OAAO,CAAC;YAAE;YAAH,EAAc,EAAd,CAAP;;UACJ,KAAK,EAAL;YACI,KAAKV,eAAL,CAAqBU,GAArB,IAA4B,KAAKV,eAAL,CAAqBU,GAArB,IAA4B,CAAxD;YACA,OAAO,CAAC;YAAE;YAAH,CAAP;;UACJ,KAAK,EAAL;YAAS,OAAO,CAAC;YAAE;YAAH,EAAe;cAAEyC,QAAQ,EAAEA,QAAZ;cAAsBN,IAAI,EAAEA;YAA5B,CAAf,CAAP;QAtEb;MAwEH,CAzEiB,CAAlB;IA0EH,CA7Ee,CAAhB;EA8EH,CA/ED;;EAgFAnF,IAAI,CAAC6C,SAAL,CAAeJ,QAAf,GAA0B,UAAUnC,OAAV,EAAmBmF,QAAnB,EAA6BN,IAA7B,EAAmC;IACzD,OAAOxI,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIqG,GAAJ;;MACA,IAAID,KAAK,GAAG,IAAZ;;MACA,OAAOjF,WAAW,CAAC,IAAD,EAAO,UAAUmC,EAAV,EAAc;QACnC,QAAQA,EAAE,CAAChC,KAAX;UACI,KAAK,CAAL;YACI+E,GAAG,GAAG1C,OAAO,CAAC2C,KAAR,EAAN;YACAhD,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YACIgC,EAAE,CAAC7B,IAAH,CAAQe,IAAR,CAAa,CAAC,CAAD,GAAM,CAAN,EAAS,EAAT,CAAb;;YACA,IAAI,CAACgG,IAAI,CAACa,QAAL,EAAL,EAAsB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;YACtB,OAAO,CAAC;YAAE;YAAH,EAAc,KAAKlE,kBAAL,CAAwB2D,QAAxB,CAAd,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,CAAC,CAAExF,EAAE,CAAC/B,IAAH,EAAP,EAAmB,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;YACnB,IAAI,KAAKyE,IAAL,CAAUiD,cAAV,EAAJ,EAAgC;cAC5B,KAAKjD,IAAL,CAAUkD,KAAV,CAAgB,GAAG7B,MAAH,CAAUyB,QAAV,EAAoB,+CAApB,EAAqEzB,MAArE,CAA4EhB,GAA5E,EAAiF,+BAAjF,CAAhB;YACH;;YACDmC,IAAI,CAACW,WAAL,CAAiBL,QAAjB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK7D,QAAL,CAAc6D,QAAd,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIxF,EAAE,CAAC/B,IAAH;;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACJ,KAAK,CAAL;YACI,IAAI,KAAK6D,oBAAT,EAA+B;cAC3B,KAAKA,oBAAL,CAA0B0D,QAA1B,EAAoC;gBAChCQ,OAAO,EAAE,UAAUC,KAAV,EAAiB;kBACtBnD,KAAK,CAACJ,IAAN,CAAWkD,KAAX,CAAiB,mBAAmB7B,MAAnB,CAA0ByB,QAA1B,EAAoC,+BAApC,EAAqEzB,MAArE,CAA4EkC,KAA5E,CAAjB;;kBACA,IAAIf,IAAI,GAAGpC,KAAK,CAACV,MAAN,CAAaW,GAAb,CAAX;;kBACA,IAAImC,IAAJ,EAAU;oBACNpC,KAAK,CAACV,MAAN,CAAaW,GAAb,IAAoBmC,IAAI,CAAC3B,MAAL,CAAY,UAAU2C,CAAV,EAAa;sBAAE,OAAOA,CAAC,KAAKV,QAAb;oBAAwB,CAAnD,CAApB;oBACAN,IAAI,CAACW,WAAL,CAAiBL,QAAjB;kBACH,CANqB,CAOtB;kBACA;kBACA;;;kBACA1C,KAAK,CAACnB,QAAN,CAAe6D,QAAf,EAAyBW,KAAzB,CAA+B,YAAY,CAAG,CAA9C;gBACH;cAZ+B,CAApC;YAcH;;YACDjB,IAAI,CAAChG,IAAL,CAAUsG,QAAV;;YACA,IAAI,KAAK9C,IAAL,CAAUiD,cAAV,EAAJ,EAAgC;cAC5B,KAAKjD,IAAL,CAAUkD,KAAV,CAAgB,GAAG7B,MAAH,CAAUyB,QAAV,EAAoB,wBAApB,EAA8CzB,MAA9C,CAAqDhB,GAArD,CAAhB;YACH;;YACD/C,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;UACR,KAAK,CAAL;YACI;YACA,IAAI,KAAK0E,IAAL,CAAUiD,cAAV,EAAJ,EAAgC;cAC5B,KAAKjD,IAAL,CAAUkD,KAAV,CAAgB,GAAG7B,MAAH,CAAUyB,QAAV,EAAoB,+CAApB,EAAqEzB,MAArE,CAA4EhB,GAA5E,EAAiF,+BAAjF,CAAhB;YACH;;YACDmC,IAAI,CAACW,WAAL,CAAiBL,QAAjB;YACA,OAAO,CAAC;YAAE;YAAH,EAAc,KAAK7D,QAAL,CAAc6D,QAAd,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIxF,EAAE,CAAC/B,IAAH;;YACA+B,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,EAAc,EAAd,CAAP;;UACR,KAAK,CAAL;YACIoI,gBAAgB,CAACrD,GAAD,EAAM,KAAKR,qBAAX,CAAhB;;YACA,KAAK0B,8BAAL,CAAoC5D,OAApC;;YACA,OAAO,CAAC;YAAE;YAAH,CAAP;;UACJ,KAAK,EAAL;YAAS,OAAO,CAAC;YAAE;YAAH,CAAP;QAxDb;MA0DH,CA3DiB,CAAlB;IA4DH,CA/De,CAAhB;EAgEH,CAjED;;EAkEAN,IAAI,CAAC6C,SAAL,CAAeuB,SAAf,GAA2B,UAAUpB,GAAV,EAAe;IACtC,OAAOrG,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,YAAY;MAC/C,IAAIwI,IAAJ,EAAUmB,eAAV,EAA2Bb,QAA3B;MACA,OAAO3H,WAAW,CAAC,IAAD,EAAO,UAAUmC,EAAV,EAAc;QACnC,QAAQA,EAAE,CAAChC,KAAX;UACI,KAAK,CAAL;YACIkH,IAAI,GAAG,KAAK9C,MAAL,CAAYW,GAAZ,CAAP;YACAsD,eAAe,GAAG,EAAlB;YACA,IAAI,CAACnB,IAAL,EAAW,OAAO,CAAC;YAAE;YAAH,EAAc,CAAd,CAAP;;YACX,OAAOA,IAAI,CAACjG,MAAZ,EAAoB;cAChBuG,QAAQ,GAAGN,IAAI,CAAClG,GAAL,EAAX;;cACA,IAAI,KAAK+C,mBAAT,EAA8B;gBAC1B,KAAKA,mBAAL,CAAyByD,QAAzB;cACH;;cACDa,eAAe,CAACnH,IAAhB,CAAqB,KAAKyC,QAAL,CAAc6D,QAAd,CAArB;YACH;;YACDN,IAAI,CAACb,KAAL;YACA,OAAO,KAAKjC,MAAL,CAAYW,GAAZ,CAAP;YACA,OAAO,CAAC;YAAE;YAAH,EAAc7F,OAAO,CAACoH,GAAR,CAAY+B,eAAZ,CAAd,CAAP;;UACJ,KAAK,CAAL;YACIrG,EAAE,CAAC/B,IAAH;;YACA+B,EAAE,CAAChC,KAAH,GAAW,CAAX;;UACJ,KAAK,CAAL;YAAQ,OAAO,CAAC;YAAE;YAAH,CAAP;QAlBZ;MAoBH,CArBiB,CAAlB;IAsBH,CAxBe,CAAhB;EAyBH,CA1BD;;EA2BA+B,IAAI,CAAC6C,SAAL,CAAeqB,8BAAf,GAAgD,UAAU5D,OAAV,EAAmB;IAC/D,IAAIyC,KAAK,GAAG,IAAZ;;IACA,IAAIC,GAAG,GAAG1C,OAAO,CAAC2C,KAAR,EAAV;IACA,IAAIE,QAAQ,GAAG,KAAKZ,gBAAL,CAAsBS,GAAtB,CAAf;;IACA,IAAIG,QAAJ,EAAc;MACV,IAAIoD,gBAAgB,GAAGpD,QAAQ,CAACqD,KAAT,EAAvB,CADU,CAC+B;;MACzC,IAAID,gBAAJ,EAAsB;QAClB,KAAKlB,QAAL,CAAckB,gBAAgB,CAACE,OAA/B,EAAwCnG,OAAxC,EAAiDiG,gBAAgB,CAACjB,UAAlE,EACKc,KADL,CACW,UAAUF,KAAV,EAAiB;UACxB;UACA;UACAK,gBAAgB,CAACnJ,MAAjB,CAAwB8I,KAAxB;UACA,OAAO;YAAET,QAAQ,EAAE;UAAZ,CAAP;QACH,CAND,EAOK7H,IAPL,CAOU,UAAUqC,EAAV,EAAc;UACpB,IAAIwF,QAAQ,GAAGxF,EAAE,CAACwF,QAAlB;UAAA,IAA4BN,IAAI,GAAGlF,EAAE,CAACkF,IAAtC;;UACA,IAAIM,QAAJ,EAAc;YACV;YACA,IAAIc,gBAAgB,CAAC7C,WAAjB,EAAJ,EAAoC;cAChC;cACA;cACAX,KAAK,CAACN,QAAN,CAAenC,OAAf,EAAwBmF,QAAxB,EAAkCN,IAAlC;YACH,CAJD,MAKK;cACD;cACAoB,gBAAgB,CAACrJ,OAAjB,CAAyBuI,QAAzB,EAFC,CAEmC;YACvC;UACJ,CAXD,MAYK;YACD;YACA;YACA,IAAI,CAACc,gBAAgB,CAAC7C,WAAjB,EAAL,EAAqC;cACjC,IAAI,CAACX,KAAK,CAACR,gBAAN,CAAuBS,GAAvB,CAAL,EAAkC;gBAC9BD,KAAK,CAACR,gBAAN,CAAuBS,GAAvB,IAA8B,EAA9B;cACH;;cACDD,KAAK,CAACR,gBAAN,CAAuBS,GAAvB,EAA4B0D,OAA5B,CAAoCH,gBAApC;YACH;UACJ;QACJ,CA/BD;MAgCH,CAjCD,MAkCK;QACD,OAAO,KAAKhE,gBAAL,CAAsBS,GAAtB,CAAP;MACH;IACJ;EACJ,CA5CD;;EA6CA,OAAOhD,IAAP;AACH,CA3XyB,EAA1B;AA4XA;AACA;AACA;AACA;AACA;;;AACA,SAAS2F,gBAAT,CAA0B3C,GAA1B,EAA+B2D,oBAA/B,EAAqD;EACjD,IAAIC,YAAY,GAAGD,oBAAoB,CAAC3D,GAAD,CAApB,IAA6B,CAAhD;EACA2D,oBAAoB,CAAC3D,GAAD,CAApB,GAA4B4D,YAAY,GAAG,CAA3C;AACH;AACD;AACA;AACA;AACA;AACA;;;AACA,SAASP,gBAAT,CAA0BrD,GAA1B,EAA+B2D,oBAA/B,EAAqD;EACjD,IAAIC,YAAY,GAAGD,oBAAoB,CAAC3D,GAAD,CAApB,IAA6B,CAAhD;EACA,IAAI6D,SAAS,GAAGD,YAAY,GAAG,CAA/B;;EACA,IAAIC,SAAS,GAAG,CAAhB,EAAmB;IACfF,oBAAoB,CAAC3D,GAAD,CAApB,GAA4B6D,SAA5B;EACH,CAFD,MAGK;IACD,OAAOF,oBAAoB,CAAC3D,GAAD,CAA3B;EACH;AACJ;;AACD,IAAIiB,cAAc;AAAG;AAAe,YAAY;EAC5C,SAASA,cAAT,CAAwBjB,GAAxB,EAA6ByD,OAA7B,EAAsCpF,MAAtC,EAA8CnE,OAA9C,EAAuDE,MAAvD,EAA+DiG,SAA/D,EAA0E5B,GAA1E,EAA+E;IAC3E,KAAKqF,IAAL,GAAY9D,GAAZ;IACA,KAAK+D,QAAL,GAAgBN,OAAhB;IACA,KAAKO,QAAL,GAAgB9J,OAAhB;IACA,KAAK+J,OAAL,GAAe7J,MAAf;IACA,KAAK8J,UAAL,GAAkB7D,SAAlB;IACA,KAAKV,IAAL,GAAYlB,GAAZ;IACA,KAAK0F,UAAL,GAAkB,KAAlB;IACA,KAAKC,OAAL,GAAe/F,MAAM,IAAI,EAAzB;EACH;;EACD9B,MAAM,CAACC,cAAP,CAAsByE,cAAc,CAACpB,SAArC,EAAgD,SAAhD,EAA2D;IACvDwE,GAAG,EAAE,YAAY;MACb,OAAO,KAAKN,QAAZ;IACH,CAHsD;IAIvDO,UAAU,EAAE,KAJ2C;IAKvDC,YAAY,EAAE;EALyC,CAA3D;EAOAhI,MAAM,CAACC,cAAP,CAAsByE,cAAc,CAACpB,SAArC,EAAgD,YAAhD,EAA8D;IAC1DwE,GAAG,EAAE,YAAY;MACb,OAAO,KAAKD,OAAL,CAAa9B,UAAb,IAA2B,KAAlC;IACH,CAHyD;IAI1DgC,UAAU,EAAE,KAJ8C;IAK1DC,YAAY,EAAE;EAL4C,CAA9D;;EAOAtD,cAAc,CAACpB,SAAf,CAAyBa,WAAzB,GAAuC,YAAY;IAC/C,OAAO,KAAKyD,UAAZ;EACH,CAFD;;EAGAlD,cAAc,CAACpB,SAAf,CAAyB3F,OAAzB,GAAmC,UAAUuI,QAAV,EAAoB;IACnD,IAAI,KAAK0B,UAAT,EAAqB;MACjB;IACH;;IACD,KAAKA,UAAL,GAAkB,IAAlB;IACAK,YAAY,CAAC,KAAKN,UAAN,CAAZ;;IACA,IAAI,KAAKvE,IAAL,CAAUiD,cAAV,EAAJ,EAAgC;MAC5B,KAAKjD,IAAL,CAAUkD,KAAV,CAAgB,GAAG7B,MAAH,CAAUyB,QAAV,EAAoB,0BAApB,EAAgDzB,MAAhD,CAAuD,KAAK8C,IAA5D,CAAhB;IACH;;IACD,KAAKE,QAAL,CAAcvB,QAAd;EACH,CAVD;;EAWAxB,cAAc,CAACpB,SAAf,CAAyBzF,MAAzB,GAAkC,UAAU8I,KAAV,EAAiB;IAC/C,IAAI,KAAKiB,UAAT,EAAqB;MACjB;IACH;;IACD,KAAKA,UAAL,GAAkB,IAAlB;IACAK,YAAY,CAAC,KAAKN,UAAN,CAAZ;;IACA,KAAKD,OAAL,CAAaf,KAAb;EACH,CAPD;;EAQA,OAAOjC,cAAP;AACH,CAhDmC,EAApC;;AAiDA,IAAImB,iBAAiB;AAAG;AAAe,YAAY;EAC/C,SAASA,iBAAT,GAA6B;IACzB,KAAKqC,OAAL,GAAe,IAAf;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;EACH;;EACDxC,iBAAiB,CAACvC,SAAlB,CAA4BmD,QAA5B,GAAuC,YAAY;IAC/C,OAAO,KAAKyB,OAAZ;EACH,CAFD;;EAGArC,iBAAiB,CAACvC,SAAlB,CAA4ByB,KAA5B,GAAoC,YAAY;IAC5C,KAAKmD,OAAL,GAAe,KAAf;IACA,KAAKC,SAAL,GAAiB,EAAjB;IACA,KAAKC,cAAL,GAAsB,IAAIC,GAAJ,EAAtB;EACH,CAJD;;EAKAxC,iBAAiB,CAACvC,SAAlB,CAA4BW,MAA5B,GAAqC,UAAUqE,SAAV,EAAqB;IACtD,KAAKH,SAAL,GAAiB,KAAKA,SAAL,CAAelE,MAAf,CAAsBqE,SAAtB,CAAjB;IACA,OAAO,IAAP;EACH,CAHD;;EAIAzC,iBAAiB,CAACvC,SAAlB,CAA4BhF,KAA5B,GAAoC,UAAUwG,gBAAV,EAA4B;IAC5D,KAAKqD,SAAL,CAAeI,OAAf,CAAuBzD,gBAAvB;;IACA,KAAKsD,cAAL,CAAoBG,OAApB,CAA4BzD,gBAA5B;EACH,CAHD;;EAIA9E,MAAM,CAACC,cAAP,CAAsB4F,iBAAiB,CAACvC,SAAxC,EAAmD,QAAnD,EAA6D;IACzDwE,GAAG,EAAE,YAAY;MACb,OAAO,KAAKK,SAAL,CAAexI,MAAtB;IACH,CAHwD;IAIzDoI,UAAU,EAAE,KAJ6C;IAKzDC,YAAY,EAAE;EAL2C,CAA7D;;EAOAnC,iBAAiB,CAACvC,SAAlB,CAA4B5D,GAA5B,GAAkC,YAAY;IAC1C,IAAI8I,OAAO,GAAG,KAAKL,SAAL,CAAezI,GAAf,EAAd;;IACA,KAAK0I,cAAL,CAAoBK,GAApB,CAAwBD,OAAxB;;IACA,OAAOA,OAAP;EACH,CAJD;;EAKA3C,iBAAiB,CAACvC,SAAlB,CAA4B1D,IAA5B,GAAmC,UAAU4I,OAAV,EAAmB;IAClD,KAAKJ,cAAL,CAAoBM,MAApB,CAA2BF,OAA3B;;IACA,OAAO,KAAKL,SAAL,CAAevI,IAAf,CAAoB4I,OAApB,CAAP;EACH,CAHD;;EAIA3C,iBAAiB,CAACvC,SAAlB,CAA4BkD,SAA5B,GAAwC,UAAUgC,OAAV,EAAmB;IACvD,KAAKJ,cAAL,CAAoBK,GAApB,CAAwBD,OAAxB;EACH,CAFD;;EAGA3C,iBAAiB,CAACvC,SAAlB,CAA4BiD,WAA5B,GAA0C,UAAUiC,OAAV,EAAmB;IACzD,KAAKJ,cAAL,CAAoBM,MAApB,CAA2BF,OAA3B;EACH,CAFD;;EAGA,OAAO3C,iBAAP;AACH,CA7CsC,EAAvC;;AA8CA3F,OAAO,CAAC6B,OAAR,GAAkBtB,IAAlB"},"metadata":{},"sourceType":"script"}